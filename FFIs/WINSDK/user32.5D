let ActivateKeyboardLayout = (requireSharedLibrary "user32.DLL" 'Pppi "ActivateKeyboardLayout") in 
let AdjustWindowRect = (requireSharedLibrary "user32.DLL" 'Pipii "AdjustWindowRect") in 
let AdjustWindowRectEx = (requireSharedLibrary "user32.DLL" 'Pipiii "AdjustWindowRectEx") in 
let AnyPopup = (requireSharedLibrary "user32.DLL" 'Piv "AnyPopup") in 
let AppendMenuA = (requireSharedLibrary "user32.DLL" 'Pipiis "AppendMenuA") in 
let AppendMenuW = (requireSharedLibrary "user32.DLL" 'Pipiip "AppendMenuW") in 
let ArrangeIconicWindows = (requireSharedLibrary "user32.DLL" 'Pip "ArrangeIconicWindows") in 
let AttachThreadInput = (requireSharedLibrary "user32.DLL" 'Piiii "AttachThreadInput") in 
let BeginDeferWindowPos = (requireSharedLibrary "user32.DLL" 'P?i "BeginDeferWindowPos") in 
let BeginPaint = (requireSharedLibrary "user32.DLL" 'Pppp "BeginPaint") in 
let BringWindowToTop = (requireSharedLibrary "user32.DLL" 'Pip "BringWindowToTop") in 
let BroadcastSystemMessage = (requireSharedLibrary "user32.DLL" 'Plipiip "BroadcastSystemMessage") in 
let BroadcastSystemMessageA = (requireSharedLibrary "user32.DLL" 'Plipiip "BroadcastSystemMessageA") in 
let BroadcastSystemMessageW = (requireSharedLibrary "user32.DLL" 'Plipiip "BroadcastSystemMessageW") in 
let CallMsgFilterA = (requireSharedLibrary "user32.DLL" 'Pipi "CallMsgFilterA") in 
let CallMsgFilterW = (requireSharedLibrary "user32.DLL" 'Pipi "CallMsgFilterW") in 
let CallNextHookEx = (requireSharedLibrary "user32.DLL" 'Pl?iip "CallNextHookEx") in 
let CallWindowProcA = (requireSharedLibrary "user32.DLL" 'Plppiip "CallWindowProcA") in 
let CallWindowProcW = (requireSharedLibrary "user32.DLL" 'Plppiip "CallWindowProcW") in 
let CascadeWindows = (requireSharedLibrary "user32.DLL" 'Phpipip "CascadeWindows") in 
let ChangeClipboardChain = (requireSharedLibrary "user32.DLL" 'Pipp "ChangeClipboardChain") in 
let ChangeDisplaySettingsA = (requireSharedLibrary "user32.DLL" 'Pl?i "ChangeDisplaySettingsA") in 
let ChangeDisplaySettingsExA = (requireSharedLibrary "user32.DLL" 'Plsppip "ChangeDisplaySettingsExA") in 
let ChangeDisplaySettingsExW = (requireSharedLibrary "user32.DLL" 'Plpppip "ChangeDisplaySettingsExW") in 
let ChangeDisplaySettingsW = (requireSharedLibrary "user32.DLL" 'Pl?i "ChangeDisplaySettingsW") in 
let ChangeMenuA = (requireSharedLibrary "user32.DLL" 'Pipisii "ChangeMenuA") in 
let ChangeMenuW = (requireSharedLibrary "user32.DLL" 'Pipipii "ChangeMenuW") in 
let CharLowerA = (requireSharedLibrary "user32.DLL" 'Ppp "CharLowerA") in 
let CharLowerBuffA = (requireSharedLibrary "user32.DLL" 'Pipi "CharLowerBuffA") in 
let CharLowerBuffW = (requireSharedLibrary "user32.DLL" 'Pipi "CharLowerBuffW") in 
let CharLowerW = (requireSharedLibrary "user32.DLL" 'Ppp "CharLowerW") in 
let CharNextA = (requireSharedLibrary "user32.DLL" 'Pps "CharNextA") in 
let CharNextExA = (requireSharedLibrary "user32.DLL" 'Pphsi "CharNextExA") in 
let CharNextW = (requireSharedLibrary "user32.DLL" 'Ppp "CharNextW") in 
let CharPrevA = (requireSharedLibrary "user32.DLL" 'Ppss "CharPrevA") in 
let CharPrevExA = (requireSharedLibrary "user32.DLL" 'Pphssi "CharPrevExA") in 
let CharPrevW = (requireSharedLibrary "user32.DLL" 'Pppp "CharPrevW") in 
let CharToOemA = (requireSharedLibrary "user32.DLL" 'Pisp "CharToOemA") in 
let CharToOemBuffA = (requireSharedLibrary "user32.DLL" 'Pispi "CharToOemBuffA") in 
let CharToOemBuffW = (requireSharedLibrary "user32.DLL" 'Pippi "CharToOemBuffW") in 
let CharToOemW = (requireSharedLibrary "user32.DLL" 'Pipp "CharToOemW") in 
let CharUpperA = (requireSharedLibrary "user32.DLL" 'Ppp "CharUpperA") in 
let CharUpperBuffA = (requireSharedLibrary "user32.DLL" 'Pipi "CharUpperBuffA") in 
let CharUpperBuffW = (requireSharedLibrary "user32.DLL" 'Pipi "CharUpperBuffW") in 
let CharUpperW = (requireSharedLibrary "user32.DLL" 'Ppp "CharUpperW") in 
let CheckDlgButton = (requireSharedLibrary "user32.DLL" 'Pipii "CheckDlgButton") in 
let CheckMenuItem = (requireSharedLibrary "user32.DLL" 'Pipii "CheckMenuItem") in 
let CheckMenuRadioItem = (requireSharedLibrary "user32.DLL" 'Pipiiii "CheckMenuRadioItem") in 
let CheckRadioButton = (requireSharedLibrary "user32.DLL" 'Pipiii "CheckRadioButton") in 
let ChildWindowFromPoint = (requireSharedLibrary "user32.DLL" 'Ppp? "ChildWindowFromPoint") in 
let ChildWindowFromPointEx = (requireSharedLibrary "user32.DLL" 'Ppp?i "ChildWindowFromPointEx") in 
let ClientToScreen = (requireSharedLibrary "user32.DLL" 'Pipp "ClientToScreen") in 
let ClipCursor = (requireSharedLibrary "user32.DLL" 'Pip "ClipCursor") in 
let CloseClipboard = (requireSharedLibrary "user32.DLL" 'Piv "CloseClipboard") in 
let CloseDesktop = (requireSharedLibrary "user32.DLL" 'Pip "CloseDesktop") in 
let CloseWindow = (requireSharedLibrary "user32.DLL" 'Pip "CloseWindow") in 
let CloseWindowStation = (requireSharedLibrary "user32.DLL" 'Pi? "CloseWindowStation") in 
let CopyAcceleratorTableA = (requireSharedLibrary "user32.DLL" 'Pippi "CopyAcceleratorTableA") in 
let CopyAcceleratorTableW = (requireSharedLibrary "user32.DLL" 'Pippi "CopyAcceleratorTableW") in 
let CopyIcon = (requireSharedLibrary "user32.DLL" 'Ppp "CopyIcon") in 
let CopyImage = (requireSharedLibrary "user32.DLL" 'Pppiiii "CopyImage") in 
let CopyRect = (requireSharedLibrary "user32.DLL" 'Pipp "CopyRect") in 
let CountClipboardFormats = (requireSharedLibrary "user32.DLL" 'Piv "CountClipboardFormats") in 
let CreateAcceleratorTableA = (requireSharedLibrary "user32.DLL" 'Pppi "CreateAcceleratorTableA") in 
let CreateAcceleratorTableW = (requireSharedLibrary "user32.DLL" 'Pppi "CreateAcceleratorTableW") in 
let CreateCaret = (requireSharedLibrary "user32.DLL" 'Pippii "CreateCaret") in 
let CreateCursor = (requireSharedLibrary "user32.DLL" 'Pppiiiipp "CreateCursor") in 
let CreateDesktopA = (requireSharedLibrary "user32.DLL" 'Ppsspi?p "CreateDesktopA") in 
let CreateDesktopW = (requireSharedLibrary "user32.DLL" 'Pppppi?p "CreateDesktopW") in 
let CreateDialogIndirectParamA = (requireSharedLibrary "user32.DLL" 'Ppppppp "CreateDialogIndirectParamA") in 
let CreateDialogIndirectParamW = (requireSharedLibrary "user32.DLL" 'Ppppppp "CreateDialogIndirectParamW") in 
let CreateDialogParamA = (requireSharedLibrary "user32.DLL" 'Pppsppp "CreateDialogParamA") in 
let CreateDialogParamW = (requireSharedLibrary "user32.DLL" 'Ppppppp "CreateDialogParamW") in 
let CreateIcon = (requireSharedLibrary "user32.DLL" 'Pppiiiipp "CreateIcon") in 
let CreateIconFromResource = (requireSharedLibrary "user32.DLL" 'Pppiii "CreateIconFromResource") in 
let CreateIconFromResourceEx = (requireSharedLibrary "user32.DLL" 'Pppiiiiii "CreateIconFromResourceEx") in 
let CreateIconIndirect = (requireSharedLibrary "user32.DLL" 'Ppp "CreateIconIndirect") in 
let CreateMDIWindowA = (requireSharedLibrary "user32.DLL" 'Ppssiiiiippp "CreateMDIWindowA") in 
let CreateMDIWindowW = (requireSharedLibrary "user32.DLL" 'Ppppiiiiippp "CreateMDIWindowW") in 
let CreateMenu = (requireSharedLibrary "user32.DLL" 'Ppv "CreateMenu") in 
let CreatePopupMenu = (requireSharedLibrary "user32.DLL" 'Ppv "CreatePopupMenu") in 
let CreateWindowExA = (requireSharedLibrary "user32.DLL" 'Ppissiiiiipppp "CreateWindowExA") in 
let CreateWindowExW = (requireSharedLibrary "user32.DLL" 'Ppippiiiiipppp "CreateWindowExW") in 
let CreateWindowStationA = (requireSharedLibrary "user32.DLL" 'P?piip "CreateWindowStationA") in 
let CreateWindowStationW = (requireSharedLibrary "user32.DLL" 'P?piip "CreateWindowStationW") in 
let DdeAbandonTransaction = (requireSharedLibrary "user32.DLL" 'Piipi "DdeAbandonTransaction") in 
let DdeAccessData = (requireSharedLibrary "user32.DLL" 'Pp?p "DdeAccessData") in 
let DdeAddData = (requireSharedLibrary "user32.DLL" 'P??pii "DdeAddData") in 
let DdeClientTransaction = (requireSharedLibrary "user32.DLL" 'P?pip?iiip "DdeClientTransaction") in 
let DdeCmpStringHandles = (requireSharedLibrary "user32.DLL" 'Pi?? "DdeCmpStringHandles") in 
let DdeConnect = (requireSharedLibrary "user32.DLL" 'Ppi??? "DdeConnect") in 
let DdeConnectList = (requireSharedLibrary "user32.DLL" 'Ppi??p? "DdeConnectList") in 
let DdeCreateDataHandle = (requireSharedLibrary "user32.DLL" 'P?ipii?ii "DdeCreateDataHandle") in 
let DdeCreateStringHandleA = (requireSharedLibrary "user32.DLL" 'P?ipi "DdeCreateStringHandleA") in 
let DdeCreateStringHandleW = (requireSharedLibrary "user32.DLL" 'P?ipi "DdeCreateStringHandleW") in 
let DdeDisconnect = (requireSharedLibrary "user32.DLL" 'Pip "DdeDisconnect") in 
let DdeDisconnectList = (requireSharedLibrary "user32.DLL" 'Pip "DdeDisconnectList") in 
let DdeEnableCallback = (requireSharedLibrary "user32.DLL" 'Piipi "DdeEnableCallback") in 
let DdeFreeDataHandle = (requireSharedLibrary "user32.DLL" 'Pi? "DdeFreeDataHandle") in 
let DdeFreeStringHandle = (requireSharedLibrary "user32.DLL" 'Pii? "DdeFreeStringHandle") in 
let DdeGetData = (requireSharedLibrary "user32.DLL" 'Pi?pii "DdeGetData") in 
let DdeGetLastError = (requireSharedLibrary "user32.DLL" 'Pii "DdeGetLastError") in 
let DdeImpersonateClient = (requireSharedLibrary "user32.DLL" 'Pip "DdeImpersonateClient") in 
let DdeInitializeA = (requireSharedLibrary "user32.DLL" 'Pip?ii "DdeInitializeA") in 
let DdeInitializeW = (requireSharedLibrary "user32.DLL" 'Pip?ii "DdeInitializeW") in 
let DdeKeepStringHandle = (requireSharedLibrary "user32.DLL" 'Pii? "DdeKeepStringHandle") in 
let DdeNameService = (requireSharedLibrary "user32.DLL" 'P?i??i "DdeNameService") in 
let DdePostAdvise = (requireSharedLibrary "user32.DLL" 'Pii?? "DdePostAdvise") in 
let DdeQueryConvInfo = (requireSharedLibrary "user32.DLL" 'Pipi? "DdeQueryConvInfo") in 
let DdeQueryNextServer = (requireSharedLibrary "user32.DLL" 'Pppp "DdeQueryNextServer") in 
let DdeQueryStringA = (requireSharedLibrary "user32.DLL" 'Pii?pii "DdeQueryStringA") in 
let DdeQueryStringW = (requireSharedLibrary "user32.DLL" 'Pii?pii "DdeQueryStringW") in 
let DdeReconnect = (requireSharedLibrary "user32.DLL" 'Ppp "DdeReconnect") in 
let DdeSetQualityOfService = (requireSharedLibrary "user32.DLL" 'Pipp? "DdeSetQualityOfService") in 
let DdeSetUserHandle = (requireSharedLibrary "user32.DLL" 'Pipii "DdeSetUserHandle") in 
let DdeUnaccessData = (requireSharedLibrary "user32.DLL" 'Pi? "DdeUnaccessData") in 
let DdeUninitialize = (requireSharedLibrary "user32.DLL" 'Pii "DdeUninitialize") in 
let DefDlgProcA = (requireSharedLibrary "user32.DLL" 'Plpiip "DefDlgProcA") in 
let DefDlgProcW = (requireSharedLibrary "user32.DLL" 'Plpiip "DefDlgProcW") in 
let DefFrameProcA = (requireSharedLibrary "user32.DLL" 'Plppiip "DefFrameProcA") in 
let DefFrameProcW = (requireSharedLibrary "user32.DLL" 'Plppiip "DefFrameProcW") in 
let DefMDIChildProcA = (requireSharedLibrary "user32.DLL" 'Plpiip "DefMDIChildProcA") in 
let DefMDIChildProcW = (requireSharedLibrary "user32.DLL" 'Plpiip "DefMDIChildProcW") in 
let DefWindowProcA = (requireSharedLibrary "user32.DLL" 'Plpiip "DefWindowProcA") in 
let DefWindowProcW = (requireSharedLibrary "user32.DLL" 'Plpiip "DefWindowProcW") in 
let DeferWindowPos = (requireSharedLibrary "user32.DLL" 'P??ppiiiii "DeferWindowPos") in 
let DeleteMenu = (requireSharedLibrary "user32.DLL" 'Pipii "DeleteMenu") in 
let DeregisterShellHookWindow = (requireSharedLibrary "user32.DLL" 'Pip "DeregisterShellHookWindow") in 
let DestroyAcceleratorTable = (requireSharedLibrary "user32.DLL" 'Pip "DestroyAcceleratorTable") in 
let DestroyCaret = (requireSharedLibrary "user32.DLL" 'Piv "DestroyCaret") in 
let DestroyCursor = (requireSharedLibrary "user32.DLL" 'Pip "DestroyCursor") in 
let DestroyIcon = (requireSharedLibrary "user32.DLL" 'Pip "DestroyIcon") in 
let DestroyMenu = (requireSharedLibrary "user32.DLL" 'Pip "DestroyMenu") in 
let DestroyWindow = (requireSharedLibrary "user32.DLL" 'Pip "DestroyWindow") in 
let DialogBoxIndirectParamA = (requireSharedLibrary "user32.DLL" 'Pippppp "DialogBoxIndirectParamA") in 
let DialogBoxIndirectParamW = (requireSharedLibrary "user32.DLL" 'Pippppp "DialogBoxIndirectParamW") in 
let DialogBoxParamA = (requireSharedLibrary "user32.DLL" 'Pipsppp "DialogBoxParamA") in 
let DialogBoxParamW = (requireSharedLibrary "user32.DLL" 'Pippppp "DialogBoxParamW") in 
let DispatchMessageA = (requireSharedLibrary "user32.DLL" 'Plp "DispatchMessageA") in 
let DispatchMessageW = (requireSharedLibrary "user32.DLL" 'Plp "DispatchMessageW") in 
let DlgDirListA = (requireSharedLibrary "user32.DLL" 'Pippiii "DlgDirListA") in 
let DlgDirListComboBoxA = (requireSharedLibrary "user32.DLL" 'Pippiii "DlgDirListComboBoxA") in 
let DlgDirListComboBoxW = (requireSharedLibrary "user32.DLL" 'Pippiii "DlgDirListComboBoxW") in 
let DlgDirListW = (requireSharedLibrary "user32.DLL" 'Pippiii "DlgDirListW") in 
let DlgDirSelectComboBoxExA = (requireSharedLibrary "user32.DLL" 'Pippii "DlgDirSelectComboBoxExA") in 
let DlgDirSelectComboBoxExW = (requireSharedLibrary "user32.DLL" 'Pippii "DlgDirSelectComboBoxExW") in 
let DlgDirSelectExA = (requireSharedLibrary "user32.DLL" 'Pippii "DlgDirSelectExA") in 
let DlgDirSelectExW = (requireSharedLibrary "user32.DLL" 'Pippii "DlgDirSelectExW") in 
let DragDetect = (requireSharedLibrary "user32.DLL" 'Pip? "DragDetect") in 
let DragObject = (requireSharedLibrary "user32.DLL" 'Pippiip "DragObject") in 
let DrawAnimatedRects = (requireSharedLibrary "user32.DLL" 'Pipipp "DrawAnimatedRects") in 
let DrawCaption = (requireSharedLibrary "user32.DLL" 'Pipppi "DrawCaption") in 
let DrawEdge = (requireSharedLibrary "user32.DLL" 'Pippii "DrawEdge") in 
let DrawFocusRect = (requireSharedLibrary "user32.DLL" 'Pipp "DrawFocusRect") in 
let DrawFrameControl = (requireSharedLibrary "user32.DLL" 'Pippii "DrawFrameControl") in 
let DrawIcon = (requireSharedLibrary "user32.DLL" 'Pipiip "DrawIcon") in 
let DrawIconEx = (requireSharedLibrary "user32.DLL" 'Pipiipiiipi "DrawIconEx") in 
let DrawMenuBar = (requireSharedLibrary "user32.DLL" 'Pip "DrawMenuBar") in 
let DrawStateA = (requireSharedLibrary "user32.DLL" 'Pipp?piiiiii "DrawStateA") in 
let DrawStateW = (requireSharedLibrary "user32.DLL" 'Pipp?piiiiii "DrawStateW") in 
let DrawTextA = (requireSharedLibrary "user32.DLL" 'Pipsipi "DrawTextA") in 
let DrawTextExA = (requireSharedLibrary "user32.DLL" 'Pippipip "DrawTextExA") in 
let DrawTextExW = (requireSharedLibrary "user32.DLL" 'Pippipip "DrawTextExW") in 
let DrawTextW = (requireSharedLibrary "user32.DLL" 'Pippipi "DrawTextW") in 
let EmptyClipboard = (requireSharedLibrary "user32.DLL" 'Piv "EmptyClipboard") in 
let EnableMenuItem = (requireSharedLibrary "user32.DLL" 'Pipii "EnableMenuItem") in 
let EnableScrollBar = (requireSharedLibrary "user32.DLL" 'Pipii "EnableScrollBar") in 
let EnableWindow = (requireSharedLibrary "user32.DLL" 'Pipi "EnableWindow") in 
let EndDeferWindowPos = (requireSharedLibrary "user32.DLL" 'Pi? "EndDeferWindowPos") in 
let EndDialog = (requireSharedLibrary "user32.DLL" 'Pipi "EndDialog") in 
let EndMenu = (requireSharedLibrary "user32.DLL" 'Piv "EndMenu") in 
let EndPaint = (requireSharedLibrary "user32.DLL" 'Pipp "EndPaint") in 
let EnumChildWindows = (requireSharedLibrary "user32.DLL" 'Pip?p "EnumChildWindows") in 
let EnumClipboardFormats = (requireSharedLibrary "user32.DLL" 'Pii "EnumClipboardFormats") in 
let EnumDesktopWindows = (requireSharedLibrary "user32.DLL" 'Pip?p "EnumDesktopWindows") in 
let EnumDesktopsA = (requireSharedLibrary "user32.DLL" 'Pi??p "EnumDesktopsA") in 
let EnumDesktopsW = (requireSharedLibrary "user32.DLL" 'Pi??p "EnumDesktopsW") in 
let EnumDisplayDevicesA = (requireSharedLibrary "user32.DLL" 'Pisi?i "EnumDisplayDevicesA") in 
let EnumDisplayDevicesW = (requireSharedLibrary "user32.DLL" 'Pipi?i "EnumDisplayDevicesW") in 
let EnumDisplayMonitors = (requireSharedLibrary "user32.DLL" 'Pipp?p "EnumDisplayMonitors") in 
let EnumDisplaySettingsA = (requireSharedLibrary "user32.DLL" 'Pisi? "EnumDisplaySettingsA") in 
let EnumDisplaySettingsW = (requireSharedLibrary "user32.DLL" 'Pipi? "EnumDisplaySettingsW") in 
let EnumPropsA = (requireSharedLibrary "user32.DLL" 'Pip? "EnumPropsA") in 
let EnumPropsExA = (requireSharedLibrary "user32.DLL" 'Pip?p "EnumPropsExA") in 
let EnumPropsExW = (requireSharedLibrary "user32.DLL" 'Pip?p "EnumPropsExW") in 
let EnumPropsW = (requireSharedLibrary "user32.DLL" 'Pip? "EnumPropsW") in 
let EnumThreadWindows = (requireSharedLibrary "user32.DLL" 'Pii?p "EnumThreadWindows") in 
let EnumWindowStationsA = (requireSharedLibrary "user32.DLL" 'Pi?p "EnumWindowStationsA") in 
let EnumWindowStationsW = (requireSharedLibrary "user32.DLL" 'Pi?p "EnumWindowStationsW") in 
let EnumWindows = (requireSharedLibrary "user32.DLL" 'Pi?p "EnumWindows") in 
let EqualRect = (requireSharedLibrary "user32.DLL" 'Pipp "EqualRect") in 
let ExcludeUpdateRgn = (requireSharedLibrary "user32.DLL" 'Pipp "ExcludeUpdateRgn") in 
let ExitWindowsEx = (requireSharedLibrary "user32.DLL" 'Piii "ExitWindowsEx") in 
let FillRect = (requireSharedLibrary "user32.DLL" 'Pippp "FillRect") in 
let FindWindowA = (requireSharedLibrary "user32.DLL" 'Ppss "FindWindowA") in 
let FindWindowExA = (requireSharedLibrary "user32.DLL" 'Ppppss "FindWindowExA") in 
let FindWindowExW = (requireSharedLibrary "user32.DLL" 'Pppppp "FindWindowExW") in 
let FindWindowW = (requireSharedLibrary "user32.DLL" 'Pppp "FindWindowW") in 
let FlashWindow = (requireSharedLibrary "user32.DLL" 'Pipi "FlashWindow") in 
let FrameRect = (requireSharedLibrary "user32.DLL" 'Pippp "FrameRect") in 
let FreeDDElParam = (requireSharedLibrary "user32.DLL" 'Piip "FreeDDElParam") in 
let GetActiveWindow = (requireSharedLibrary "user32.DLL" 'Ppv "GetActiveWindow") in 
let GetAltTabInfoA = (requireSharedLibrary "user32.DLL" 'Pipi?pi "GetAltTabInfoA") in 
let GetAltTabInfoW = (requireSharedLibrary "user32.DLL" 'Pipi?pi "GetAltTabInfoW") in 
let GetAncestor = (requireSharedLibrary "user32.DLL" 'Pppi "GetAncestor") in 
let GetAsyncKeyState = (requireSharedLibrary "user32.DLL" 'Phi "GetAsyncKeyState") in 
let GetCapture = (requireSharedLibrary "user32.DLL" 'Ppv "GetCapture") in 
let GetCaretBlinkTime = (requireSharedLibrary "user32.DLL" 'Piv "GetCaretBlinkTime") in 
let GetCaretPos = (requireSharedLibrary "user32.DLL" 'Pip "GetCaretPos") in 
let GetClassInfoA = (requireSharedLibrary "user32.DLL" 'Pipsp "GetClassInfoA") in 
let GetClassInfoExA = (requireSharedLibrary "user32.DLL" 'Pipsp "GetClassInfoExA") in 
let GetClassInfoExW = (requireSharedLibrary "user32.DLL" 'Pippp "GetClassInfoExW") in 
let GetClassInfoW = (requireSharedLibrary "user32.DLL" 'Pippp "GetClassInfoW") in 
let GetClassLongA = (requireSharedLibrary "user32.DLL" 'Pipi "GetClassLongA") in 
let GetClassLongW = (requireSharedLibrary "user32.DLL" 'Pipi "GetClassLongW") in 
let GetClassNameA = (requireSharedLibrary "user32.DLL" 'Pippi "GetClassNameA") in 
let GetClassNameW = (requireSharedLibrary "user32.DLL" 'Pippi "GetClassNameW") in 
let GetClassWord = (requireSharedLibrary "user32.DLL" 'Phpi "GetClassWord") in 
let GetClientRect = (requireSharedLibrary "user32.DLL" 'Pipp "GetClientRect") in 
let GetClipCursor = (requireSharedLibrary "user32.DLL" 'Pip "GetClipCursor") in 
let GetClipboardData = (requireSharedLibrary "user32.DLL" 'Ppi "GetClipboardData") in 
let GetClipboardFormatNameA = (requireSharedLibrary "user32.DLL" 'Piipi "GetClipboardFormatNameA") in 
let GetClipboardFormatNameW = (requireSharedLibrary "user32.DLL" 'Piipi "GetClipboardFormatNameW") in 
let GetClipboardOwner = (requireSharedLibrary "user32.DLL" 'Ppv "GetClipboardOwner") in 
let GetClipboardViewer = (requireSharedLibrary "user32.DLL" 'Ppv "GetClipboardViewer") in 
let GetComboBoxInfo = (requireSharedLibrary "user32.DLL" 'Pip? "GetComboBoxInfo") in 
let GetCursor = (requireSharedLibrary "user32.DLL" 'Ppv "GetCursor") in 
let GetCursorInfo = (requireSharedLibrary "user32.DLL" 'Pip "GetCursorInfo") in 
let GetCursorPos = (requireSharedLibrary "user32.DLL" 'Pip "GetCursorPos") in 
let GetDC = (requireSharedLibrary "user32.DLL" 'Ppp "GetDC") in 
let GetDCEx = (requireSharedLibrary "user32.DLL" 'Ppppi "GetDCEx") in 
let GetDesktopWindow = (requireSharedLibrary "user32.DLL" 'Ppv "GetDesktopWindow") in 
let GetDialogBaseUnits = (requireSharedLibrary "user32.DLL" 'Plv "GetDialogBaseUnits") in 
let GetDlgCtrlID = (requireSharedLibrary "user32.DLL" 'Pip "GetDlgCtrlID") in 
let GetDlgItem = (requireSharedLibrary "user32.DLL" 'Pppi "GetDlgItem") in 
let GetDlgItemInt = (requireSharedLibrary "user32.DLL" 'Pipipi "GetDlgItemInt") in 
let GetDlgItemTextA = (requireSharedLibrary "user32.DLL" 'Pipipi "GetDlgItemTextA") in 
let GetDlgItemTextW = (requireSharedLibrary "user32.DLL" 'Pipipi "GetDlgItemTextW") in 
let GetDoubleClickTime = (requireSharedLibrary "user32.DLL" 'Piv "GetDoubleClickTime") in 
let GetFocus = (requireSharedLibrary "user32.DLL" 'Ppv "GetFocus") in 
let GetForegroundWindow = (requireSharedLibrary "user32.DLL" 'Ppv "GetForegroundWindow") in 
let GetIconInfo = (requireSharedLibrary "user32.DLL" 'Pipp "GetIconInfo") in 
let GetInputState = (requireSharedLibrary "user32.DLL" 'Piv "GetInputState") in 
let GetKBCodePage = (requireSharedLibrary "user32.DLL" 'Piv "GetKBCodePage") in 
let GetKeyNameTextA = (requireSharedLibrary "user32.DLL" 'Pilpi "GetKeyNameTextA") in 
let GetKeyNameTextW = (requireSharedLibrary "user32.DLL" 'Pilpi "GetKeyNameTextW") in 
let GetKeyState = (requireSharedLibrary "user32.DLL" 'Phi "GetKeyState") in 
let GetKeyboardLayout = (requireSharedLibrary "user32.DLL" 'Ppi "GetKeyboardLayout") in 
let GetKeyboardLayoutList = (requireSharedLibrary "user32.DLL" 'Piip "GetKeyboardLayoutList") in 
let GetKeyboardLayoutNameA = (requireSharedLibrary "user32.DLL" 'Pip "GetKeyboardLayoutNameA") in 
let GetKeyboardLayoutNameW = (requireSharedLibrary "user32.DLL" 'Pip "GetKeyboardLayoutNameW") in 
let GetKeyboardState = (requireSharedLibrary "user32.DLL" 'Pip "GetKeyboardState") in 
let GetKeyboardType = (requireSharedLibrary "user32.DLL" 'Pii "GetKeyboardType") in 
let GetLastActivePopup = (requireSharedLibrary "user32.DLL" 'Ppp "GetLastActivePopup") in 
let GetLastInputInfo = (requireSharedLibrary "user32.DLL" 'Pi? "GetLastInputInfo") in 
let GetListBoxInfo = (requireSharedLibrary "user32.DLL" 'Pip "GetListBoxInfo") in 
let GetMenu = (requireSharedLibrary "user32.DLL" 'Ppp "GetMenu") in 
let GetMenuBarInfo = (requireSharedLibrary "user32.DLL" 'Pipll? "GetMenuBarInfo") in 
let GetMenuCheckMarkDimensions = (requireSharedLibrary "user32.DLL" 'Plv "GetMenuCheckMarkDimensions") in 
let GetMenuContextHelpId = (requireSharedLibrary "user32.DLL" 'Pip "GetMenuContextHelpId") in 
let GetMenuDefaultItem = (requireSharedLibrary "user32.DLL" 'Pipii "GetMenuDefaultItem") in 
let GetMenuInfo = (requireSharedLibrary "user32.DLL" 'Pipp "GetMenuInfo") in 
let GetMenuItemCount = (requireSharedLibrary "user32.DLL" 'Pip "GetMenuItemCount") in 
let GetMenuItemID = (requireSharedLibrary "user32.DLL" 'Pipi "GetMenuItemID") in 
let GetMenuItemInfoA = (requireSharedLibrary "user32.DLL" 'Pipiip "GetMenuItemInfoA") in 
let GetMenuItemInfoW = (requireSharedLibrary "user32.DLL" 'Pipiip "GetMenuItemInfoW") in 
let GetMenuItemRect = (requireSharedLibrary "user32.DLL" 'Pippip "GetMenuItemRect") in 
let GetMenuState = (requireSharedLibrary "user32.DLL" 'Pipii "GetMenuState") in 
let GetMenuStringA = (requireSharedLibrary "user32.DLL" 'Pipipii "GetMenuStringA") in 
let GetMenuStringW = (requireSharedLibrary "user32.DLL" 'Pipipii "GetMenuStringW") in 
let GetMessageA = (requireSharedLibrary "user32.DLL" 'Pippii "GetMessageA") in 
let GetMessageExtraInfo = (requireSharedLibrary "user32.DLL" 'Plv "GetMessageExtraInfo") in 
let GetMessagePos = (requireSharedLibrary "user32.DLL" 'Piv "GetMessagePos") in 
let GetMessageTime = (requireSharedLibrary "user32.DLL" 'Plv "GetMessageTime") in 
let GetMessageW = (requireSharedLibrary "user32.DLL" 'Pippii "GetMessageW") in 
let GetMonitorInfoA = (requireSharedLibrary "user32.DLL" 'Pipp "GetMonitorInfoA") in 
let GetMonitorInfoW = (requireSharedLibrary "user32.DLL" 'Pipp "GetMonitorInfoW") in 
let GetNextDlgGroupItem = (requireSharedLibrary "user32.DLL" 'Ppppi "GetNextDlgGroupItem") in 
let GetNextDlgTabItem = (requireSharedLibrary "user32.DLL" 'Ppppi "GetNextDlgTabItem") in 
let GetOpenClipboardWindow = (requireSharedLibrary "user32.DLL" 'Ppv "GetOpenClipboardWindow") in 
let GetParent = (requireSharedLibrary "user32.DLL" 'Ppp "GetParent") in 
let GetPriorityClipboardFormat = (requireSharedLibrary "user32.DLL" 'Pipi "GetPriorityClipboardFormat") in 
let GetProcessWindowStation = (requireSharedLibrary "user32.DLL" 'P?v "GetProcessWindowStation") in 
let GetPropA = (requireSharedLibrary "user32.DLL" 'Ppps "GetPropA") in 
let GetPropW = (requireSharedLibrary "user32.DLL" 'Pppp "GetPropW") in 
let GetQueueStatus = (requireSharedLibrary "user32.DLL" 'Pii "GetQueueStatus") in 
let GetScrollBarInfo = (requireSharedLibrary "user32.DLL" 'Pipl? "GetScrollBarInfo") in 
let GetScrollInfo = (requireSharedLibrary "user32.DLL" 'Pipip "GetScrollInfo") in 
let GetScrollPos = (requireSharedLibrary "user32.DLL" 'Pipi "GetScrollPos") in 
let GetScrollRange = (requireSharedLibrary "user32.DLL" 'Pipipp "GetScrollRange") in 
let GetSubMenu = (requireSharedLibrary "user32.DLL" 'Pppi "GetSubMenu") in 
let GetSysColor = (requireSharedLibrary "user32.DLL" 'Pii "GetSysColor") in 
let GetSysColorBrush = (requireSharedLibrary "user32.DLL" 'Ppi "GetSysColorBrush") in 
let GetSystemMenu = (requireSharedLibrary "user32.DLL" 'Pppi "GetSystemMenu") in 
let GetSystemMetrics = (requireSharedLibrary "user32.DLL" 'Pii "GetSystemMetrics") in 
let GetTabbedTextExtentA = (requireSharedLibrary "user32.DLL" 'Pipsiip "GetTabbedTextExtentA") in 
let GetTabbedTextExtentW = (requireSharedLibrary "user32.DLL" 'Pippiip "GetTabbedTextExtentW") in 
let GetThreadDesktop = (requireSharedLibrary "user32.DLL" 'Ppi "GetThreadDesktop") in 
let GetTitleBarInfo = (requireSharedLibrary "user32.DLL" 'Pip? "GetTitleBarInfo") in 
let GetTopWindow = (requireSharedLibrary "user32.DLL" 'Ppp "GetTopWindow") in 
let GetUpdateRect = (requireSharedLibrary "user32.DLL" 'Pippi "GetUpdateRect") in 
let GetUpdateRgn = (requireSharedLibrary "user32.DLL" 'Pippi "GetUpdateRgn") in 
let GetUserObjectInformationA = (requireSharedLibrary "user32.DLL" 'Pipipip "GetUserObjectInformationA") in 
let GetUserObjectInformationW = (requireSharedLibrary "user32.DLL" 'Pipipip "GetUserObjectInformationW") in 
let GetUserObjectSecurity = (requireSharedLibrary "user32.DLL" 'Pip??ip "GetUserObjectSecurity") in 
let GetWindow = (requireSharedLibrary "user32.DLL" 'Pppi "GetWindow") in 
let GetWindowContextHelpId = (requireSharedLibrary "user32.DLL" 'Pip "GetWindowContextHelpId") in 
let GetWindowDC = (requireSharedLibrary "user32.DLL" 'Ppp "GetWindowDC") in 
let GetWindowInfo = (requireSharedLibrary "user32.DLL" 'Pipp "GetWindowInfo") in 
let GetWindowLongA = (requireSharedLibrary "user32.DLL" 'Plpi "GetWindowLongA") in 
let GetWindowLongW = (requireSharedLibrary "user32.DLL" 'Plpi "GetWindowLongW") in 
let GetWindowModuleFileNameA = (requireSharedLibrary "user32.DLL" 'Pippi "GetWindowModuleFileNameA") in 
let GetWindowModuleFileNameW = (requireSharedLibrary "user32.DLL" 'Pippi "GetWindowModuleFileNameW") in 
let GetWindowPlacement = (requireSharedLibrary "user32.DLL" 'Pipp "GetWindowPlacement") in 
let GetWindowRect = (requireSharedLibrary "user32.DLL" 'Pipp "GetWindowRect") in 
let GetWindowRgn = (requireSharedLibrary "user32.DLL" 'Pipp "GetWindowRgn") in 
let GetWindowTextA = (requireSharedLibrary "user32.DLL" 'Pippi "GetWindowTextA") in 
let GetWindowTextLengthA = (requireSharedLibrary "user32.DLL" 'Pip "GetWindowTextLengthA") in 
let GetWindowTextLengthW = (requireSharedLibrary "user32.DLL" 'Pip "GetWindowTextLengthW") in 
let GetWindowTextW = (requireSharedLibrary "user32.DLL" 'Pippi "GetWindowTextW") in 
let GetWindowThreadProcessId = (requireSharedLibrary "user32.DLL" 'Pipp "GetWindowThreadProcessId") in 
let GetWindowWord = (requireSharedLibrary "user32.DLL" 'Phpi "GetWindowWord") in 
let GrayStringA = (requireSharedLibrary "user32.DLL" 'Pippppiiiii "GrayStringA") in 
let GrayStringW = (requireSharedLibrary "user32.DLL" 'Pippppiiiii "GrayStringW") in 
let HideCaret = (requireSharedLibrary "user32.DLL" 'Pip "HideCaret") in 
let HiliteMenuItem = (requireSharedLibrary "user32.DLL" 'Pippii "HiliteMenuItem") in 
let ImpersonateDdeClientWindow = (requireSharedLibrary "user32.DLL" 'Pipp "ImpersonateDdeClientWindow") in 
let InSendMessage = (requireSharedLibrary "user32.DLL" 'Piv "InSendMessage") in 
let InflateRect = (requireSharedLibrary "user32.DLL" 'Pipii "InflateRect") in 
let InsertMenuA = (requireSharedLibrary "user32.DLL" 'Pipiiis "InsertMenuA") in 
let InsertMenuItemA = (requireSharedLibrary "user32.DLL" 'Pipiip "InsertMenuItemA") in 
let InsertMenuItemW = (requireSharedLibrary "user32.DLL" 'Pipiip "InsertMenuItemW") in 
let InsertMenuW = (requireSharedLibrary "user32.DLL" 'Pipiiip "InsertMenuW") in 
let InternalGetWindowText = (requireSharedLibrary "user32.DLL" 'Pippi "InternalGetWindowText") in 
let IntersectRect = (requireSharedLibrary "user32.DLL" 'Pippp "IntersectRect") in 
let InvalidateRect = (requireSharedLibrary "user32.DLL" 'Pippi "InvalidateRect") in 
let InvalidateRgn = (requireSharedLibrary "user32.DLL" 'Pippi "InvalidateRgn") in 
let InvertRect = (requireSharedLibrary "user32.DLL" 'Pipp "InvertRect") in 
let IsCharAlphaA = (requireSharedLibrary "user32.DLL" 'Pii "IsCharAlphaA") in 
let IsCharAlphaNumericA = (requireSharedLibrary "user32.DLL" 'Pii "IsCharAlphaNumericA") in 
let IsCharAlphaNumericW = (requireSharedLibrary "user32.DLL" 'Pii "IsCharAlphaNumericW") in 
let IsCharAlphaW = (requireSharedLibrary "user32.DLL" 'Pii "IsCharAlphaW") in 
let IsCharLowerA = (requireSharedLibrary "user32.DLL" 'Pii "IsCharLowerA") in 
let IsCharLowerW = (requireSharedLibrary "user32.DLL" 'Pii "IsCharLowerW") in 
let IsCharUpperA = (requireSharedLibrary "user32.DLL" 'Pii "IsCharUpperA") in 
let IsCharUpperW = (requireSharedLibrary "user32.DLL" 'Pii "IsCharUpperW") in 
let IsChild = (requireSharedLibrary "user32.DLL" 'Pipp "IsChild") in 
let IsClipboardFormatAvailable = (requireSharedLibrary "user32.DLL" 'Pii "IsClipboardFormatAvailable") in 
let IsDialogMessageA = (requireSharedLibrary "user32.DLL" 'Pipp "IsDialogMessageA") in 
let IsDialogMessageW = (requireSharedLibrary "user32.DLL" 'Pipp "IsDialogMessageW") in 
let IsDlgButtonChecked = (requireSharedLibrary "user32.DLL" 'Pipi "IsDlgButtonChecked") in 
let IsIconic = (requireSharedLibrary "user32.DLL" 'Pip "IsIconic") in 
let IsMenu = (requireSharedLibrary "user32.DLL" 'Pip "IsMenu") in 
let IsRectEmpty = (requireSharedLibrary "user32.DLL" 'Pip "IsRectEmpty") in 
let IsWindow = (requireSharedLibrary "user32.DLL" 'Pip "IsWindow") in 
let IsWindowEnabled = (requireSharedLibrary "user32.DLL" 'Pip "IsWindowEnabled") in 
let IsWindowUnicode = (requireSharedLibrary "user32.DLL" 'Pip "IsWindowUnicode") in 
let IsWindowVisible = (requireSharedLibrary "user32.DLL" 'Pip "IsWindowVisible") in 
let IsZoomed = (requireSharedLibrary "user32.DLL" 'Pip "IsZoomed") in 
let KillTimer = (requireSharedLibrary "user32.DLL" 'Pipi "KillTimer") in 
let LoadAcceleratorsA = (requireSharedLibrary "user32.DLL" 'Ppps "LoadAcceleratorsA") in 
let LoadAcceleratorsW = (requireSharedLibrary "user32.DLL" 'Pppp "LoadAcceleratorsW") in 
let LoadBitmapA = (requireSharedLibrary "user32.DLL" 'Ppps "LoadBitmapA") in 
let LoadBitmapW = (requireSharedLibrary "user32.DLL" 'Pppp "LoadBitmapW") in 
let LoadCursorA = (requireSharedLibrary "user32.DLL" 'Ppps "LoadCursorA") in 
let LoadCursorFromFileA = (requireSharedLibrary "user32.DLL" 'Pps "LoadCursorFromFileA") in 
let LoadCursorFromFileW = (requireSharedLibrary "user32.DLL" 'Ppp "LoadCursorFromFileW") in 
let LoadCursorW = (requireSharedLibrary "user32.DLL" 'Pppp "LoadCursorW") in 
let LoadIconA = (requireSharedLibrary "user32.DLL" 'Ppps "LoadIconA") in 
let LoadIconW = (requireSharedLibrary "user32.DLL" 'Pppp "LoadIconW") in 
let LoadImageA = (requireSharedLibrary "user32.DLL" 'Pppsiiii "LoadImageA") in 
let LoadImageW = (requireSharedLibrary "user32.DLL" 'Ppppiiii "LoadImageW") in 
let LoadKeyboardLayoutA = (requireSharedLibrary "user32.DLL" 'Ppsi "LoadKeyboardLayoutA") in 
let LoadKeyboardLayoutW = (requireSharedLibrary "user32.DLL" 'Pppi "LoadKeyboardLayoutW") in 
let LoadMenuA = (requireSharedLibrary "user32.DLL" 'Ppps "LoadMenuA") in 
let LoadMenuIndirectA = (requireSharedLibrary "user32.DLL" 'Ppp "LoadMenuIndirectA") in 
let LoadMenuIndirectW = (requireSharedLibrary "user32.DLL" 'Ppp "LoadMenuIndirectW") in 
let LoadMenuW = (requireSharedLibrary "user32.DLL" 'Pppp "LoadMenuW") in 
let LoadStringA = (requireSharedLibrary "user32.DLL" 'Pipipi "LoadStringA") in 
let LoadStringW = (requireSharedLibrary "user32.DLL" 'Pipipi "LoadStringW") in 
let LockWindowUpdate = (requireSharedLibrary "user32.DLL" 'Pip "LockWindowUpdate") in 
let LookupIconIdFromDirectory = (requireSharedLibrary "user32.DLL" 'Pipi "LookupIconIdFromDirectory") in 
let LookupIconIdFromDirectoryEx = (requireSharedLibrary "user32.DLL" 'Pipiiii "LookupIconIdFromDirectoryEx") in 
let MapDialogRect = (requireSharedLibrary "user32.DLL" 'Pipp "MapDialogRect") in 
let MapVirtualKeyA = (requireSharedLibrary "user32.DLL" 'Piii "MapVirtualKeyA") in 
let MapVirtualKeyExA = (requireSharedLibrary "user32.DLL" 'Piiip "MapVirtualKeyExA") in 
let MapVirtualKeyExW = (requireSharedLibrary "user32.DLL" 'Piiip "MapVirtualKeyExW") in 
let MapVirtualKeyW = (requireSharedLibrary "user32.DLL" 'Piii "MapVirtualKeyW") in 
let MapWindowPoints = (requireSharedLibrary "user32.DLL" 'Pipppi "MapWindowPoints") in 
let MenuItemFromPoint = (requireSharedLibrary "user32.DLL" 'Pipp? "MenuItemFromPoint") in 
let MessageBeep = (requireSharedLibrary "user32.DLL" 'Pii "MessageBeep") in 
let MessageBoxA = (requireSharedLibrary "user32.DLL" 'Pipssi "MessageBoxA") in 
let MessageBoxExA = (requireSharedLibrary "user32.DLL" 'Pipssih "MessageBoxExA") in 
let MessageBoxExW = (requireSharedLibrary "user32.DLL" 'Pipppih "MessageBoxExW") in 
let MessageBoxIndirectA = (requireSharedLibrary "user32.DLL" 'Pip "MessageBoxIndirectA") in 
let MessageBoxIndirectW = (requireSharedLibrary "user32.DLL" 'Pip "MessageBoxIndirectW") in 
let MessageBoxW = (requireSharedLibrary "user32.DLL" 'Pipppi "MessageBoxW") in 
let ModifyMenuA = (requireSharedLibrary "user32.DLL" 'Pipiiis "ModifyMenuA") in 
let ModifyMenuW = (requireSharedLibrary "user32.DLL" 'Pipiiip "ModifyMenuW") in 
let MoveWindow = (requireSharedLibrary "user32.DLL" 'Pipiiiii "MoveWindow") in 
let MsgWaitForMultipleObjects = (requireSharedLibrary "user32.DLL" 'Piipiii "MsgWaitForMultipleObjects") in 
let MsgWaitForMultipleObjectsEx = (requireSharedLibrary "user32.DLL" 'Piipiii "MsgWaitForMultipleObjectsEx") in 
let OemKeyScan = (requireSharedLibrary "user32.DLL" 'Pih "OemKeyScan") in 
let OemToCharA = (requireSharedLibrary "user32.DLL" 'Pisp "OemToCharA") in 
let OemToCharBuffA = (requireSharedLibrary "user32.DLL" 'Pispi "OemToCharBuffA") in 
let OemToCharBuffW = (requireSharedLibrary "user32.DLL" 'Pispi "OemToCharBuffW") in 
let OemToCharW = (requireSharedLibrary "user32.DLL" 'Pisp "OemToCharW") in 
let OffsetRect = (requireSharedLibrary "user32.DLL" 'Pipii "OffsetRect") in 
let OpenClipboard = (requireSharedLibrary "user32.DLL" 'Pip "OpenClipboard") in 
let OpenDesktopA = (requireSharedLibrary "user32.DLL" 'Pppiii "OpenDesktopA") in 
let OpenDesktopW = (requireSharedLibrary "user32.DLL" 'Pppiii "OpenDesktopW") in 
let OpenIcon = (requireSharedLibrary "user32.DLL" 'Pip "OpenIcon") in 
let OpenInputDesktop = (requireSharedLibrary "user32.DLL" 'Ppiii "OpenInputDesktop") in 
let OpenWindowStationA = (requireSharedLibrary "user32.DLL" 'P?pii "OpenWindowStationA") in 
let OpenWindowStationW = (requireSharedLibrary "user32.DLL" 'P?pii "OpenWindowStationW") in 
let PackDDElParam = (requireSharedLibrary "user32.DLL" 'Ppiii "PackDDElParam") in 
let PaintDesktop = (requireSharedLibrary "user32.DLL" 'Pip "PaintDesktop") in 
let PeekMessageA = (requireSharedLibrary "user32.DLL" 'Pippiii "PeekMessageA") in 
let PeekMessageW = (requireSharedLibrary "user32.DLL" 'Pippiii "PeekMessageW") in 
let PostMessageA = (requireSharedLibrary "user32.DLL" 'Pipiip "PostMessageA") in 
let PostMessageW = (requireSharedLibrary "user32.DLL" 'Pipiip "PostMessageW") in 
let PostQuitMessage = (requireSharedLibrary "user32.DLL" 'Pvi "PostQuitMessage") in 
let PostThreadMessageA = (requireSharedLibrary "user32.DLL" 'Piiiip "PostThreadMessageA") in 
let PostThreadMessageW = (requireSharedLibrary "user32.DLL" 'Piiiip "PostThreadMessageW") in 
let PtInRect = (requireSharedLibrary "user32.DLL" 'Pip? "PtInRect") in 
let RealChildWindowFromPoint = (requireSharedLibrary "user32.DLL" 'Ppp? "RealChildWindowFromPoint") in 
let RealGetWindowClassA = (requireSharedLibrary "user32.DLL" 'Pippi "RealGetWindowClassA") in 
let RealGetWindowClassW = (requireSharedLibrary "user32.DLL" 'Pippi "RealGetWindowClassW") in 
let RedrawWindow = (requireSharedLibrary "user32.DLL" 'Pipppi "RedrawWindow") in 
let RegisterClassA = (requireSharedLibrary "user32.DLL" 'Php "RegisterClassA") in 
let RegisterClassExA = (requireSharedLibrary "user32.DLL" 'Php "RegisterClassExA") in 
let RegisterClassExW = (requireSharedLibrary "user32.DLL" 'Php "RegisterClassExW") in 
let RegisterClassW = (requireSharedLibrary "user32.DLL" 'Php "RegisterClassW") in 
let RegisterClipboardFormatA = (requireSharedLibrary "user32.DLL" 'Pis "RegisterClipboardFormatA") in 
let RegisterClipboardFormatW = (requireSharedLibrary "user32.DLL" 'Pip "RegisterClipboardFormatW") in 
let RegisterHotKey = (requireSharedLibrary "user32.DLL" 'Pipiii "RegisterHotKey") in 
let RegisterWindowMessageA = (requireSharedLibrary "user32.DLL" 'Pis "RegisterWindowMessageA") in 
let RegisterWindowMessageW = (requireSharedLibrary "user32.DLL" 'Pip "RegisterWindowMessageW") in 
let ReleaseCapture = (requireSharedLibrary "user32.DLL" 'Piv "ReleaseCapture") in 
let ReleaseDC = (requireSharedLibrary "user32.DLL" 'Pipp "ReleaseDC") in 
let RemoveMenu = (requireSharedLibrary "user32.DLL" 'Pipii "RemoveMenu") in 
let RemovePropA = (requireSharedLibrary "user32.DLL" 'Ppps "RemovePropA") in 
let RemovePropW = (requireSharedLibrary "user32.DLL" 'Pppp "RemovePropW") in 
let ReplyMessage = (requireSharedLibrary "user32.DLL" 'Pil "ReplyMessage") in 
let ReuseDDElParam = (requireSharedLibrary "user32.DLL" 'Pppiiii "ReuseDDElParam") in 
let ScreenToClient = (requireSharedLibrary "user32.DLL" 'Pipp "ScreenToClient") in 
let ScrollDC = (requireSharedLibrary "user32.DLL" 'Pipiipppp "ScrollDC") in 
let ScrollWindow = (requireSharedLibrary "user32.DLL" 'Pipiipp "ScrollWindow") in 
let ScrollWindowEx = (requireSharedLibrary "user32.DLL" 'Pipiippppi "ScrollWindowEx") in 
let SendDlgItemMessageA = (requireSharedLibrary "user32.DLL" 'Plpiiip "SendDlgItemMessageA") in 
let SendDlgItemMessageW = (requireSharedLibrary "user32.DLL" 'Plpiiip "SendDlgItemMessageW") in 
let SendMessageA = (requireSharedLibrary "user32.DLL" 'Plpiip "SendMessageA") in 
let SendMessageCallbackA = (requireSharedLibrary "user32.DLL" 'Pipiip?i "SendMessageCallbackA") in 
let SendMessageCallbackW = (requireSharedLibrary "user32.DLL" 'Pipiip?i "SendMessageCallbackW") in 
let SendMessageTimeoutA = (requireSharedLibrary "user32.DLL" 'Plpiipiip "SendMessageTimeoutA") in 
let SendMessageTimeoutW = (requireSharedLibrary "user32.DLL" 'Plpiipiip "SendMessageTimeoutW") in 
let SendMessageW = (requireSharedLibrary "user32.DLL" 'Plpiip "SendMessageW") in 
let SendNotifyMessageA = (requireSharedLibrary "user32.DLL" 'Pipiip "SendNotifyMessageA") in 
let SendNotifyMessageW = (requireSharedLibrary "user32.DLL" 'Pipiip "SendNotifyMessageW") in 
let SetActiveWindow = (requireSharedLibrary "user32.DLL" 'Ppp "SetActiveWindow") in 
let SetCapture = (requireSharedLibrary "user32.DLL" 'Ppp "SetCapture") in 
let SetCaretBlinkTime = (requireSharedLibrary "user32.DLL" 'Pii "SetCaretBlinkTime") in 
let SetCaretPos = (requireSharedLibrary "user32.DLL" 'Piii "SetCaretPos") in 
let SetClassLongA = (requireSharedLibrary "user32.DLL" 'Pipil "SetClassLongA") in 
let SetClassLongW = (requireSharedLibrary "user32.DLL" 'Pipil "SetClassLongW") in 
let SetClassWord = (requireSharedLibrary "user32.DLL" 'Phpih "SetClassWord") in 
let SetClipboardData = (requireSharedLibrary "user32.DLL" 'Ppip "SetClipboardData") in 
let SetClipboardViewer = (requireSharedLibrary "user32.DLL" 'Ppp "SetClipboardViewer") in 
let SetCursor = (requireSharedLibrary "user32.DLL" 'Ppp "SetCursor") in 
let SetCursorPos = (requireSharedLibrary "user32.DLL" 'Piii "SetCursorPos") in 
let SetDebugErrorLevel = (requireSharedLibrary "user32.DLL" 'Pvi "SetDebugErrorLevel") in 
let SetDlgItemInt = (requireSharedLibrary "user32.DLL" 'Pipiii "SetDlgItemInt") in 
let SetDlgItemTextA = (requireSharedLibrary "user32.DLL" 'Pipis "SetDlgItemTextA") in 
let SetDlgItemTextW = (requireSharedLibrary "user32.DLL" 'Pipip "SetDlgItemTextW") in 
let SetDoubleClickTime = (requireSharedLibrary "user32.DLL" 'Pii "SetDoubleClickTime") in 
let SetFocus = (requireSharedLibrary "user32.DLL" 'Ppp "SetFocus") in 
let SetForegroundWindow = (requireSharedLibrary "user32.DLL" 'Pip "SetForegroundWindow") in 
let SetKeyboardState = (requireSharedLibrary "user32.DLL" 'Pip "SetKeyboardState") in 
let SetLastErrorEx = (requireSharedLibrary "user32.DLL" 'Pvii "SetLastErrorEx") in 
let SetMenu = (requireSharedLibrary "user32.DLL" 'Pipp "SetMenu") in 
let SetMenuContextHelpId = (requireSharedLibrary "user32.DLL" 'Pipi "SetMenuContextHelpId") in 
let SetMenuDefaultItem = (requireSharedLibrary "user32.DLL" 'Pipii "SetMenuDefaultItem") in 
let SetMenuInfo = (requireSharedLibrary "user32.DLL" 'Pipp "SetMenuInfo") in 
let SetMenuItemBitmaps = (requireSharedLibrary "user32.DLL" 'Pipiipp "SetMenuItemBitmaps") in 
let SetMenuItemInfoA = (requireSharedLibrary "user32.DLL" 'Pipiip "SetMenuItemInfoA") in 
let SetMenuItemInfoW = (requireSharedLibrary "user32.DLL" 'Pipiip "SetMenuItemInfoW") in 
let SetMessageExtraInfo = (requireSharedLibrary "user32.DLL" 'Ppp "SetMessageExtraInfo") in 
let SetMessageQueue = (requireSharedLibrary "user32.DLL" 'Pii "SetMessageQueue") in 
let SetParent = (requireSharedLibrary "user32.DLL" 'Pppp "SetParent") in 
let SetProcessWindowStation = (requireSharedLibrary "user32.DLL" 'Pi? "SetProcessWindowStation") in 
let SetPropA = (requireSharedLibrary "user32.DLL" 'Pipsp "SetPropA") in 
let SetPropW = (requireSharedLibrary "user32.DLL" 'Pippp "SetPropW") in 
let SetRect = (requireSharedLibrary "user32.DLL" 'Pipiiii "SetRect") in 
let SetRectEmpty = (requireSharedLibrary "user32.DLL" 'Pip "SetRectEmpty") in 
let SetScrollInfo = (requireSharedLibrary "user32.DLL" 'Pipipi "SetScrollInfo") in 
let SetScrollPos = (requireSharedLibrary "user32.DLL" 'Pipiii "SetScrollPos") in 
let SetScrollRange = (requireSharedLibrary "user32.DLL" 'Pipiiii "SetScrollRange") in 
let SetSysColors = (requireSharedLibrary "user32.DLL" 'Piipp "SetSysColors") in 
let SetSystemCursor = (requireSharedLibrary "user32.DLL" 'Pipi "SetSystemCursor") in 
let SetThreadDesktop = (requireSharedLibrary "user32.DLL" 'Pip "SetThreadDesktop") in 
let SetTimer = (requireSharedLibrary "user32.DLL" 'Pipiip "SetTimer") in 
let SetUserObjectInformationA = (requireSharedLibrary "user32.DLL" 'Pipipi "SetUserObjectInformationA") in 
let SetUserObjectInformationW = (requireSharedLibrary "user32.DLL" 'Pipipi "SetUserObjectInformationW") in 
let SetUserObjectSecurity = (requireSharedLibrary "user32.DLL" 'Pip?? "SetUserObjectSecurity") in 
let SetWindowContextHelpId = (requireSharedLibrary "user32.DLL" 'Pipi "SetWindowContextHelpId") in 
let SetWindowLongA = (requireSharedLibrary "user32.DLL" 'Plpil "SetWindowLongA") in 
let SetWindowLongW = (requireSharedLibrary "user32.DLL" 'Plpil "SetWindowLongW") in 
let SetWindowPlacement = (requireSharedLibrary "user32.DLL" 'Pipp "SetWindowPlacement") in 
let SetWindowPos = (requireSharedLibrary "user32.DLL" 'Pippiiiii "SetWindowPos") in 
let SetWindowRgn = (requireSharedLibrary "user32.DLL" 'Pippi "SetWindowRgn") in 
let SetWindowTextA = (requireSharedLibrary "user32.DLL" 'Pips "SetWindowTextA") in 
let SetWindowTextW = (requireSharedLibrary "user32.DLL" 'Pipp "SetWindowTextW") in 
let SetWindowWord = (requireSharedLibrary "user32.DLL" 'Phpih "SetWindowWord") in 
let SetWindowsHookA = (requireSharedLibrary "user32.DLL" 'P?ip "SetWindowsHookA") in 
let SetWindowsHookExA = (requireSharedLibrary "user32.DLL" 'P?ippi "SetWindowsHookExA") in 
let SetWindowsHookExW = (requireSharedLibrary "user32.DLL" 'P?ippi "SetWindowsHookExW") in 
let SetWindowsHookW = (requireSharedLibrary "user32.DLL" 'P?ip "SetWindowsHookW") in 
let ShowCaret = (requireSharedLibrary "user32.DLL" 'Pip "ShowCaret") in 
let ShowCursor = (requireSharedLibrary "user32.DLL" 'Pii "ShowCursor") in 
let ShowOwnedPopups = (requireSharedLibrary "user32.DLL" 'Pipi "ShowOwnedPopups") in 
let ShowScrollBar = (requireSharedLibrary "user32.DLL" 'Pipii "ShowScrollBar") in 
let ShowWindow = (requireSharedLibrary "user32.DLL" 'Pipi "ShowWindow") in 
let ShowWindowAsync = (requireSharedLibrary "user32.DLL" 'Pipi "ShowWindowAsync") in 
let SubtractRect = (requireSharedLibrary "user32.DLL" 'Pippp "SubtractRect") in 
let SwapMouseButton = (requireSharedLibrary "user32.DLL" 'Pii "SwapMouseButton") in 
let SwitchDesktop = (requireSharedLibrary "user32.DLL" 'Pip "SwitchDesktop") in 
let SystemParametersInfoA = (requireSharedLibrary "user32.DLL" 'Piiipi "SystemParametersInfoA") in 
let SystemParametersInfoW = (requireSharedLibrary "user32.DLL" 'Piiipi "SystemParametersInfoW") in 
let TabbedTextOutA = (requireSharedLibrary "user32.DLL" 'Plpiisiipi "TabbedTextOutA") in 
let TabbedTextOutW = (requireSharedLibrary "user32.DLL" 'Plpiipiipi "TabbedTextOutW") in 
let TileWindows = (requireSharedLibrary "user32.DLL" 'Phpipip "TileWindows") in 
let ToAscii = (requireSharedLibrary "user32.DLL" 'Piiippi "ToAscii") in 
let ToAsciiEx = (requireSharedLibrary "user32.DLL" 'Piiippip "ToAsciiEx") in 
let ToUnicode = (requireSharedLibrary "user32.DLL" 'Piiippii "ToUnicode") in 
let ToUnicodeEx = (requireSharedLibrary "user32.DLL" 'Piiippiip "ToUnicodeEx") in 
let TrackMouseEvent = (requireSharedLibrary "user32.DLL" 'Pip "TrackMouseEvent") in 
let TrackPopupMenu = (requireSharedLibrary "user32.DLL" 'Pipiiiipp "TrackPopupMenu") in 
let TrackPopupMenuEx = (requireSharedLibrary "user32.DLL" 'Pipiiipp "TrackPopupMenuEx") in 
let TranslateAcceleratorA = (requireSharedLibrary "user32.DLL" 'Pippp "TranslateAcceleratorA") in 
let TranslateAcceleratorW = (requireSharedLibrary "user32.DLL" 'Pippp "TranslateAcceleratorW") in 
let TranslateMDISysAccel = (requireSharedLibrary "user32.DLL" 'Pipp "TranslateMDISysAccel") in 
let TranslateMessage = (requireSharedLibrary "user32.DLL" 'Pip "TranslateMessage") in 
let UnhookWindowsHook = (requireSharedLibrary "user32.DLL" 'Piip "UnhookWindowsHook") in 
let UnhookWindowsHookEx = (requireSharedLibrary "user32.DLL" 'Pi? "UnhookWindowsHookEx") in 
let UnionRect = (requireSharedLibrary "user32.DLL" 'Pippp "UnionRect") in 
let UnloadKeyboardLayout = (requireSharedLibrary "user32.DLL" 'Pip "UnloadKeyboardLayout") in 
let UnpackDDElParam = (requireSharedLibrary "user32.DLL" 'Piippp "UnpackDDElParam") in 
let UnregisterClassA = (requireSharedLibrary "user32.DLL" 'Pisp "UnregisterClassA") in 
let UnregisterClassW = (requireSharedLibrary "user32.DLL" 'Pipp "UnregisterClassW") in 
let UnregisterHotKey = (requireSharedLibrary "user32.DLL" 'Pipi "UnregisterHotKey") in 
let UpdateWindow = (requireSharedLibrary "user32.DLL" 'Pip "UpdateWindow") in 
let ValidateRect = (requireSharedLibrary "user32.DLL" 'Pipp "ValidateRect") in 
let ValidateRgn = (requireSharedLibrary "user32.DLL" 'Pipp "ValidateRgn") in 
let VkKeyScanA = (requireSharedLibrary "user32.DLL" 'Phi "VkKeyScanA") in 
let VkKeyScanExA = (requireSharedLibrary "user32.DLL" 'Phip "VkKeyScanExA") in 
let VkKeyScanExW = (requireSharedLibrary "user32.DLL" 'Phip "VkKeyScanExW") in 
let VkKeyScanW = (requireSharedLibrary "user32.DLL" 'Phi "VkKeyScanW") in 
let WaitForInputIdle = (requireSharedLibrary "user32.DLL" 'Pipi "WaitForInputIdle") in 
let WaitMessage = (requireSharedLibrary "user32.DLL" 'Piv "WaitMessage") in 
let WinHelpA = (requireSharedLibrary "user32.DLL" 'Pipsii "WinHelpA") in 
let WinHelpW = (requireSharedLibrary "user32.DLL" 'Pippii "WinHelpW") in 
let WindowFromDC = (requireSharedLibrary "user32.DLL" 'Ppp "WindowFromDC") in 
let WindowFromPoint = (requireSharedLibrary "user32.DLL" 'Pp? "WindowFromPoint") in 
let keybd_event = (requireSharedLibrary "user32.DLL" 'Pviiii "keybd_event") in 
let mouse_event = (requireSharedLibrary "user32.DLL" 'Pviiiil "mouse_event") in 
let wsprintfA = (requireSharedLibrary "user32.DLL" 'Pips? "wsprintfA") in 
let wsprintfW = (requireSharedLibrary "user32.DLL" 'Pipp? "wsprintfW") in 
let wvsprintfA = (requireSharedLibrary "user32.DLL" 'Pips? "wvsprintfA") in 
let wvsprintfW = (requireSharedLibrary "user32.DLL" 'Pipp? "wvsprintfW") in 
dispatchModule $
[['ActivateKeyboardLayout ActivateKeyboardLayout]
['AdjustWindowRect AdjustWindowRect]
['AdjustWindowRectEx AdjustWindowRectEx]
['AnyPopup AnyPopup]
['AppendMenuA AppendMenuA]
['AppendMenuW AppendMenuW]
['ArrangeIconicWindows ArrangeIconicWindows]
['AttachThreadInput AttachThreadInput]
['BeginDeferWindowPos BeginDeferWindowPos]
['BeginPaint BeginPaint]
['BringWindowToTop BringWindowToTop]
['BroadcastSystemMessage BroadcastSystemMessage]
['BroadcastSystemMessageA BroadcastSystemMessageA]
['BroadcastSystemMessageW BroadcastSystemMessageW]
['CallMsgFilterA CallMsgFilterA]
['CallMsgFilterW CallMsgFilterW]
['CallNextHookEx CallNextHookEx]
['CallWindowProcA CallWindowProcA]
['CallWindowProcW CallWindowProcW]
['CascadeWindows CascadeWindows]
['ChangeClipboardChain ChangeClipboardChain]
['ChangeDisplaySettingsA ChangeDisplaySettingsA]
['ChangeDisplaySettingsExA ChangeDisplaySettingsExA]
['ChangeDisplaySettingsExW ChangeDisplaySettingsExW]
['ChangeDisplaySettingsW ChangeDisplaySettingsW]
['ChangeMenuA ChangeMenuA]
['ChangeMenuW ChangeMenuW]
['CharLowerA CharLowerA]
['CharLowerBuffA CharLowerBuffA]
['CharLowerBuffW CharLowerBuffW]
['CharLowerW CharLowerW]
['CharNextA CharNextA]
['CharNextExA CharNextExA]
['CharNextW CharNextW]
['CharPrevA CharPrevA]
['CharPrevExA CharPrevExA]
['CharPrevW CharPrevW]
['CharToOemA CharToOemA]
['CharToOemBuffA CharToOemBuffA]
['CharToOemBuffW CharToOemBuffW]
['CharToOemW CharToOemW]
['CharUpperA CharUpperA]
['CharUpperBuffA CharUpperBuffA]
['CharUpperBuffW CharUpperBuffW]
['CharUpperW CharUpperW]
['CheckDlgButton CheckDlgButton]
['CheckMenuItem CheckMenuItem]
['CheckMenuRadioItem CheckMenuRadioItem]
['CheckRadioButton CheckRadioButton]
['ChildWindowFromPoint ChildWindowFromPoint]
['ChildWindowFromPointEx ChildWindowFromPointEx]
['ClientToScreen ClientToScreen]
['ClipCursor ClipCursor]
['CloseClipboard CloseClipboard]
['CloseDesktop CloseDesktop]
['CloseWindow CloseWindow]
['CloseWindowStation CloseWindowStation]
['CopyAcceleratorTableA CopyAcceleratorTableA]
['CopyAcceleratorTableW CopyAcceleratorTableW]
['CopyIcon CopyIcon]
['CopyImage CopyImage]
['CopyRect CopyRect]
['CountClipboardFormats CountClipboardFormats]
['CreateAcceleratorTableA CreateAcceleratorTableA]
['CreateAcceleratorTableW CreateAcceleratorTableW]
['CreateCaret CreateCaret]
['CreateCursor CreateCursor]
['CreateDesktopA CreateDesktopA]
['CreateDesktopW CreateDesktopW]
['CreateDialogIndirectParamA CreateDialogIndirectParamA]
['CreateDialogIndirectParamW CreateDialogIndirectParamW]
['CreateDialogParamA CreateDialogParamA]
['CreateDialogParamW CreateDialogParamW]
['CreateIcon CreateIcon]
['CreateIconFromResource CreateIconFromResource]
['CreateIconFromResourceEx CreateIconFromResourceEx]
['CreateIconIndirect CreateIconIndirect]
['CreateMDIWindowA CreateMDIWindowA]
['CreateMDIWindowW CreateMDIWindowW]
['CreateMenu CreateMenu]
['CreatePopupMenu CreatePopupMenu]
['CreateWindowExA CreateWindowExA]
['CreateWindowExW CreateWindowExW]
['CreateWindowStationA CreateWindowStationA]
['CreateWindowStationW CreateWindowStationW]
['DdeAbandonTransaction DdeAbandonTransaction]
['DdeAccessData DdeAccessData]
['DdeAddData DdeAddData]
['DdeClientTransaction DdeClientTransaction]
['DdeCmpStringHandles DdeCmpStringHandles]
['DdeConnect DdeConnect]
['DdeConnectList DdeConnectList]
['DdeCreateDataHandle DdeCreateDataHandle]
['DdeCreateStringHandleA DdeCreateStringHandleA]
['DdeCreateStringHandleW DdeCreateStringHandleW]
['DdeDisconnect DdeDisconnect]
['DdeDisconnectList DdeDisconnectList]
['DdeEnableCallback DdeEnableCallback]
['DdeFreeDataHandle DdeFreeDataHandle]
['DdeFreeStringHandle DdeFreeStringHandle]
['DdeGetData DdeGetData]
['DdeGetLastError DdeGetLastError]
['DdeImpersonateClient DdeImpersonateClient]
['DdeInitializeA DdeInitializeA]
['DdeInitializeW DdeInitializeW]
['DdeKeepStringHandle DdeKeepStringHandle]
['DdeNameService DdeNameService]
['DdePostAdvise DdePostAdvise]
['DdeQueryConvInfo DdeQueryConvInfo]
['DdeQueryNextServer DdeQueryNextServer]
['DdeQueryStringA DdeQueryStringA]
['DdeQueryStringW DdeQueryStringW]
['DdeReconnect DdeReconnect]
['DdeSetQualityOfService DdeSetQualityOfService]
['DdeSetUserHandle DdeSetUserHandle]
['DdeUnaccessData DdeUnaccessData]
['DdeUninitialize DdeUninitialize]
['DefDlgProcA DefDlgProcA]
['DefDlgProcW DefDlgProcW]
['DefFrameProcA DefFrameProcA]
['DefFrameProcW DefFrameProcW]
['DefMDIChildProcA DefMDIChildProcA]
['DefMDIChildProcW DefMDIChildProcW]
['DefWindowProcA DefWindowProcA]
['DefWindowProcW DefWindowProcW]
['DeferWindowPos DeferWindowPos]
['DeleteMenu DeleteMenu]
['DeregisterShellHookWindow DeregisterShellHookWindow]
['DestroyAcceleratorTable DestroyAcceleratorTable]
['DestroyCaret DestroyCaret]
['DestroyCursor DestroyCursor]
['DestroyIcon DestroyIcon]
['DestroyMenu DestroyMenu]
['DestroyWindow DestroyWindow]
['DialogBoxIndirectParamA DialogBoxIndirectParamA]
['DialogBoxIndirectParamW DialogBoxIndirectParamW]
['DialogBoxParamA DialogBoxParamA]
['DialogBoxParamW DialogBoxParamW]
['DispatchMessageA DispatchMessageA]
['DispatchMessageW DispatchMessageW]
['DlgDirListA DlgDirListA]
['DlgDirListComboBoxA DlgDirListComboBoxA]
['DlgDirListComboBoxW DlgDirListComboBoxW]
['DlgDirListW DlgDirListW]
['DlgDirSelectComboBoxExA DlgDirSelectComboBoxExA]
['DlgDirSelectComboBoxExW DlgDirSelectComboBoxExW]
['DlgDirSelectExA DlgDirSelectExA]
['DlgDirSelectExW DlgDirSelectExW]
['DragDetect DragDetect]
['DragObject DragObject]
['DrawAnimatedRects DrawAnimatedRects]
['DrawCaption DrawCaption]
['DrawEdge DrawEdge]
['DrawFocusRect DrawFocusRect]
['DrawFrameControl DrawFrameControl]
['DrawIcon DrawIcon]
['DrawIconEx DrawIconEx]
['DrawMenuBar DrawMenuBar]
['DrawStateA DrawStateA]
['DrawStateW DrawStateW]
['DrawTextA DrawTextA]
['DrawTextExA DrawTextExA]
['DrawTextExW DrawTextExW]
['DrawTextW DrawTextW]
['EmptyClipboard EmptyClipboard]
['EnableMenuItem EnableMenuItem]
['EnableScrollBar EnableScrollBar]
['EnableWindow EnableWindow]
['EndDeferWindowPos EndDeferWindowPos]
['EndDialog EndDialog]
['EndMenu EndMenu]
['EndPaint EndPaint]
['EnumChildWindows EnumChildWindows]
['EnumClipboardFormats EnumClipboardFormats]
['EnumDesktopWindows EnumDesktopWindows]
['EnumDesktopsA EnumDesktopsA]
['EnumDesktopsW EnumDesktopsW]
['EnumDisplayDevicesA EnumDisplayDevicesA]
['EnumDisplayDevicesW EnumDisplayDevicesW]
['EnumDisplayMonitors EnumDisplayMonitors]
['EnumDisplaySettingsA EnumDisplaySettingsA]
['EnumDisplaySettingsW EnumDisplaySettingsW]
['EnumPropsA EnumPropsA]
['EnumPropsExA EnumPropsExA]
['EnumPropsExW EnumPropsExW]
['EnumPropsW EnumPropsW]
['EnumThreadWindows EnumThreadWindows]
['EnumWindowStationsA EnumWindowStationsA]
['EnumWindowStationsW EnumWindowStationsW]
['EnumWindows EnumWindows]
['EqualRect EqualRect]
['ExcludeUpdateRgn ExcludeUpdateRgn]
['ExitWindowsEx ExitWindowsEx]
['FillRect FillRect]
['FindWindowA FindWindowA]
['FindWindowExA FindWindowExA]
['FindWindowExW FindWindowExW]
['FindWindowW FindWindowW]
['FlashWindow FlashWindow]
['FrameRect FrameRect]
['FreeDDElParam FreeDDElParam]
['GetActiveWindow GetActiveWindow]
['GetAltTabInfoA GetAltTabInfoA]
['GetAltTabInfoW GetAltTabInfoW]
['GetAncestor GetAncestor]
['GetAsyncKeyState GetAsyncKeyState]
['GetCapture GetCapture]
['GetCaretBlinkTime GetCaretBlinkTime]
['GetCaretPos GetCaretPos]
['GetClassInfoA GetClassInfoA]
['GetClassInfoExA GetClassInfoExA]
['GetClassInfoExW GetClassInfoExW]
['GetClassInfoW GetClassInfoW]
['GetClassLongA GetClassLongA]
['GetClassLongW GetClassLongW]
['GetClassNameA GetClassNameA]
['GetClassNameW GetClassNameW]
['GetClassWord GetClassWord]
['GetClientRect GetClientRect]
['GetClipCursor GetClipCursor]
['GetClipboardData GetClipboardData]
['GetClipboardFormatNameA GetClipboardFormatNameA]
['GetClipboardFormatNameW GetClipboardFormatNameW]
['GetClipboardOwner GetClipboardOwner]
['GetClipboardViewer GetClipboardViewer]
['GetComboBoxInfo GetComboBoxInfo]
['GetCursor GetCursor]
['GetCursorInfo GetCursorInfo]
['GetCursorPos GetCursorPos]
['GetDC GetDC]
['GetDCEx GetDCEx]
['GetDesktopWindow GetDesktopWindow]
['GetDialogBaseUnits GetDialogBaseUnits]
['GetDlgCtrlID GetDlgCtrlID]
['GetDlgItem GetDlgItem]
['GetDlgItemInt GetDlgItemInt]
['GetDlgItemTextA GetDlgItemTextA]
['GetDlgItemTextW GetDlgItemTextW]
['GetDoubleClickTime GetDoubleClickTime]
['GetFocus GetFocus]
['GetForegroundWindow GetForegroundWindow]
['GetIconInfo GetIconInfo]
['GetInputState GetInputState]
['GetKBCodePage GetKBCodePage]
['GetKeyNameTextA GetKeyNameTextA]
['GetKeyNameTextW GetKeyNameTextW]
['GetKeyState GetKeyState]
['GetKeyboardLayout GetKeyboardLayout]
['GetKeyboardLayoutList GetKeyboardLayoutList]
['GetKeyboardLayoutNameA GetKeyboardLayoutNameA]
['GetKeyboardLayoutNameW GetKeyboardLayoutNameW]
['GetKeyboardState GetKeyboardState]
['GetKeyboardType GetKeyboardType]
['GetLastActivePopup GetLastActivePopup]
['GetLastInputInfo GetLastInputInfo]
['GetListBoxInfo GetListBoxInfo]
['GetMenu GetMenu]
['GetMenuBarInfo GetMenuBarInfo]
['GetMenuCheckMarkDimensions GetMenuCheckMarkDimensions]
['GetMenuContextHelpId GetMenuContextHelpId]
['GetMenuDefaultItem GetMenuDefaultItem]
['GetMenuInfo GetMenuInfo]
['GetMenuItemCount GetMenuItemCount]
['GetMenuItemID GetMenuItemID]
['GetMenuItemInfoA GetMenuItemInfoA]
['GetMenuItemInfoW GetMenuItemInfoW]
['GetMenuItemRect GetMenuItemRect]
['GetMenuState GetMenuState]
['GetMenuStringA GetMenuStringA]
['GetMenuStringW GetMenuStringW]
['GetMessageA GetMessageA]
['GetMessageExtraInfo GetMessageExtraInfo]
['GetMessagePos GetMessagePos]
['GetMessageTime GetMessageTime]
['GetMessageW GetMessageW]
['GetMonitorInfoA GetMonitorInfoA]
['GetMonitorInfoW GetMonitorInfoW]
['GetNextDlgGroupItem GetNextDlgGroupItem]
['GetNextDlgTabItem GetNextDlgTabItem]
['GetOpenClipboardWindow GetOpenClipboardWindow]
['GetParent GetParent]
['GetPriorityClipboardFormat GetPriorityClipboardFormat]
['GetProcessWindowStation GetProcessWindowStation]
['GetPropA GetPropA]
['GetPropW GetPropW]
['GetQueueStatus GetQueueStatus]
['GetScrollBarInfo GetScrollBarInfo]
['GetScrollInfo GetScrollInfo]
['GetScrollPos GetScrollPos]
['GetScrollRange GetScrollRange]
['GetSubMenu GetSubMenu]
['GetSysColor GetSysColor]
['GetSysColorBrush GetSysColorBrush]
['GetSystemMenu GetSystemMenu]
['GetSystemMetrics GetSystemMetrics]
['GetTabbedTextExtentA GetTabbedTextExtentA]
['GetTabbedTextExtentW GetTabbedTextExtentW]
['GetThreadDesktop GetThreadDesktop]
['GetTitleBarInfo GetTitleBarInfo]
['GetTopWindow GetTopWindow]
['GetUpdateRect GetUpdateRect]
['GetUpdateRgn GetUpdateRgn]
['GetUserObjectInformationA GetUserObjectInformationA]
['GetUserObjectInformationW GetUserObjectInformationW]
['GetUserObjectSecurity GetUserObjectSecurity]
['GetWindow GetWindow]
['GetWindowContextHelpId GetWindowContextHelpId]
['GetWindowDC GetWindowDC]
['GetWindowInfo GetWindowInfo]
['GetWindowLongA GetWindowLongA]
['GetWindowLongW GetWindowLongW]
['GetWindowModuleFileNameA GetWindowModuleFileNameA]
['GetWindowModuleFileNameW GetWindowModuleFileNameW]
['GetWindowPlacement GetWindowPlacement]
['GetWindowRect GetWindowRect]
['GetWindowRgn GetWindowRgn]
['GetWindowTextA GetWindowTextA]
['GetWindowTextLengthA GetWindowTextLengthA]
['GetWindowTextLengthW GetWindowTextLengthW]
['GetWindowTextW GetWindowTextW]
['GetWindowThreadProcessId GetWindowThreadProcessId]
['GetWindowWord GetWindowWord]
['GrayStringA GrayStringA]
['GrayStringW GrayStringW]
['HideCaret HideCaret]
['HiliteMenuItem HiliteMenuItem]
['ImpersonateDdeClientWindow ImpersonateDdeClientWindow]
['InSendMessage InSendMessage]
['InflateRect InflateRect]
['InsertMenuA InsertMenuA]
['InsertMenuItemA InsertMenuItemA]
['InsertMenuItemW InsertMenuItemW]
['InsertMenuW InsertMenuW]
['InternalGetWindowText InternalGetWindowText]
['IntersectRect IntersectRect]
['InvalidateRect InvalidateRect]
['InvalidateRgn InvalidateRgn]
['InvertRect InvertRect]
['IsCharAlphaA IsCharAlphaA]
['IsCharAlphaNumericA IsCharAlphaNumericA]
['IsCharAlphaNumericW IsCharAlphaNumericW]
['IsCharAlphaW IsCharAlphaW]
['IsCharLowerA IsCharLowerA]
['IsCharLowerW IsCharLowerW]
['IsCharUpperA IsCharUpperA]
['IsCharUpperW IsCharUpperW]
['IsChild IsChild]
['IsClipboardFormatAvailable IsClipboardFormatAvailable]
['IsDialogMessageA IsDialogMessageA]
['IsDialogMessageW IsDialogMessageW]
['IsDlgButtonChecked IsDlgButtonChecked]
['IsIconic IsIconic]
['IsMenu IsMenu]
['IsRectEmpty IsRectEmpty]
['IsWindow IsWindow]
['IsWindowEnabled IsWindowEnabled]
['IsWindowUnicode IsWindowUnicode]
['IsWindowVisible IsWindowVisible]
['IsZoomed IsZoomed]
['KillTimer KillTimer]
['LoadAcceleratorsA LoadAcceleratorsA]
['LoadAcceleratorsW LoadAcceleratorsW]
['LoadBitmapA LoadBitmapA]
['LoadBitmapW LoadBitmapW]
['LoadCursorA LoadCursorA]
['LoadCursorFromFileA LoadCursorFromFileA]
['LoadCursorFromFileW LoadCursorFromFileW]
['LoadCursorW LoadCursorW]
['LoadIconA LoadIconA]
['LoadIconW LoadIconW]
['LoadImageA LoadImageA]
['LoadImageW LoadImageW]
['LoadKeyboardLayoutA LoadKeyboardLayoutA]
['LoadKeyboardLayoutW LoadKeyboardLayoutW]
['LoadMenuA LoadMenuA]
['LoadMenuIndirectA LoadMenuIndirectA]
['LoadMenuIndirectW LoadMenuIndirectW]
['LoadMenuW LoadMenuW]
['LoadStringA LoadStringA]
['LoadStringW LoadStringW]
['LockWindowUpdate LockWindowUpdate]
['LookupIconIdFromDirectory LookupIconIdFromDirectory]
['LookupIconIdFromDirectoryEx LookupIconIdFromDirectoryEx]
['MapDialogRect MapDialogRect]
['MapVirtualKeyA MapVirtualKeyA]
['MapVirtualKeyExA MapVirtualKeyExA]
['MapVirtualKeyExW MapVirtualKeyExW]
['MapVirtualKeyW MapVirtualKeyW]
['MapWindowPoints MapWindowPoints]
['MenuItemFromPoint MenuItemFromPoint]
['MessageBeep MessageBeep]
['MessageBoxA MessageBoxA]
['MessageBoxExA MessageBoxExA]
['MessageBoxExW MessageBoxExW]
['MessageBoxIndirectA MessageBoxIndirectA]
['MessageBoxIndirectW MessageBoxIndirectW]
['MessageBoxW MessageBoxW]
['ModifyMenuA ModifyMenuA]
['ModifyMenuW ModifyMenuW]
['MoveWindow MoveWindow]
['MsgWaitForMultipleObjects MsgWaitForMultipleObjects]
['MsgWaitForMultipleObjectsEx MsgWaitForMultipleObjectsEx]
['OemKeyScan OemKeyScan]
['OemToCharA OemToCharA]
['OemToCharBuffA OemToCharBuffA]
['OemToCharBuffW OemToCharBuffW]
['OemToCharW OemToCharW]
['OffsetRect OffsetRect]
['OpenClipboard OpenClipboard]
['OpenDesktopA OpenDesktopA]
['OpenDesktopW OpenDesktopW]
['OpenIcon OpenIcon]
['OpenInputDesktop OpenInputDesktop]
['OpenWindowStationA OpenWindowStationA]
['OpenWindowStationW OpenWindowStationW]
['PackDDElParam PackDDElParam]
['PaintDesktop PaintDesktop]
['PeekMessageA PeekMessageA]
['PeekMessageW PeekMessageW]
['PostMessageA PostMessageA]
['PostMessageW PostMessageW]
['PostQuitMessage PostQuitMessage]
['PostThreadMessageA PostThreadMessageA]
['PostThreadMessageW PostThreadMessageW]
['PtInRect PtInRect]
['RealChildWindowFromPoint RealChildWindowFromPoint]
['RealGetWindowClassA RealGetWindowClassA]
['RealGetWindowClassW RealGetWindowClassW]
['RedrawWindow RedrawWindow]
['RegisterClassA RegisterClassA]
['RegisterClassExA RegisterClassExA]
['RegisterClassExW RegisterClassExW]
['RegisterClassW RegisterClassW]
['RegisterClipboardFormatA RegisterClipboardFormatA]
['RegisterClipboardFormatW RegisterClipboardFormatW]
['RegisterHotKey RegisterHotKey]
['RegisterWindowMessageA RegisterWindowMessageA]
['RegisterWindowMessageW RegisterWindowMessageW]
['ReleaseCapture ReleaseCapture]
['ReleaseDC ReleaseDC]
['RemoveMenu RemoveMenu]
['RemovePropA RemovePropA]
['RemovePropW RemovePropW]
['ReplyMessage ReplyMessage]
['ReuseDDElParam ReuseDDElParam]
['ScreenToClient ScreenToClient]
['ScrollDC ScrollDC]
['ScrollWindow ScrollWindow]
['ScrollWindowEx ScrollWindowEx]
['SendDlgItemMessageA SendDlgItemMessageA]
['SendDlgItemMessageW SendDlgItemMessageW]
['SendMessageA SendMessageA]
['SendMessageCallbackA SendMessageCallbackA]
['SendMessageCallbackW SendMessageCallbackW]
['SendMessageTimeoutA SendMessageTimeoutA]
['SendMessageTimeoutW SendMessageTimeoutW]
['SendMessageW SendMessageW]
['SendNotifyMessageA SendNotifyMessageA]
['SendNotifyMessageW SendNotifyMessageW]
['SetActiveWindow SetActiveWindow]
['SetCapture SetCapture]
['SetCaretBlinkTime SetCaretBlinkTime]
['SetCaretPos SetCaretPos]
['SetClassLongA SetClassLongA]
['SetClassLongW SetClassLongW]
['SetClassWord SetClassWord]
['SetClipboardData SetClipboardData]
['SetClipboardViewer SetClipboardViewer]
['SetCursor SetCursor]
['SetCursorPos SetCursorPos]
['SetDebugErrorLevel SetDebugErrorLevel]
['SetDlgItemInt SetDlgItemInt]
['SetDlgItemTextA SetDlgItemTextA]
['SetDlgItemTextW SetDlgItemTextW]
['SetDoubleClickTime SetDoubleClickTime]
['SetFocus SetFocus]
['SetForegroundWindow SetForegroundWindow]
['SetKeyboardState SetKeyboardState]
['SetLastErrorEx SetLastErrorEx]
['SetMenu SetMenu]
['SetMenuContextHelpId SetMenuContextHelpId]
['SetMenuDefaultItem SetMenuDefaultItem]
['SetMenuInfo SetMenuInfo]
['SetMenuItemBitmaps SetMenuItemBitmaps]
['SetMenuItemInfoA SetMenuItemInfoA]
['SetMenuItemInfoW SetMenuItemInfoW]
['SetMessageExtraInfo SetMessageExtraInfo]
['SetMessageQueue SetMessageQueue]
['SetParent SetParent]
['SetProcessWindowStation SetProcessWindowStation]
['SetPropA SetPropA]
['SetPropW SetPropW]
['SetRect SetRect]
['SetRectEmpty SetRectEmpty]
['SetScrollInfo SetScrollInfo]
['SetScrollPos SetScrollPos]
['SetScrollRange SetScrollRange]
['SetSysColors SetSysColors]
['SetSystemCursor SetSystemCursor]
['SetThreadDesktop SetThreadDesktop]
['SetTimer SetTimer]
['SetUserObjectInformationA SetUserObjectInformationA]
['SetUserObjectInformationW SetUserObjectInformationW]
['SetUserObjectSecurity SetUserObjectSecurity]
['SetWindowContextHelpId SetWindowContextHelpId]
['SetWindowLongA SetWindowLongA]
['SetWindowLongW SetWindowLongW]
['SetWindowPlacement SetWindowPlacement]
['SetWindowPos SetWindowPos]
['SetWindowRgn SetWindowRgn]
['SetWindowTextA SetWindowTextA]
['SetWindowTextW SetWindowTextW]
['SetWindowWord SetWindowWord]
['SetWindowsHookA SetWindowsHookA]
['SetWindowsHookExA SetWindowsHookExA]
['SetWindowsHookExW SetWindowsHookExW]
['SetWindowsHookW SetWindowsHookW]
['ShowCaret ShowCaret]
['ShowCursor ShowCursor]
['ShowOwnedPopups ShowOwnedPopups]
['ShowScrollBar ShowScrollBar]
['ShowWindow ShowWindow]
['ShowWindowAsync ShowWindowAsync]
['SubtractRect SubtractRect]
['SwapMouseButton SwapMouseButton]
['SwitchDesktop SwitchDesktop]
['SystemParametersInfoA SystemParametersInfoA]
['SystemParametersInfoW SystemParametersInfoW]
['TabbedTextOutA TabbedTextOutA]
['TabbedTextOutW TabbedTextOutW]
['TileWindows TileWindows]
['ToAscii ToAscii]
['ToAsciiEx ToAsciiEx]
['ToUnicode ToUnicode]
['ToUnicodeEx ToUnicodeEx]
['TrackMouseEvent TrackMouseEvent]
['TrackPopupMenu TrackPopupMenu]
['TrackPopupMenuEx TrackPopupMenuEx]
['TranslateAcceleratorA TranslateAcceleratorA]
['TranslateAcceleratorW TranslateAcceleratorW]
['TranslateMDISysAccel TranslateMDISysAccel]
['TranslateMessage TranslateMessage]
['UnhookWindowsHook UnhookWindowsHook]
['UnhookWindowsHookEx UnhookWindowsHookEx]
['UnionRect UnionRect]
['UnloadKeyboardLayout UnloadKeyboardLayout]
['UnpackDDElParam UnpackDDElParam]
['UnregisterClassA UnregisterClassA]
['UnregisterClassW UnregisterClassW]
['UnregisterHotKey UnregisterHotKey]
['UpdateWindow UpdateWindow]
['ValidateRect ValidateRect]
['ValidateRgn ValidateRgn]
['VkKeyScanA VkKeyScanA]
['VkKeyScanExA VkKeyScanExA]
['VkKeyScanExW VkKeyScanExW]
['VkKeyScanW VkKeyScanW]
['WaitForInputIdle WaitForInputIdle]
['WaitMessage WaitMessage]
['WinHelpA WinHelpA]
['WinHelpW WinHelpW]
['WindowFromDC WindowFromDC]
['WindowFromPoint WindowFromPoint]
['keybd_event keybd_event]
['mouse_event mouse_event]
['wsprintfA wsprintfA]
['wsprintfW wsprintfW]
['wvsprintfA wvsprintfA]
['wvsprintfW wvsprintfW]]
