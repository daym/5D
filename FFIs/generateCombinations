#!/usr/bin/env python

import sys

if len(sys.argv) > 1:
   ccs = [c for c in sys.argv[1]]
else:
   ccs = ["C"]
   
# 32768 alphabet = ["*", "i", "h", "c", "f", "d", "L", "l"]
alphabet = ["p", "i", "h", "l"]

result = []

digits = None
def increaseDigit(v):
  if v is None:
    v = 0
  else:
    v = v + 1
  return(v)
def increase():
    global digits
    i = len(digits) - 1
    digits[i] = increaseDigit(digits[i])
    while i >= 0 and digits[i] >= len(alphabet):
        digits[i] -= len(alphabet)
        i = i - 1
        if i < 0:
            return(False)
        digits[i] = increaseDigit(digits[i])
    return(True)
def reset(cc):
    global digits
    if cc == "P":
        digits = 5 * [None]
    else:
        digits = 5 * [0]
def galphabet(a):
    if a is None:
        return ""
    else:
        return alphabet[a]
extras = [
	'iippii', 
	'ipiiippp', 
	'pplpppp', 
	'vpppii', 
	'ispppp', 
	'ipiiiipiii', 
	'ipLipp', 
	'ippppip', 
	'lpiipiipi', 
	'ipiipipp', 
	'ipppllipppp', 
	'vppppi', 
	'iipppp', 
	'iiisppi', 
	'iippppp', 
	'vppippppp', 
	'ippplp', 
	'pssiiiiippp', 
	'vpilpp', 
	'ippipipp', 
	'lpiisiipi', 
	'ippipipi', 
	'ppppiiii', 
	'vpppiff', 
	'pppiii', 
	'vpippppi', 
	'pppiip', 
	'ippppiipppp', 
	'vppiipppiiiiii', 
	'vpipppii', 
	'ipsipi', 
	'ipiiipp', 
	'ipippp', 
	'vppippDpDi', 
	'ppsppp', 
	'ppppLLLi', 
	'pppppiip', 
	'ippiip', 
	'ipiLpp', 
	'ippphpi', 
	'ippiii', 
	'ppppipi', 
	'vppiipp', 
	'pppplii', 
	'ipsiip', 
	'vppiippp', 
	'vppppl', 
	'vpfffi', 
	'vppiipppiip', 
	'ppppppiipp', 
	'vpffff', 
	'vpdiiiLiLp', 
	'lplippp', 
	'lipppp', 
	'vppiipppiiiii', 
	'ppiiiiiii', 
	'pppppipp', 
	'ipplip', 
	'vppippp', 
	'ipddpippppp', 
	'vppippi', 
	'vppppp', 
	'ppiiiiiip', 
	'vpilppp', 
	'vpp', 
	'vps', 
	'iiippii', 
	'ippipip', 
	'iiippip', 
	'ipiiiipp', 
	'ppiiiiLpp', 
	'ilppip', 
	'iiippiip', 
	'pppliiip', 
	'vpppiii', 
	'vs', 
	'vppipipii', 
	'vpppiip', 
	'vpppppl', 
	'vppiiiiddddii', 
	'pilpppppp', 
	'pppiiipp', 
	'iiisisi', 
	'ppiplp', 
	'ippliipp', 
	'vpppppppp', 
	'vpippi', 
	'ispippppi', 
	'ipppipp', 
	'vppppppp', 
	'lipiip', 
	'vppppppi', 
	'iiiiipp', 
	'ipiiiipiipiii', 
	'ipiippi', 
	'sp', 
	'vppiipppiiiiiii', 
	'ppilpipp', 
	'ipplpp', 
	'piiiiiiiiiiiiip', 
	'ippiiiiii', 
	'piiiiiiiiiiiiis', 
	'ipiippp', 
	'vppipiip', 
	'vpiLiL', 
	'iiippi', 
	'pidddp', 
	'pllipp', 
	'iiippp', 
	'iipipi', 
	'vpppipppi', 
	'vpiipp', 
	'vppipp', 
	'vppipppiiiii', 
	'llpppi', 
	'ipssih', 
	'ipppppp', 
	'pppiiiii', 
	'vpiiiiii', 
	'lpiiip', 
	'ppiLLLL', 
	'ispipipi', 
	'ppiiiiid', 
	'ppiiiiii', 
	'ipiiis', 
	'ppippp', 
	'hpipip', 
	'vpiiLL', 
	'ppippi', 
	'ipiipppp', 
	'vpiiiipp', 
	'ipsspl', 
	'ppippip', 
	'ppiipi', 
	'ipiippppi', 
	'ipiisip', 
	'ppppfffi', 
	'lpppppi', 
	'lsppip', 
	'pppiiiiippp', 
	'ippdidd', 
	'ipiipi', 
	'vpppiipp', 
	'ipiiipsip', 
	'vpppiipi', 
	'piipip', 
	'pppiiis', 
	'pppiiip', 
	'ipiipp', 
	'pplippp', 
	'pppiipp', 
	'ppiiip', 
	'ppiiii', 
	'lpiipi', 
	'pplppppp', 
	'piLdii', 
	'ppplipp', 
	'isspppi', 
	'lppiip', 
	'vppdidd', 
	'ipdiiiLiL', 
	'vpiiippppi', 
	'ipipppp', 
	'ipipppi', 
	'vpddpp', 
	'vppiipiiii', 
	'iiiipip', 
	'lpiiippp', 
	'vppipppiiii', 
	'ppfffi', 
	'pplppp', 
	'ipiiiiiiiippii', 
	'iphiihii', 
	'issspis', 
	'ipppipppp', 
	'vpiippp', 
	'ippppiiiii', 
	'ippiiippp', 
	'vlpppi', 
	'vpiippi', 
	'ippppppii', 
	'ippippppi', 
	'ippippppp', 
	'ppiiiiiiii', 
	'vplpppi', 
	'vplpppp', 
	'pppppipppp', 
	'vpiddiLLL', 
	'ipippi', 
	'vpddddd', 
	'ipiiiii', 
	'lpiipiip', 
	'vppiff', 
	'vippppp', 
	'iplipppplip', 
	'ppiiiiiipp', 
	'vpippp', 
	'ppipipi', 
	'pfiiiiid', 
	'ipiiippip', 
	'iiplppp', 
	'ipppppi', 
	'iiippppppppp', 
	'piddiLLL', 
	'ipppih', 
	'ipppii', 
	'ipppip', 
	'ppppllli', 
	'ipiiiip', 
	'ippippp', 
	'liippp', 
	'ippippi', 
	'vppiiiiddddi', 
	'vppiiiiiiii', 
	'ipiiiipiiiii', 
	'ippipp', 
	'vppiiii', 
	'ipiisi', 
	'ippipi', 
	'ipiisp', 
	'vpippippp', 
	'ipippppp', 
	'iplppp', 
	'vppiii', 
	'iplppi', 
	'iipiipip', 
	'vppipppiii', 
	'ippppl', 
	'ippppi', 
	'vpipppp', 
	'vppipi', 
	'ispppiipspp', 
	'isssipp', 
	'iiipppi', 
	'vpppippi', 
	'vppppiii', 
	'vpdddddd', 
	'vppiiiiddddiiiiiii', 
	'vipppp', 
	'iiisip', 
	'ipppippi', 
	'plpppi', 
	'pppippi', 
	'llpipipi', 
	'plpppppp', 
	'ipppippp', 
	'ipipip', 
	'vppipipp', 
	'ippppp', 
	'ipiiiiii', 
	'ipipii', 
	'vpidiLLL', 
	'vpdiLL', 
	'ipppippppppp', 
	'iiipipi', 
	'pppippip', 
	'ipppiiiipii', 
	'vpidddddd', 
	'is', 
	'iiipipisp', 
	'pppliippp', 
	'ppppdddi', 
	'ipsiipi', 
	'vpiLLL', 
	'ppiipiip', 
	'ippiipi', 
	'ipiiiiiiiippi', 
	'ippppiii', 
	'pidiLLL', 
	'ippppiip', 
	'ippiipp', 
	'pissiiiiipppp', 
	'ppsiiii', 
	'ppppppp', 
	'vpiiiii', 
	'ppipip', 
	'llpipppppihppi', 
	'ipsppp', 
	'iipiii', 
	'vpppppii', 
	'vpiiiipii', 
	'vppiip', 
	'psipipi', 
	'piiiii', 
	'ppplipip', 
	'ppppppi', 
	'vpiiippp', 
	'ipisii', 
	'iiipih', 
	'piiiip', 
	'piiiiii', 
	'ipsiippp', 
	'vpipii', 
	'ppppli', 
	'piiiiid', 
	'vdddppp', 
	'iiipip', 
	'pplpppppp', 
	'pppppppp', 
	'ppiiiip', 
	'pppppppi', 
	'ppiiiii', 
	'vpdddd', 
	'ppiLdiiLi', 
	'ppiiLdii', 
	'psiiiiiip', 
	'iiipspi', 
	'ppppppiip', 
	'ppipiipp', 
	'vpLLLL', 
	'ppiiiiL', 
	'ppppiiiiiii', 
	'pdiiiLiL', 
	'ippppplp', 
	'vpiiiL', 
	'ppiiiipp', 
	'vpiiip', 
	'vpppppp', 
	'vpiiii', 
	'vpiiipp', 
	'ipiiii', 
	'ippppppi', 
	'viiiil', 
	'ipppipppppp', 
	'pdddddd', 
	'ipiiip', 
	'ippppppp', 
	'vppidd', 
	'ipsshpi', 
	'lppppi', 
	'piiiiiiii', 
	'pppiiii', 
	'pppippp', 
	'ppppip', 
	'ppiiipp', 
	'ppppii', 
	'ippiiiii', 
	'ipiLLpp', 
	'ipiiiiiiii', 
	'vppiipppiiii', 
	'pppppp', 
	'vppppipiip', 
	'ppdddd', 
	'lpppip', 
	'ipiiiff', 
	'pppppi', 
	'ippipiip', 
	'vppipppii', 
	'vppipLp', 
	'isspis', 
	'issspi', 
	'pppddi', 
	'iisipi', 
	'psiipiip', 
	'ipiipiiipi', 
	'iiipppppppp', 
	'ippiippp', 
	'lplppp', 
	'ipiiipppp', 
	'ippiippi', 
	'lplppi', 
	'pippiiiiipppp', 
	'iiisipi', 
	'ippplpp', 
	'piplpl',
]
for cc in ccs:
  reset(cc)
  while True:
      v = ("%s%s%s%s%s%s" % (cc, galphabet(digits[0]), galphabet(digits[1]), galphabet(digits[2]), galphabet(digits[3]), galphabet(digits[4])))
      if len(v) > 1:
        print(v)
      if not increase():
         break
  for extra in extras:
    print("%s%s" % (cc, extra))
    