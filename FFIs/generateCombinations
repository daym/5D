#!/usr/bin/env python

import sys

if len(sys.argv) > 1:
   ccs = [c for c in sys.argv[1]]
else:
   ccs = ["C"]
   
# 32768 alphabet = ["*", "i", "h", "c", "f", "d", "L", "l"]
alphabet = ["p", "i", "h", "l"]

result = []

digits = 5 * [0]
def increase():
    global digits
    i = len(digits) - 1
    digits[i] += 1
    while i >= 0 and digits[i] >= len(alphabet):
        digits[i] -= len(alphabet)
        i = i - 1
        if i < 0:
            return(False)
        digits[i] += 1
    return(True)
def reset():
    global digits
    digits = 5 * [0]

for cc in ccs:
  print("%svs" % cc)
  print("%svps" % cc)
  print("%ssp" % cc)
  print("%svpp" % cc)
  print("%sis" % cc)

  reset()
  while True:
      print ("%s%s%s%s%s%s" % (cc, alphabet[digits[0]], alphabet[digits[1]], alphabet[digits[2]], alphabet[digits[3]], alphabet[digits[4]]))
      if cc == "P" and digits[4] == 1:
        if digits[3] == 1:
          if digits[2] == 1:
            if digits[1] == 1:
              print ("%s%s%s%s%s%s" % (cc, alphabet[digits[0]], "", "", "", ""))
            else:
              print ("%s%s%s%s%s%s" % (cc, alphabet[digits[0]], alphabet[digits[1]], "", "", ""))
          else:
            print ("%s%s%s%s%s%s" % (cc, alphabet[digits[0]], alphabet[digits[1]], alphabet[digits[2]], "", ""))
        else:
          print ("%s%s%s%s%s%s" % (cc, alphabet[digits[0]], alphabet[digits[1]], alphabet[digits[2]], alphabet[digits[3]], ""))
      if not increase():
         break

    