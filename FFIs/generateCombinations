#!/usr/bin/env python

import sys

if len(sys.argv) > 1:
   ccs = [c for c in sys.argv[1]]
else:
   ccs = ["C"]
   
# 32768 alphabet = ["*", "i", "h", "c", "f", "d", "L", "l"]
alphabet = ["p", "i", "h", "l"]

result = []

digits = None
def increaseDigit(v):
  if v is None:
    v = 0
  else:
    v = v + 1
  return(v)
def increase():
    global digits
    i = len(digits) - 1
    digits[i] = increaseDigit(digits[i])
    while i >= 0 and digits[i] >= len(alphabet):
        digits[i] -= len(alphabet)
        i = i - 1
        if i < 0:
            return(False)
        digits[i] = increaseDigit(digits[i])
    return(True)
def reset(cc):
    global digits
    if cc == "P":
        digits = 5 * [None]
    else:
        digits = 5 * [0]
def galphabet(a):
    if a is None:
        return ""
    else:
        return alphabet[a]
extras = set([
	"vs",
	"vps",
	"sp",
	"vpp",
	"is",
	"hpipip",
	"iiiiipp",
	"iiiipip",
	"iiipih",
	"iiipip",
	"iiipipi",
	"iiipipisp",
	"iiippi",
	"iiippii",
	"iiippiip",
	"iiippip",
	"iiipppi",
	"iiipspi",
	"iiisip",
	"iiisipi",
	"iiisisi",
	"iiisppi",
	"iipiii",
	"iipiipip",
	"iipipi",
	"iiplppp",
	"iippii",
	"iisipi",
	"ipiiiff",
	"ipiiii",
	"ipiiiii",
	"ipiiiiii",
	"ipiiiiiiii",
	"ipiiiiiiiippi",
	"ipiiiiiiiippii",
	"ipiiiip",
	"ipiiiipiii",
	"ipiiiipiiiii",
	"ipiiiipiipiii",
	"ipiiiipp",
	"ipiiip",
	"ipiiipp",
	"ipiiippip",
	"ipiiipsip",
	"ipiiis",
	"ipiipi",
	"ipiipiiipi",
	"ipiipipp",
	"ipiipp",
	"ipiippp",
	"ipiipppp",
	"ipiippppi",
	"ipiisi",
	"ipiisip",
	"ipiisp",
	"ipipii",
	"ipipip",
	"ipippi",
	"ipippp",
	"ipisii",
	"ippiii",
	"ippiiiii",
	"ippiiippp",
	"ippiip",
	"ippiipi",
	"ippiippi",
	"ippiippp",
	"ippipi",
	"ippipiip",
	"ippipip",
	"ippipipi",
	"ippipipp",
	"ippipp",
	"ippippp",
	"ippippppi",
	"ippphpi",
	"ipppih",
	"ipppii",
	"ipppiiiipii",
	"ipppip",
	"ipppipp",
	"ippplp",
	"ippppi",
	"ippppiii",
	"ippppiiiii",
	"ippppiipppp",
	"ippppip",
	"ippppl",
	"ippppp",
	"ipppppi",
	"ippppppi",
	"ipsiip",
	"ipsiipi",
	"ipsiippp",
	"ipsipi",
	"ipsppp",
	"ipsshpi",
	"ipssih",
	"ipsspl",
	"ispipipi",
	"ispippppi",
	"ispppiipspp",
	"ispppp",
	"isspis",
	"isspppi",
	"isssipp",
	"issspi",
	"issspis",
	"lipiip",
	"lpiiip",
	"lpiipiip",
	"lpiipiipi",
	"lpiisiipi",
	"lppiip",
	"lpppip",
	"lsppip",
	"piiiiii",
	"piiiiiiiiiiiiip",
	"piiiiiiiiiiiiis",
	"piiiip",
	"piipip",
	"pippiiiiipppp",
	"pissiiiiipppp",
	"pllipp",
	"ppiiii",
	"ppiiiiii",
	"ppiiiiiip",
	"ppiiiip",
	"ppiiiipp",
	"ppiipiip",
	"ppipipi",
	"ppippip",
	"pppiii",
	"pppiiii",
	"pppiiiiippp",
	"pppiiip",
	"pppiiis",
	"pppippi",
	"pppippip",
	"pppppp",
	"ppsiiii",
	"ppsppp",
	"psiiiiiip",
	"psiipiip",
	"psipipi",
	"pssiiiiippp",
	"viiiil",
	"ipppipppppp",
	"vpiiii",
	"vppipipp",
	"iiiiipp",
	"iiippp",
	"iiipppppppp",
	"iiippppppppp",
	"iipiii",
	"iipipi",
	"iipppp",
	"iippppp",
	"ilppip",
	"ipddpippppp",
	"ipdiiiLiL",
	"ipiiii",
	"ipiiiii",
	"ipiiippp",
	"ipiiipppp",
	"ipiipp",
	"ipiippi",
	"ipiippp",
	"ipiipppp",
	"ipiLLpp",
	"ipiLpp",
	"ipipii",
	"ipippi",
	"ipippp",
	"ipipppi",
	"ipipppp",
	"ipippppp",
	"ipLipp",
	"iplipppplip",
	"iplppi",
	"iplppp",
	"ippdidd",
	"ippiiiiii",
	"ippiip",
	"ippiipp",
	"ippipip",
	"ippipp",
	"ippippi",
	"ippippp",
	"ippippppp",
	"ippliipp",
	"ipplip",
	"ipplpp",
	"ipppii",
	"ipppip",
	"ipppipp",
	"ipppippi",
	"ipppippp",
	"ipppipppp",
	"ipppipppppp",
	"ipppippppppp",
	"ipppllipppp",
	"ippplpp",
	"ippppi",
	"ippppiip",
	"ippppip",
	"ippppp",
	"ipppppi",
	"ippppplp",
	"ipppppp",
	"ippppppi",
	"ippppppii",
	"ippppppp",
	"liippp",
	"lipppp",
	"llpipipi",
	"llpipppppihppi",
	"llpppi",
	"lpiiippp",
	"lpiipi",
	"lplippp",
	"lplppi",
	"lplppp",
	"lppppi",
	"lpppppi",
	"pdddddd",
	"pdiiiLiL",
	"pfiiiiid",
	"pidddp",
	"piddiLLL",
	"pidiLLL",
	"piiiii",
	"piiiiid",
	"piiiiiiii",
	"piLdii",
	"pilpppppp",
	"piplpl",
	"plpppi",
	"plpppppp",
	"ppdddd",
	"ppfffi",
	"ppiiii",
	"ppiiiii",
	"ppiiiiid",
	"ppiiiiiii",
	"ppiiiiiiii",
	"ppiiiiiipp",
	"ppiiiiL",
	"ppiiiiLpp",
	"ppiiip",
	"ppiiipp",
	"ppiiLdii",
	"ppiipi",
	"ppiLdiiLi",
	"ppiLLLL",
	"ppilpipp",
	"ppipiipp",
	"ppipip",
	"ppiplp",
	"ppippi",
	"ppippp",
	"pplippp",
	"pplppp",
	"pplpppp",
	"pplppppp",
	"pplpppppp",
	"pppddi",
	"pppiiii",
	"pppiiiii",
	"pppiiipp",
	"pppiip",
	"pppiipp",
	"pppippi",
	"pppippp",
	"pppliiip",
	"pppliippp",
	"ppplipip",
	"ppplipp",
	"ppppdddi",
	"ppppfffi",
	"ppppii",
	"ppppiiii",
	"ppppiiiiiii",
	"ppppip",
	"ppppipi",
	"ppppli",
	"pppplii",
	"ppppllli",
	"ppppLLLi",
	"pppppi",
	"pppppiip",
	"pppppipp",
	"pppppipppp",
	"pppppp",
	"ppppppi",
	"ppppppiip",
	"ppppppiipp",
	"ppppppp",
	"pppppppi",
	"pppppppp",
	"vdddppp",
	"vipppp",
	"vippppp",
	"vlpppi",
	"vpdddd",
	"vpddddd",
	"vpdddddd",
	"vpddpp",
	"vpdiiiLiLp",
	"vpdiLL",
	"vpffff",
	"vpfffi",
	"vpidddddd",
	"vpiddiLLL",
	"vpidiLLL",
	"vpiiii",
	"vpiiiii",
	"vpiiiiii",
	"vpiiiipii",
	"vpiiiipp",
	"vpiiiL",
	"vpiiip",
	"vpiiipp",
	"vpiiippp",
	"vpiiippppi",
	"vpiiLL",
	"vpiipp",
	"vpiippi",
	"vpiippp",
	"vpiLiL",
	"vpiLLL",
	"vpilpp",
	"vpilppp",
	"vpipii",
	"vpippi",
	"vpippippp",
	"vpippp",
	"vpipppii",
	"vpipppp",
	"vpippppi",
	"vpLLLL",
	"vplpppi",
	"vplpppp",
	"vppdidd",
	"vppidd",
	"vppiff",
	"vppiii",
	"vppiiii",
	"vppiiiiddddi",
	"vppiiiiddddii",
	"vppiiiiddddiiiiiii",
	"vppiiiiiiii",
	"vppiip",
	"vppiipiiii",
	"vppiipp",
	"vppiippp",
	"vppiipppiiii",
	"vppiipppiiiii",
	"vppiipppiiiiii",
	"vppiipppiiiiiii",
	"vppiipppiip",
	"vppipi",
	"vppipiip",
	"vppipipii",
	"vppipipp",
	"vppipLp",
	"vppipp",
	"vppippDpDi",
	"vppippi",
	"vppippp",
	"vppipppii",
	"vppipppiii",
	"vppipppiiii",
	"vppipppiiiii",
	"vppippppp",
	"vpppiff",
	"vpppii",
	"vpppiii",
	"vpppiip",
	"vpppiipi",
	"vpppiipp",
	"vpppippi",
	"vpppipppi",
	"vppppi",
	"vppppiii",
	"vppppipiip",
	"vppppl",
	"vppppp",
	"vpppppii",
	"vpppppl",
	"vpppppp",
	"vppppppi",
	"vppppppp",
	"vpppppppp",
	"ipiiii",
	"iphiihii",
	"ppiiii",
	"ppppiiii",
])
for cc in ccs:
  reset(cc)
  while True:
      v = ("%s%s%s%s%s%s" % (cc, galphabet(digits[0]), galphabet(digits[1]), galphabet(digits[2]), galphabet(digits[3]), galphabet(digits[4])))
      if len(v) > 1:
        print(v)
      if not increase():
         break
  for extra in extras:
    print("%s%s" % (cc, extra))
    