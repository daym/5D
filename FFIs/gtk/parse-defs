#!/usr/bin/env python2

import sys
import os

types = {
	"void*": "p",
	"gint": "i",
	"const-gint": "i",
	"int": "i",
	"int*": "(^i)",
	"int**": "(^^i)",
	"VisualID": "I", # FIXME X11
	"PangoGlyph": "I",
	"GQuark": "I",
	"glong": "l", # FIXME dynamic size
	"glong*": "(^l)", # FIXME dynamic size
	"guint8": "B",
	"guint8*": "(^B)",
	"gchar*": "s",
	"guint16": "H",
	"gfloat": "f",
	"gfloat[]": "(^f)",
	"gunichar": "I",
	"gunichar*": "(^I)",
	"gunichar2": "H",
	"guint32": "I", # FIXME
	"guint32*": "(^I)", # FIXME
	"guint*": "(^I)", # FIXME
	"guint16*": "(^H)", # FIXME
	"guint**": "(^^I)", # FIXME
	"gchar***": "(^^s)",
	"char***": "(^^s)",
	"gchar**": "(^s)",
	"guchar**": "(^s)",
	"const-gchar*": "s",
	"const-char**": "(^s)",
	"const-gchar**": "(^s)",
	"char**": "(^s)",
	"gulong": "L", # FIXME
	"unsigned-long": "L", # FIXME
	"gulong*": "(^L)", # FIXME
	"AtkFocusHandler": "F",
	"AtkCoordType": "i",
	"AtkRole": "i",
	"AtkState": "Q", # guint64
	"gint64": "q",
	"gint*": "(^i)",
	"gint**": "(^^i)",
	"guint": "i",
	"gboolean": "?",
	"gboolean*": "(^?)",
	"gpointer": "p",
	"gpointer*": "(^p)",
	"AtkRelationType": "i",
	"GType": "(sz)", # size_t
	"GtkType": "(sz)", # size_t
	"GType*": "(^sz)", # size_t
	"GtkType*": "(^sz)", # size_t
	"gsize": "(sz)", # size_t
	"gssize": "(sz)", # size_t # TODO -1
	"size_t": "(sz)", # size_t
	"gsize*": "(^sz)", # size_t
	"AtkObject**": "(^p)",
	"AtkStateType": "i",
	"AtkStateType*": "(^i)",
	"AtkTextBoundary": "i",
	"AtkTextRange**": "(^p)",
	"AtkEventListener": "F",
	"AtkEventListenerInit": "F",
	"GSignalEmissionHook": "F",
	"AtkKeySnoopFunc": "F",
	"GSourceFunc": "F",
	"GDestroyNotify": "F",
	"double": "d",
	"gdouble": "d",
	"gdouble*": "(^d)",
	"double*": "(^d)",
	"GdkNativeWindow": "p", # or int?
	"GdkInputFunction": "F",
	"GdkDestroyNotify": "F",
	"GdkWindow**": "(^p)",
	"GCallback": "F",
	"GdkAtom": "p", # FIXME
	"GdkAtom*": "(^p)",
	"GdkAtom**": "(^^p)",
	"GdkFilterFunc": "F",
	"GdkScreen**": "(^p)",
	"GdkEventFunc": "F",
	"gchar": "B",
	"GdkWChar": "I", # FIXME
	"GdkWChar*": "(^I)", # FIXME
	"gint8[]": "(^b)", # FIXME
	"GdkTimeCoord***": "(^^p)", 
	"GdkTimeCoord**": "(^p)", 
	"GdkKeymapKey**": "(^p)",
	"GdkPixmap**": "(^p)",
	"GdkBitmap**": "(^p)",
	"GSpawnChildSetupFunc": "F",
	"GError**": "(^p)",
	"gboolean (*child_func)(GdkWindow *, gpointer)": "F",
	"GdkDrawable**": "(^p)",
	"GdkPixbufDestroyNotify": "F",
	"GdkPixbufSaveFunc": "F",
	"GdkRectangle**": "(^p)",
	"GdkSpanFunc": "F",
	"Colormap": "I", # FIXME 32, X11
	"XID": "I", # FIXME 32, X11
	"Atom": "I", # FIXME 32, X11
	'AtkTextClipType': "i",
	'AtkTextAttribute': "i",
	'GdkEventMask': "i",
	'GdkInputCondition': "i",
	"GdkColor**": "(^p)",
	'GdkCursorType': "i",
	'GdkDragAction': "i",
	'GdkDragProtocol': "i",
	'GdkRgbDither': "i",
	'GdkGCValuesMask': "i",
	'GdkEventType': "i",
	'GdkAxisUse': "i",
	'GdkFunction': "i",
	'GdkFill': "i",
	'GdkSubwindowMode': "i",
	'GdkLineStyle': "i",
	'GdkCapStyle': "i",
	'GdkJoinStyle': "i",
	'GdkImageType': "i",
	'GdkInputSource': "i",
	'GdkInputMode': "i",
	'GdkModifierType': "i",
	'GdkModifierType*': "i",
	'GdkExtensionMode': "i",
	'PangoRenderPart': "i",
	'GdkPixbufAlphaMode': "i",
	'GdkWindowState': "i",
	'GdkPropMode': "i",
	'GSpawnFlags': "i",
	'GdkVisualType': "i",
	'GdkVisualType**': "i",
	'GdkWindowTypeHint': "i",
	'GdkWindowHints': "i",
	'GdkWMDecoration': "i",
	'GdkWMDecoration*': "i",
	'GdkWMFunction': "i",
	'GdkWindowEdge': "i",
	'GdkColorspace': "i",
	'GdkInterpType': "i",
	'GdkPixdataDumpType': "i",
	'GdkFillRule': "i",
	"GtkAssistantPageFunc": "F",
	"GtkClipboardRichTextReceivedFunc": "F",
	"GtkFileInfoType": "p", # FIXME remove?
	"GtkFileSystemGetInfoCallback": "F",
	"GtkLinkButtonUriFunc": "F",
	"GtkNotebookWindowCreationFunc": "F",
	"GtkPageSetupDoneFunc": "F",
	'GdkDragProtocol*': "i",
	'GdkByteOrder': "i",
	'GdkFontType': "i",
	'GtkAssistantPageType': "i",
	'GtkPositionType': "i",
	'PangoWrapMode': "i",
	'GtkDirectionType': "i",
	'GtkPageOrientation': "i",
	'GtkUnit': "i",
	'GtkPrintOperationAction': "i",
	'GtkPrintOperationResult': "i",
	"GtkPrintSettingsFunc": "F",
	"GtkRecentSortFunc": "F",
	"GtkRecentFilterFunc": "F",
	"GtkTextBufferSerializeFunc": "F",
	"GtkTextBufferDeserializeFunc": "F",
	"GtkTreeViewSearchPositionFunc": "F",
	"GtkBuilderConnectFunc": "F",
	'GtkPrintDuplex': "i",
	'GtkPrintQuality': "i",
	'GtkPrintPages': "i",
	'GtkPageSet': "i",
	'GtkSensitivityType': "i",
	'GtkRecentSortType': "i",
	'GtkRecentFilterFlags': "i",
	'GtkTreeViewGridLines': "i",
	"GtkTreeModel**": "(^p)",
	"GtkTreePath**": "(^p)",
	'GtkIconLookupFlags': "i",
	'GtkIconSize': "i",
	"GtkCalendarDetailFunc": "F",
	"GtkClipboardURIReceivedFunc": "F",
	"GIcon**": "(^p)", # FIXME
	'GtkIconSize*': "i",
	'GtkNumberUpLayout': "i",
	'GtkOrientation': "i",
	"va_list": "(va)", # FIXME
	"GtkAboutDialogActivateLinkFunc": "F",
	'GtkOrientation*': "i",
	'GtkEntryIconPosition': "i",
	'GtkAccelFlags': "i",
	"GtkAccelMapForeach": "F",
	"GtkTranslateFunc": "F",
	"GtkDestroyNotify": "F",
	"gfloat*": "(^f)",
	"GtkCellLayoutDataFunc": "F",
	"GtkClipboardGetFunc": "F",
	"GtkClipboardClearFunc": "F",
	"GtkClipboardReceivedFunc": "F",
	"GtkClipboardTextReceivedFunc": "F",
	"GtkClipboardTargetsReceivedFunc": "F",
	"GtkClipboardImageReceivedFunc": "F",
	"GtkCListCompareFunc": "F",
	'GtkArrowType': "i",
	'GtkShadowType': "i",
	'GtkButtonBoxStyle': "i",
	'GtkPathType': "i",
	'GtkPathPriorityType': "i",
	'GtkPackType': "i",
	'GtkReliefStyle': "i",
	'GtkCalendarDisplayOptions': "i",
	'GtkCellRendererState': "i",
	'GtkSelectionMode': "i",
	'GtkJustification': "i",
	'GtkSortType': "i",
	'GtkScrollType': "i",
	'GtkCListDragPos': "i",
	'GtkCellType': "i",
	"GtkColorSelectionChangePaletteFunc": "F",
	"GtkColorSelectionChangePaletteWithScreenFunc": "F",
	"GtkTreeViewRowSeparatorFunc": "F",
	"GtkCallback": "F",
	"GtkCallbackMarshal": "F",
	"GList**": "(^p)",
	"GtkCTreeGNodeFunc": "F",
	"GtkCTreeFunc": "F",
	'GtkPackType*': "i",
	'GtkUpdateType': "i",
	'GtkResizeMode': "i",
	'GCompareFunc': "F",
	'GtkCTreeLineStyle': "i",
	'GtkCTreeExpanderStyle': "i",
	'GtkCTreeCompareDragFunc': "F",
	'GtkCTreeExpansionType': "i",
	'GtkCurveType': "i",
	'GtkDialogFlags': "i",
	'GtkDestDefaults': "i",
	'GtkMovementStep': "i",
	'GtkDeleteType': "i",
	'GtkEntryCompletionMatchFunc': "F",
	'GtkFileChooserAction': "i",
	'GtkFileFilterFlags': "i",
	'GtkFileFilterFunc': "F",
	"GtkFileTime": "Q", # FIXME
	"GtkFilePath": "s", # FIXME
	"GtkFilePath**": "(^^s)", # FIXME
	"GtkFileSystemGetFolderCallback": "F",
	"GSList**": "(^p)",
	"gchar**[]": "(^^s)",
	"GdkPoint**": "(^p)", # FIXME
	"GtkCellRenderer**": "(^p)",
	"GdkImage**": "(^p)",
	"GtkIconSet**": "(^p)", # FIXME
	"PangoAttrList**": "(^p)",
	'GtkTextDirection': "i",
	'GtkStateType': "i",
	'GtkIconSize**': "i",
	'GtkIconViewForeachFunc': "F",
	'GtkIconViewDropPosition': "i",
	'GtkIconViewDropPosition*': "i",
	'PangoEllipsizeMode': "i",
	"GtkFunction": "F",
	"GtkRcPropertyParser": "F",
	"GtkSignalMarshaller": "F",
	'GtkKeySnoopFunc': "F",
	'GtkMenuPositionFunc': "F",
	'GtkMenuDetachFunc': "F",
	'GtkPackDirection': "i",
	'GtkMenuDirectionType': "i",
	'GtkMessageType': "i",
	'GtkButtonsType': "i",
	'GtkNotebookTab': "i",
	'GtkPreviewType': "i",
	'GtkProgressBarOrientation': "i",
	'GtkProgressBarStyle': "i",
	'GtkStateType*': "i",
	'GtkPathPriorityType*': "i",
	'GtkMetricType': "i",
	'GtkPolicyType': "i",
	'GtkPolicyType*': "i",
	'GtkCornerType': "i",
	'GtkSignalRunType': "i",
	"GtkTextCharPredicate": "F",
	"PangoLogAttr**": "(^p)",
	'GtkSignalFunc': "F",
	'GSignalMatchType': "i",
	'GtkSizeGroupMode': "i",
	'GtkSpinButtonUpdatePolicy': "i",
	'GtkSpinType': "i",
	'GtkExpanderStyle': "i",
	'GtkAttachOptions': "i",
	'GtkTextSearchFlags': "i",
	"GtkTextTagTableForeach": "F",
	"GtkTooltips*": "p",
	"GtkTooltips**": "(^p)",
	"GtkWidget**": "(^p)",
	'GtkTextWindowType': "i",
	'GtkWrapMode': "i",
	'GtkToolbarChildType': "i",
	'GtkToolbarStyle': "i",
	'GtkTreeViewMode': "i",
	'GtkTreeModelForeachFunc': "F",
	'GtkTreeModelFilterVisibleFunc': "F",
	'GtkTreeModelFilterModifyFunc': "F",
	'GtkTreeSelectionFunc': "F",
	'GtkTreeSelectionForeachFunc': "F",
	'GtkSortType*': "i",
	'GtkTreeIterCompareFunc': "F",
	'GtkTreeCellDataFunc': "F",
	'GtkTreeViewColumnDropFunc': "F",
	'GtkTreeViewMappingFunc': "F",
	"GtkTreeViewColumn**": "(^p)",
	"GParamSpec**": "(^p)",
	"GtkSourceSearchFlags": "i", # FIXME
	"GtkSourceSmartHomeEndType": "i", # FIXME
	"GtkSourceDrawSpacesFlags": "i", # FIXME
	"GtkPrintCapabilities": "i", # FIXME
	"GladeXMLCustomWidgetHandler": "F", # FIXME
	'GtkTreeViewDropPosition': "i",
	'GtkTreeViewDropPosition*': "i",
	'GtkTreeViewSearchEqualFunc': "F",
	'GtkTreeDestroyCountFunc': "F",
	'GtkTreeViewColumnSizing': "i",
	'GTypeDebugFlags': "i",
	'GtkUIManagerItemType': "i",
	'GtkWidgetHelpType': "i",
	'GtkWindowPosition': "i",
	'GdkGravity': "i",
	'GtkWidgetFlags': "i",
	'GtkPrinterFunc': "F",
	'GtkPrintJobCompleteFunc': "F",
	'GladeXMLConnectFunc': "F",
	"PangoLanguage**": "(^p)",
	"PangoFontFamily***": "(^^p)",
	'PangoStyle': "i",
	'PangoWeight': "i",
	'PangoVariant': "i",
	'PangoStretch': "i",
	'PangoUnderline': "i",
	'PangoAttrDataCopyFunc': "F",
	'PangoGravity': "i",
	'PangoGravityHint': "i",
	'PangoAttrFilterFunc': "F",
	'PangoAttrType': "i",
	'PangoDirection': "i",
	'PangoCoverageLevel': "i",
	"PangoFontDescription**": "(^p)",
	"PangoFontFace***": "(^^p)",
	'PangoFontMask': "i",
	'PangoFontsetForeachFunc': "F",
	'PangoScript': "i",
	'PangoAlignment': "i",
	'PangoScript*': "i",
	'PangoTabAlign': "i",
	'PangoTabAlign*': "i",
	'PangoTabAlign**': "i",
	'PangoStyle*': "i",
	'PangoVariant*': "i",
	'PangoWeight*': "i",
	'PangoStretch*': "i",
	'PangoDirection*': "i",
	"VteTerminalCursorBlinkMode": "i",
	"VteTerminalCursorShape": "i",
	"VteTerminalAntiAlias": "i",
	"VteTerminalEraseBinding": "i", # FIXME
	"WnckPagerDisplayMode": "i",
	"WnckMotionDirection": "i",
	"WnckTasklistGroupingType": "i",
	"WnckLoadIconFunction": "i",
	"WnckClientType": "i",
	"WnckWindowType": "i",
	"WnckWindowGravity": "i",
	"WnckWindowMoveResizeMask": "i",
	"GRegexMatchFlags": "i",
}

parameters = []
for i, line in enumerate(sys.stdin.readlines()):
	if line.strip() == ")": # or line.find("(parameters") > -1: # no parameters
		print("%r" % "".join(parameters))
		if "".join(parameters) == "piippsiiiiiii":
			print("Yesss, before %d" % i)
			sys.exit(0)
		parameters = []
	elif line.startswith("    '"):
		e = line.strip()
		assert(e.startswith("'(\""))
		e = e[3:]
		ty = e.split("\"")[0]
		if ty.count("*") == 1 and ty.replace("*", "").strip() not in types:
			# probably class ptr.
			ty = "void*"
		if ty not in types:
			if os.spawnvp(os.P_WAIT, "./is-enum?", ["./is-enum?", ty]) == 0: # it is
				types[ty] = "i"
				print("\t%r: \"i\"," % ty)
			else:
				if ty.endswith("Func"):
					types[ty] = "F"
					print("\t%r: \"F\"," % ty)
		f_ty = types[ty]
		#if len(f_ty) != 1 and not f_ty.startswith("("):
		#	print("OOPS", f_ty)
		parameters.append(f_ty)
