#ifndef __EVALUATORS_LOGIC_H
#define __EVALUATORS_LOGIC_H
#include "Values/Values"
#include "Evaluators/Operation"

namespace Evaluators {

#ifdef USE_SPECIAL_FORMS
DECLARE_SPECIAL_FORM(Sequencer) /* (;) */
DECLARE_SPECIAL_FORM(Ander) /* && */
DECLARE_SPECIAL_FORM(Orer) /* || */
DECLARE_SPECIAL_FORM(Noter) /* not */
DECLARE_SPECIAL_FORM(Ifer) /* if */
DECLARE_SPECIAL_FORM(Elser) /* else */
DECLARE_SPECIAL_FORM(Elifer) /* elif */
#else
extern Values::NodeT Sequencer;
extern Values::NodeT Ander;
extern Values::NodeT Orer;
extern Values::NodeT Noter;
extern Values::NodeT Ifer;
extern Values::NodeT Elifer;
extern Values::NodeT Elser;
#endif

Values::NodeT internNative(bool value);
void Logic_init(void);

};

#endif /* ndef __EVALUATORS_LOGIC_H */
