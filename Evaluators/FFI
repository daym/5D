#ifndef __4D_Evaluators_FFI_H
#define __4D_Evaluators_FFI_H
/*
4D vector analysis program
Copyright (C) 2011  Danny Milosavljevic
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
#include "Evaluators/Evaluators"

namespace Evaluators {

int get_native_integer(AST::Node* root);
void* get_native_pointer(AST::Node* root);
bool get_native_boolean(AST::Node* root);
char* get_native_string(AST::Node* root);

struct FFI : Operation {
	virtual AST::Node* execute(AST::Node* argument);
	virtual AST::Node* executeLowlevel(AST::Node* argument) = 0;
};
struct FFIClosure : Operation {
	AST::Node* argument;
	FFI* routine;
	FFIClosure(AST::Node* argument, FFI* routine) {
		this->argument = argument;
		this->routine = routine;
	}
	virtual AST::Node* execute(AST::Node* state);
};

};

#endif /* ndef __4D_Evaluators_FFI_H */
