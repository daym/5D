let raiseMissingSymbolError = (\key ["missing symbol" key]) in
let (|) = (\a \b b a) in 
let ($) = (\a \b a b) in 
let compose = (\f \g \x f (g x)) in 
let flip = (\f \a \b f b a) in 
let id = (\f f) in 
let Y = (\f (\x f (x x)) (\x f (x x))) in 
let rec = Y in 
let rem = \a \b b in 
let export = id in 
let makeModuleBox = Builtins.makeModuleBox in 
let dispatchModule2 = Builtins.dispatchModule in 
let dispatch = (\table \fallbackAction \key dispatchModule2 (makeModuleBox table) fallbackAction key) in 
let dispatch1 = (\table dispatch table raiseMissingSymbolError) in 
dispatch [['(|) (|)]
['($) ($)]
['compose compose]
['flip flip]
['id id]
['rec rec]
['rem rem]
['export export]
['dispatch dispatch]
['raiseMissingSymbolError raiseMissingSymbolError]
['dispatch1 dispatch1]]
raiseMissingSymbolError
