
define sum foldr (+) 0
define product foldr (*) 1
define anyTrue? foldr (||) #f
define allTrue? foldr (&&) #t
define (++) \a \b foldr (:) b a
define map \f foldr (cons . f) nil

-- f (f (f (f a)))
define repeatedly rec \repeat \f \a a:(repeat f (f a))
