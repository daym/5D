
define sum foldr (+) 0
define product foldr (*) 1
define anyTrue? foldr (||) #f
define allTrue? foldr (&&) #t
define (++) \a \b foldr (:) b a
define map \f foldr (cons . f) nil

-- f (f (f (f a)))
define repeatedly rec \repeatedly \f \a a:(repeatedly f (f a))

define flip \f \a \b (f b a)
define reverse foldl (flip (:)) nil

define anyTrue? \f \list foldr (||) #f (map f list)
define allTrue? ...
