#ifndef __SCANNERS_MATH_PARSER_H
#define __SCANNERS_MATH_PARSER_H
/*
4D vector analysis program
Copyright (C) 2011  Danny Milosavljevic
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "Scanners/Scanner"
#include "AST/AST"

namespace Scanners {

class MathParser : Scanner {
protected:
	AST::Node* input_value;
private:
	bool allow_args;
	virtual void parse_token(void);
	void parse_operator(int input);
	void parse_star(int input);
	void parse_number(int input);
	void parse_anglebracket(int input);
	void parse_unicode(int input);
	void parse_structural(int input);
	void parse_symbol(int input, int special_prefix = 0);
	AST::Node* parse_value(void);
	AST::Node* parse_binary_operation(int precedence_level);
	AST::Node* parse_abstraction(void);
	void parse_optional_whitespace(void);
	AST::Cons* operation(AST::Node* operator_, AST::Node* operand_1, AST::Node* operand_2);
	AST::Node* parse_macro(AST::Node* operand_1);
	AST::Node* parse_argument(void);
	AST::Node* maybe_parse_macro(AST::Node* node);
protected:
	AST::Node* parse_expression(void);
	AST::Node* consume(AST::Symbol* expected_token = NULL);
public:
	AST::Node* parse(FILE* input_file);
};

}; /* end namespace Scanners */

#endif /* ndef __SCANNERS_MATH_PARSER_H */
