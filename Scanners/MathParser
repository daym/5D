#ifndef __SCANNERS_MATH_PARSER_H
#define __SCANNERS_MATH_PARSER_H
#include "Scanners/Scanner"
#include "AST/AST"

namespace Scanners {

class MathParser : Scanner {
protected:
	AST::Node* input_value;
private:
	virtual void parse_token(void);
	void parse_operator(int input);
	void parse_star(int input);
	void parse_number(int input);
	void parse_anglebracket(int input);
	void parse_unicode(int input);
	void parse_structural(int input);
	void parse_symbol(int input);
	AST::Node* parse_value(void);
	AST::Node* parse_binary_operation(int precedence_level);
	AST::Node* parse_arguments(AST::Node* original);
	AST::Node* parse_abstraction(void);
protected:
	AST::Node* parse_expression(void);
	AST::Node* consume(AST::Symbol* expected_token = NULL);
public:
	AST::Node* parse(FILE* input_file);
};

}; /* end namespace Scanners */

#endif /* ndef __SCANNERS_MATH_PARSER_H */
