#ifndef __COMPILERS_CALLGEN_H
#define __COMPILERS_CALLGEN_H
#include <deque>
#include <vector>
#include "stdafx.h"
#include "AST/AST"
#include "AST/Symbol"
#include "Compilers/CodeGen"
namespace Compilers {

typedef enum {
	CGI_PUSH,
	CGI_MOV,
} CallGenOpcode;
class CallGen {
protected:
	CodeGen* code_gen;
	std::vector<AST::Node*> arguments;
	unsigned stack_usage_afterwards;
public:
	CallGen(CodeGen* code_gen);
	virtual void clear(void);
	void add(AST::Node* source) {
		arguments.push_back(source);
		stack_usage_afterwards += code_gen->get_size_in_bits(source);
	}
	virtual void build(AST::Node* call_destination);
};

}; /* namespace Compilers */
#endif /* ndef __COMPILERS_CALLGEN_H */
