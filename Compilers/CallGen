#ifndef __COMPILERS_CALLGEN_H
#define __COMPILERS_CALLGEN_H
#include <deque>
#include "stdafx.h"
#include "AST/AST"
#include "AST/Symbol"
#include "Compilers/CodeGen"
namespace Compilers {

typedef enum {
	CGI_PUSH,
	CGI_MOV,
} CallGenOpcode;
class CallGen {
private:
	std::deque<uint32_t> header; /* FIXME type */
	std::deque<uint32_t> footer;
	CodeGen* code_gen;
protected:
	unsigned argument_count;
	unsigned stack_usage_afterwards;
public:
	CallGen(CodeGen* code_gen);
	void clear(void);
	/*virtual void emit_call(AST::Node* destination) = 0;*/
	virtual void add(AST::Node* source);
	/*virtual*/ void build(AST::Node* call_destination);
};

}; /* namespace Compilers */
#endif /* ndef __COMPILERS_CALLGEN_H */
