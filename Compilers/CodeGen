#ifndef __COMPILERS_CODEGEN_H
#define __COMPILERS_CODEGEN_H
#include "Values/Values"
#include "AST/Symbol"
namespace Compilers {
class CodeGen {
public:
	virtual unsigned getSizeInBits(AST::NodeT source) = 0;
	virtual void genPush(AST::NodeT source) = 0;
	virtual void genPop(AST::NodeT source) = 0;
	virtual void genStackThrowawayBits(int bit_count) = 0;
	virtual void genCall(AST::NodeT destination) = 0;
	virtual void genLoadRegisterFromImmediate(AST::NodeT/*Symbol*/register_, AST::NodeT value) = 0;
	virtual void genLoadRegisterFromRegister(AST::NodeT/*Symbol*/register_, AST::NodeT/*Symbol*/ source) = 0;
	virtual void genEnterFrame(void) = 0;
	virtual void genLeaveFrame(void) = 0;
	virtual void genReturn(int bit_count) = 0;
};
}; /* end namespace Compilers */
#endif /* __COMPILERS_CODEGEN_H */
