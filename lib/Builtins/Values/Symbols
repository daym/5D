#ifndef __AST_SYMBOLS_H
#define __AST_SYMBOLS_H

namespace Values {
struct Symbol;
};

namespace Symbols {
extern Values::NodeT Spercenteax;
extern Values::NodeT Sright;
extern Values::NodeT SlistFromStr;
extern Values::NodeT Slessequal;
extern Values::NodeT Sinline;
extern Values::NodeT Shead;
extern Values::NodeT SREPLV1;
extern Values::NodeT Snot;
extern Values::NodeT Scircumflex;
extern Values::NodeT SfloatP;
extern Values::NodeT SsymbolFromStr;
extern Values::NodeT Sdivmod0;
extern Values::NodeT Sin;
extern Values::NodeT Sapply;
extern Values::NodeT Sgreater;
extern Values::NodeT Sspace ;
extern Values::NodeT SstrP;
extern Values::NodeT Scrossproduct;
extern Values::NodeT Squote;
extern Values::NodeT Srightbracket;
extern Values::NodeT Srightparen;
extern Values::NodeT Sautorightparen;
extern Values::NodeT SkeywordFromStr;
extern Values::NodeT Splus;
extern Values::NodeT Sasterisk;
extern Values::NodeT Sdash;
extern Values::NodeT SintegerP;
extern Values::NodeT Sslash;
extern Values::NodeT Senvironment;
extern Values::NodeT Szero;
extern Values::NodeT Stail;
extern Values::NodeT SnilP;
extern Values::NodeT Slesssymbolgreater;
extern Values::NodeT Srec;
extern Values::NodeT Sapprox;
extern Values::NodeT Scolon;
extern Values::NodeT SstrFromKeyword;
extern Values::NodeT SstrFromList;
extern Values::NodeT Sless;
extern Values::NodeT Stips5DV1;
extern Values::NodeT Sdefine;
extern Values::NodeT Sleftangle;
extern Values::NodeT Srightangle;
extern Values::NodeT SfromLibrary;
extern Values::NodeT Spercentecx;
extern Values::NodeT Snil;
extern Values::NodeT Sbackslash;
extern Values::NodeT StextBufferText;
extern Values::NodeT SsymbolsEqualP;
extern Values::NodeT Shashf;
extern Values::NodeT SrunIO;
extern Values::NodeT Spercentedx;
extern Values::NodeT SintegerSucc;
extern Values::NodeT Slet;
extern Values::NodeT Sletexclam;
extern Values::NodeT Sintzero;
extern Values::NodeT Sasteriskasterisk;
extern Values::NodeT Sleftbracket;
extern Values::NodeT SaddrsLEP;
extern Values::NodeT SintP;
extern Values::NodeT Sdefrec;
extern Values::NodeT SsymbolP;
extern Values::NodeT Sleftcurly;
extern Values::NodeT Sunderscore;
extern Values::NodeT Shasht;
extern Values::NodeT Snone;
extern Values::NodeT Stilde;
extern Values::NodeT StranslateFFI;
extern Values::NodeT Slessstringgreater;
extern Values::NodeT Sequal;
extern Values::NodeT Slessequalunicode;
extern Values::NodeT Sgreaterequalunicode;
extern Values::NodeT SconsP;
extern Values::NodeT Slessoperatorgreater;
extern Values::NodeT SlessEOFgreater;
extern Values::NodeT Sslashequal;
extern Values::NodeT Sleftparen;
extern Values::NodeT Sautoleftparen;
extern Values::NodeT SkeywordP;
extern Values::NodeT SintSucc;
extern Values::NodeT SloadFromLibrary;
extern Values::NodeT Srightcurly;
extern Values::NodeT Shello;
extern Values::NodeT Sdef;
extern Values::NodeT Sleft;
extern Values::NodeT Stab;
extern Values::NodeT Snewline;
extern Values::NodeT Sbackspace;
extern Values::NodeT Sescape;
extern Values::NodeT Sinfo;
extern Values::NodeT Sdescribe;
extern Values::NodeT SrequireModule;
extern Values::NodeT Sunderline;
extern Values::NodeT SmoduleKeys;
extern Values::NodeT Sexports;
extern Values::NodeT Sdispatch;
extern Values::NodeT Sprefix;
extern Values::NodeT Spostfix;
extern Values::NodeT Sdot;
extern Values::NodeT Sunarydash;
extern Values::NodeT Ssubstr;
extern Values::NodeT SstrUntilZero;
extern Values::NodeT Sintegral;
extern Values::NodeT Sroot;
extern Values::NodeT Sa;
extern Values::NodeT Sb;
extern Values::NodeT SBuiltins;
extern Values::NodeT Scolonequal;
extern Values::NodeT SgetOperatorPrecedenceListexclam;
extern Values::NodeT Sdescribeexclam;
extern Values::NodeT Sdefineexcam;
extern Values::NodeT Simportexclam;
extern Values::NodeT Spurgeexclam;
extern Values::NodeT Sexecuteexclam;
extern Values::NodeT Sreturnexclam;
extern Values::NodeT Shashexports;
extern Values::NodeT Scomma;
extern Values::NodeT Sfst;
extern Values::NodeT Ssnd;
extern Values::NodeT SpairP;
extern Values::NodeT Simport;
extern Values::NodeT Sfrom;
extern Values::NodeT Shashexclam;
extern Values::NodeT SAX;
extern Values::NodeT SCX;
extern Values::NodeT SDX;
extern Values::NodeT SBX;
extern Values::NodeT SSP;
extern Values::NodeT SBP;
extern Values::NodeT SSI;
extern Values::NodeT SDI;
extern Values::NodeT SloadValReg;
extern Values::NodeT SloadRegReg;
extern Values::NodeT SpopReg;
extern Values::NodeT SpushReg;
extern Values::NodeT SpopRegs;
extern Values::NodeT SpushRegs;
extern Values::NodeT SaddRegReg;
extern Values::NodeT SaddValReg;
extern Values::NodeT SsubRegReg;
extern Values::NodeT SsubValReg;
extern Values::NodeT SmulRegReg;
extern Values::NodeT SmulValRegReg;
extern Values::NodeT SidivVal;
extern Values::NodeT Sret;
extern Values::NodeT SclearCarry;
extern Values::NodeT SsetCarry;
extern Values::NodeT Sadc;
extern Values::NodeT Ssbb;
extern Values::NodeT SR0;
extern Values::NodeT SR1;
extern Values::NodeT SR2;
extern Values::NodeT SR3;
extern Values::NodeT SR4;
extern Values::NodeT SR5;
extern Values::NodeT SR6;
extern Values::NodeT SR7;
extern Values::NodeT SR8;
extern Values::NodeT SR9;
extern Values::NodeT SSL;
extern Values::NodeT SFP;
extern Values::NodeT SIP;
extern Values::NodeT SLR;
extern Values::NodeT SPC;
extern Values::NodeT Ssemicolon;
extern Values::NodeT SfreeVariables;
extern Values::NodeT SdynamicBuiltin;
extern Values::NodeT Swrap;
extern Values::NodeT Stable;
void initSymbols2(void);
static __inline void initSymbols(void) {
	if(Swrap == NULL)
		initSymbols2();
}
}

#endif /* ndef __AST_SYMBOLS_H */
