#ifndef __AST_H
#define __AST_H
/*
5D vector analysis program
Copyright (C) 2011  Danny Milosavljevic
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
#include <string>

namespace AST {

struct Node {
	virtual std::string str(void) const;
};
struct Cons : Node {
	Node* head;
	Cons* tail;
	virtual std::string str(void) const;
};
std::string str(const Cons& a);
struct Atom : Node {
	std::string text; // char* text;
	virtual std::string str(void) const;
};
struct String : Atom {
	String(const std::string& value) {
		text = value;
	}
	virtual std::string str(void) const;
};
struct Operation : Node {
	virtual bool eager_P() const;
	virtual AST::Node* execute(AST::Node* argument) = 0;
	virtual AST::Node* repr(AST::Node* selfName) const;
};
struct Box : Atom {
	void* native;
	Box(void* native) {
		this->native = native;
	}
	virtual std::string str(void) const;
};
std::string str(const Atom& a);

Cons* cons(Node* head, Cons* tail);
Atom* literal(const char* text);
String* string_literal(const char* text);
AST::Cons* follow_tail(AST::Cons* list);
bool string_P(AST::Node* node);

}; /* namespace AST */
#endif /* __AST_H */
