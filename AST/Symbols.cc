#include "AST/Symbol"

namespace Symbols {

AST::Symbol* Spercenteax = AST::symbolFromStr("%eax");
AST::Symbol* Sright = AST::symbolFromStr("right");
AST::Symbol* SlistFromStr = AST::symbolFromStr("listFromStr");
AST::Symbol* Slessequal = AST::symbolFromStr("<=");
AST::Symbol* Sinline = AST::symbolFromStr("inline");
AST::Symbol* Shead = AST::symbolFromStr("head");
AST::Symbol* SREPLV1 = AST::symbolFromStr("REPLV1");
AST::Symbol* Snot = AST::symbolFromStr("not");
AST::Symbol* Scircumflex = AST::symbolFromStr("^");
AST::Symbol* SfloatP = AST::symbolFromStr("float?");
AST::Symbol* SsymbolFromStr = AST::symbolFromStr("symbolFromStr");
AST::Symbol* Sdivmod = AST::symbolFromStr("divmod");
AST::Symbol* Sin = AST::symbolFromStr("in");
AST::Symbol* Sapply = AST::symbolFromStr("apply");
AST::Symbol* Sgreater = AST::symbolFromStr(">");
AST::Symbol* Sspace  = AST::symbolFromStr(" ");
AST::Symbol* SstrP = AST::symbolFromStr("str?");
AST::Symbol* Scrossproduct = AST::symbolFromStr("⨯");
AST::Symbol* Squote = AST::symbolFromStr("'");
AST::Symbol* Srightbracket = AST::symbolFromStr("]");
AST::Symbol* Srightparen = AST::symbolFromStr(")");
AST::Symbol* Sautorightparen = AST::symbolFromStr("auto)");
AST::Symbol* SkeywordFromStr = AST::symbolFromStr("keywordFromStr");
AST::Symbol* Splus = AST::symbolFromStr("+");
AST::Symbol* Sasterisk = AST::symbolFromStr("*");
AST::Symbol* Sdash = AST::symbolFromStr("-");
AST::Symbol* SintegerP = AST::symbolFromStr("integer?");
AST::Symbol* Sslash = AST::symbolFromStr("/");
AST::Symbol* Senvironment = AST::symbolFromStr("environment");
AST::Symbol* Szero = AST::symbolFromStr("0");
AST::Symbol* Stail = AST::symbolFromStr("tail");
AST::Symbol* SnilP = AST::symbolFromStr("nil?");
AST::Symbol* Slesssymbolgreater = AST::symbolFromStr("<symbol>");
AST::Symbol* Srec = AST::symbolFromStr("rec");
AST::Symbol* Sapprox = AST::symbolFromStr("≈");
AST::Symbol* Scolon = AST::symbolFromStr(":");
AST::Symbol* SstrFromKeyword = AST::symbolFromStr("strFromKeyword");
AST::Symbol* SstrFromList = AST::symbolFromStr("strFromList");
AST::Symbol* Sless = AST::symbolFromStr("<");
AST::Symbol* Stips5DV1 = AST::symbolFromStr("tips5DV1");
AST::Symbol* Sdefine = AST::symbolFromStr("define");
AST::Symbol* Sleftangle = AST::symbolFromStr("⟨");
AST::Symbol* Srightangle = AST::symbolFromStr("⟩");
AST::Symbol* SfromLibrary = AST::symbolFromStr("fromLibrary");
AST::Symbol* Spercentecx = AST::symbolFromStr("%ecx");
AST::Symbol* Snil = AST::symbolFromStr("nil");
AST::Symbol* Sbackslash = AST::symbolFromStr("\\");
AST::Symbol* StextBufferText = AST::symbolFromStr("textBufferText");
AST::Symbol* SsymbolsEqualP = AST::symbolFromStr("symbolsEqual?");
AST::Symbol* Shashf = AST::symbolFromStr("#f");
AST::Symbol* SrunWorld = AST::symbolFromStr("runWorld");
AST::Symbol* Spercentedx = AST::symbolFromStr("%edx");
AST::Symbol* SintegerSucc = AST::symbolFromStr("integerSucc");
AST::Symbol* Slet = AST::symbolFromStr("let");
AST::Symbol* Sintzero = AST::symbolFromStr("int0");
AST::Symbol* Sasteriskasterisk = AST::symbolFromStr("**");
AST::Symbol* Sleftbracket = AST::symbolFromStr("[");
AST::Symbol* SaddrsLEP = AST::symbolFromStr("addrsLE?");
AST::Symbol* SintP = AST::symbolFromStr("int?");
AST::Symbol* Sdefrec = AST::symbolFromStr("defrec");
AST::Symbol* SsymbolP = AST::symbolFromStr("symbol?");
AST::Symbol* Sleftcurly = AST::symbolFromStr("{");
AST::Symbol* Sunderscore = AST::symbolFromStr("_");
AST::Symbol* Shasht = AST::symbolFromStr("#t");
AST::Symbol* Snone = AST::symbolFromStr("none");
AST::Symbol* Stilde = AST::symbolFromStr("~");
AST::Symbol* StranslateFFI = AST::symbolFromStr("translateFFI");
AST::Symbol* Slessstringgreater = AST::symbolFromStr("<string>");
AST::Symbol* Sequal = AST::symbolFromStr("=");
AST::Symbol* Slessequalunicode = AST::symbolFromStr("≤");
AST::Symbol* Sgreaterequalunicode = AST::symbolFromStr("≥");
AST::Symbol* SconsP = AST::symbolFromStr("cons?");
AST::Symbol* Slessoperatorgreater = AST::symbolFromStr("<operator>");
AST::Symbol* SlessEOFgreater = AST::symbolFromStr("<EOF>");
AST::Symbol* Sslashequal = AST::symbolFromStr("/=");
AST::Symbol* Sleftparen = AST::symbolFromStr("(");
AST::Symbol* Sautoleftparen = AST::symbolFromStr("auto(");
AST::Symbol* SkeywordP = AST::symbolFromStr("keyword?");
AST::Symbol* SintSucc = AST::symbolFromStr("intSucc");
AST::Symbol* SloadFromLibrary = AST::symbolFromStr("loadFromLibrary");
AST::Symbol* Srightcurly = AST::symbolFromStr("}");
AST::Symbol* Shello = AST::symbolFromStr("hello");
AST::Symbol* Sdef = AST::symbolFromStr("def");
AST::Symbol* Sleft = AST::symbolFromStr("left");
AST::Symbol* Stab = AST::symbolFromStr("tab");
AST::Symbol* Snewline = AST::symbolFromStr("newline");
AST::Symbol* Sbackspace = AST::symbolFromStr("backspace");
AST::Symbol* Sescape = AST::symbolFromStr("escape");
AST::Symbol* Sinfo = AST::symbolFromStr("info");
AST::Symbol* Simport = AST::symbolFromStr("import");
AST::Symbol* Sdescribe = AST::symbolFromStr("describe");
AST::Symbol* SrequireModule = AST::symbolFromStr("requireModule");
AST::Symbol* Sunderline = AST::symbolFromStr("_");
AST::Symbol* SmoduleKeys = AST::symbolFromStr("moduleKeys");
AST::Symbol* Sexports = AST::symbolFromStr("exports");
AST::Symbol* SdispatchModule = AST::symbolFromStr("dispatchModule");
AST::Symbol* Sprefix = AST::symbolFromStr("prefix");
AST::Symbol* Sdot = AST::symbolFromStr(".");
AST::Symbol* Sunarydash = AST::symbolFromStr("unary-");

};
