/* compiled from: . */
/* /usr/include/glib-2.0/glib/garray.h:70:NC */ extern GArray *g_array_new (gboolean, gboolean, guint);
/* /usr/include/glib-2.0/glib/garray.h:73:NC */ extern GArray *g_array_sized_new (gboolean, gboolean, guint, guint);
/* /usr/include/glib-2.0/glib/garray.h:77:NC */ extern gchar *g_array_free (GArray *, gboolean);
/* /usr/include/glib-2.0/glib/garray.h:79:NC */ extern GArray *g_array_ref (GArray *);
/* /usr/include/glib-2.0/glib/garray.h:80:NC */ extern void g_array_unref (GArray *);
/* /usr/include/glib-2.0/glib/garray.h:81:NC */ extern guint g_array_get_element_size (GArray *);
/* /usr/include/glib-2.0/glib/garray.h:82:NC */ extern GArray *g_array_append_vals (GArray *, gconstpointer, guint);
/* /usr/include/glib-2.0/glib/garray.h:85:NC */ extern GArray *g_array_prepend_vals (GArray *, gconstpointer, guint);
/* /usr/include/glib-2.0/glib/garray.h:88:NC */ extern GArray *g_array_insert_vals (GArray *, guint, gconstpointer, guint);
/* /usr/include/glib-2.0/glib/garray.h:92:NC */ extern GArray *g_array_set_size (GArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:94:NC */ extern GArray *g_array_remove_index (GArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:96:NC */ extern GArray *g_array_remove_index_fast (GArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:98:NC */ extern GArray *g_array_remove_range (GArray *, guint, guint);
/* /usr/include/glib-2.0/glib/garray.h:101:NC */ extern void g_array_sort (GArray *, GCompareFunc);
/* /usr/include/glib-2.0/glib/garray.h:103:NC */ extern void g_array_sort_with_data (GArray *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/garray.h:112:NC */ extern GPtrArray *g_ptr_array_new (void);
/* /usr/include/glib-2.0/glib/garray.h:113:NC */ extern GPtrArray *g_ptr_array_new_with_free_func (GDestroyNotify);
/* /usr/include/glib-2.0/glib/garray.h:114:NC */ extern GPtrArray *g_ptr_array_sized_new (guint);
/* /usr/include/glib-2.0/glib/garray.h:115:NC */ extern GPtrArray *g_ptr_array_new_full (guint, GDestroyNotify);
/* /usr/include/glib-2.0/glib/garray.h:117:NC */ extern gpointer *g_ptr_array_free (GPtrArray *, gboolean);
/* /usr/include/glib-2.0/glib/garray.h:119:NC */ extern GPtrArray *g_ptr_array_ref (GPtrArray *);
/* /usr/include/glib-2.0/glib/garray.h:120:NC */ extern void g_ptr_array_unref (GPtrArray *);
/* /usr/include/glib-2.0/glib/garray.h:121:NC */ extern void g_ptr_array_set_free_func (GPtrArray *, GDestroyNotify);
/* /usr/include/glib-2.0/glib/garray.h:123:NC */ extern void g_ptr_array_set_size (GPtrArray *, gint);
/* /usr/include/glib-2.0/glib/garray.h:125:NC */ extern gpointer g_ptr_array_remove_index (GPtrArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:127:NC */ extern gpointer g_ptr_array_remove_index_fast (GPtrArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:129:NC */ extern gboolean g_ptr_array_remove (GPtrArray *, gpointer);
/* /usr/include/glib-2.0/glib/garray.h:131:NC */ extern gboolean g_ptr_array_remove_fast (GPtrArray *, gpointer);
/* /usr/include/glib-2.0/glib/garray.h:133:NC */ extern void g_ptr_array_remove_range (GPtrArray *, guint, guint);
/* /usr/include/glib-2.0/glib/garray.h:136:NC */ extern void g_ptr_array_add (GPtrArray *, gpointer);
/* /usr/include/glib-2.0/glib/garray.h:138:NC */ extern void g_ptr_array_sort (GPtrArray *, GCompareFunc);
/* /usr/include/glib-2.0/glib/garray.h:140:NC */ extern void g_ptr_array_sort_with_data (GPtrArray *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/garray.h:143:NC */ extern void g_ptr_array_foreach (GPtrArray *, GFunc, gpointer);
/* /usr/include/glib-2.0/glib/garray.h:152:NC */ extern GByteArray *g_byte_array_new (void);
/* /usr/include/glib-2.0/glib/garray.h:153:NC */ extern GByteArray *g_byte_array_sized_new (guint);
/* /usr/include/glib-2.0/glib/garray.h:154:NC */ extern guint8 *g_byte_array_free (GByteArray *, gboolean);
/* /usr/include/glib-2.0/glib/garray.h:156:NC */ extern GByteArray *g_byte_array_ref (GByteArray *);
/* /usr/include/glib-2.0/glib/garray.h:157:NC */ extern void g_byte_array_unref (GByteArray *);
/* /usr/include/glib-2.0/glib/garray.h:158:NC */ extern GByteArray *g_byte_array_append (GByteArray *, const guint8 *, guint);
/* /usr/include/glib-2.0/glib/garray.h:161:NC */ extern GByteArray *g_byte_array_prepend (GByteArray *, const guint8 *, guint);
/* /usr/include/glib-2.0/glib/garray.h:164:NC */ extern GByteArray *g_byte_array_set_size (GByteArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:166:NC */ extern GByteArray *g_byte_array_remove_index (GByteArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:168:NC */ extern GByteArray *g_byte_array_remove_index_fast (GByteArray *, guint);
/* /usr/include/glib-2.0/glib/garray.h:170:NC */ extern GByteArray *g_byte_array_remove_range (GByteArray *, guint, guint);
/* /usr/include/glib-2.0/glib/garray.h:173:NC */ extern void g_byte_array_sort (GByteArray *, GCompareFunc);
/* /usr/include/glib-2.0/glib/garray.h:175:NC */ extern void g_byte_array_sort_with_data (GByteArray *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gquark.h:42:NC */ extern GQuark g_quark_try_string (const gchar *);
/* /usr/include/glib-2.0/glib/gquark.h:43:NC */ extern GQuark g_quark_from_static_string (const gchar *);
/* /usr/include/glib-2.0/glib/gquark.h:44:NC */ extern GQuark g_quark_from_string (const gchar *);
/* /usr/include/glib-2.0/glib/gquark.h:45:NC */ extern const gchar *g_quark_to_string (GQuark);
/* /usr/include/glib-2.0/glib/gquark.h:47:NC */ extern const gchar *g_intern_string (const gchar *);
/* /usr/include/glib-2.0/glib/gquark.h:48:NC */ extern const gchar *g_intern_static_string (const gchar *);
/* /usr/include/glib-2.0/glib/gerror.h:52:NC */ extern GError *g_error_new (GQuark, gint, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gerror.h:57:NC */ extern GError *g_error_new_literal (GQuark, gint, const gchar *);
/* /usr/include/glib-2.0/glib/gerror.h:60:NC */ extern GError *g_error_new_valist (GQuark, gint, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gerror.h:65:NC */ extern void g_error_free (GError *);
/* /usr/include/glib-2.0/glib/gerror.h:66:NC */ extern GError *g_error_copy (const GError *);
/* /usr/include/glib-2.0/glib/gerror.h:68:NC */ extern gboolean g_error_matches (const GError *, GQuark, gint);
/* /usr/include/glib-2.0/glib/gerror.h:75:NC */ extern void g_set_error (GError **, GQuark, gint, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gerror.h:81:NC */ extern void g_set_error_literal (GError **, GQuark, gint, const gchar *);
/* /usr/include/glib-2.0/glib/gerror.h:88:NC */ extern void g_propagate_error (GError **, GError *);
/* /usr/include/glib-2.0/glib/gerror.h:92:NC */ extern void g_clear_error (GError **);
/* /usr/include/glib-2.0/glib/gerror.h:95:NC */ extern void g_prefix_error (GError **, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gerror.h:100:NC */ extern void g_propagate_prefixed_error (GError **, GError *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gutils.h:120:NC */ extern const gchar *g_get_user_name (void);
/* /usr/include/glib-2.0/glib/gutils.h:121:NC */ extern const gchar *g_get_real_name (void);
/* /usr/include/glib-2.0/glib/gutils.h:122:NC */ extern const gchar *g_get_home_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:123:NC */ extern const gchar *g_get_tmp_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:124:NC */ extern const gchar *g_get_host_name (void);
/* /usr/include/glib-2.0/glib/gutils.h:125:NC */ extern gchar *g_get_prgname (void);
/* /usr/include/glib-2.0/glib/gutils.h:126:NC */ extern void g_set_prgname (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:127:NC */ extern const gchar *g_get_application_name (void);
/* /usr/include/glib-2.0/glib/gutils.h:128:NC */ extern void g_set_application_name (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:130:NC */ extern void g_reload_user_special_dirs_cache (void);
/* /usr/include/glib-2.0/glib/gutils.h:131:NC */ extern const gchar *g_get_user_data_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:132:NC */ extern const gchar *g_get_user_config_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:133:NC */ extern const gchar *g_get_user_cache_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:134:NC */ extern const gchar *const *g_get_system_data_dirs (void);
/* /usr/include/glib-2.0/glib/gutils.h:154:NC */ extern const gchar *const *g_get_system_config_dirs (void);
/* /usr/include/glib-2.0/glib/gutils.h:156:NC */ extern const gchar *g_get_user_runtime_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:158:NC */ extern const gchar *const *g_get_language_names (void);
/* /usr/include/glib-2.0/glib/gutils.h:160:NC */ extern gchar **g_get_locale_variants (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:197:NC */ extern const gchar *g_get_user_special_dir (GUserDirectory);
/* /usr/include/glib-2.0/glib/gutils.h:216:NC */ extern guint g_parse_debug_string (const gchar *, const GDebugKey *, guint);
/* /usr/include/glib-2.0/glib/gutils.h:220:NC */ extern gint g_snprintf (gchar *, gulong, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gutils.h:224:NC */ extern gint g_vsnprintf (gchar *, gulong, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gutils.h:230:NC */ extern gboolean g_path_is_absolute (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:233:NC */ extern const gchar *g_path_skip_root (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:237:NC */ extern const gchar *g_basename (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:249:NC */ extern gchar *g_get_current_dir (void);
/* /usr/include/glib-2.0/glib/gutils.h:250:NC */ extern gchar *g_path_get_basename (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:251:NC */ extern gchar *g_path_get_dirname (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:254:NC */ extern void g_nullify_pointer (gpointer *);
/* /usr/include/glib-2.0/glib/gutils.h:267:NC */ extern const gchar *g_getenv (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:268:NC */ extern gboolean g_setenv (const gchar *, const gchar *, gboolean);
/* /usr/include/glib-2.0/glib/gutils.h:271:NC */ extern void g_unsetenv (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:272:NC */ extern gchar **g_listenv (void);
/* /usr/include/glib-2.0/glib/gutils.h:273:NC */ extern gchar **g_get_environ (void);
/* /usr/include/glib-2.0/glib/gutils.h:276:NC */ extern const gchar *_g_getenv_nomalloc (const gchar *, gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:297:NC */ extern void g_atexit (GVoidFunc);
/* /usr/include/glib-2.0/glib/gutils.h:313:NC */ extern gchar *g_find_program_in_path (const gchar *);
/* /usr/include/glib-2.0/glib/gutils.h:317:NC */ static gint g_bit_nth_lsf (gulong, gint);
/* /usr/include/glib-2.0/glib/gutils.h:319:NC */ static gint g_bit_nth_msf (gulong, gint);
/* /usr/include/glib-2.0/glib/gutils.h:321:NC */ static guint g_bit_storage (gulong);
/* /usr/include/glib-2.0/glib/gutils.h:332:NC */ static void g_trash_stack_push (GTrashStack **, gpointer);
/* /usr/include/glib-2.0/glib/gutils.h:334:NC */ static gpointer g_trash_stack_pop (GTrashStack **);
/* /usr/include/glib-2.0/glib/gutils.h:335:NC */ static gpointer g_trash_stack_peek (GTrashStack **);
/* /usr/include/glib-2.0/glib/gutils.h:336:NC */ static guint g_trash_stack_height (GTrashStack **);
/* /usr/include/glib-2.0/glib/gutils.h:342:NF */ static const gint g_bit_nth_lsf (gulong mask, gint nth_bit); /* (mask, nth_bit) gulong mask; gint nth_bit; */
/* /usr/include/glib-2.0/glib/gutils.h:356:NF */ static const gint g_bit_nth_msf (gulong mask, gint nth_bit); /* (mask, nth_bit) gulong mask; gint nth_bit; */
/* /usr/include/glib-2.0/glib/gutils.h:370:NF */ static const guint g_bit_storage (gulong number); /* (number) gulong number; */
/* /usr/include/glib-2.0/glib/gutils.h:388:NF */ static void g_trash_stack_push (GTrashStack **stack_p, gpointer data_p); /* (stack_p, data_p) GTrashStack **stack_p; gpointer data_p; */
/* /usr/include/glib-2.0/glib/gutils.h:397:NF */ static gpointer g_trash_stack_pop (GTrashStack **stack_p); /* (stack_p) GTrashStack **stack_p; */
/* /usr/include/glib-2.0/glib/gutils.h:414:NF */ static gpointer g_trash_stack_peek (GTrashStack **stack_p); /* (stack_p) GTrashStack **stack_p; */
/* /usr/include/glib-2.0/glib/gutils.h:423:NF */ static guint g_trash_stack_height (GTrashStack **stack_p); /* (stack_p) GTrashStack **stack_p; */
/* /usr/include/glib-2.0/glib/gutils.h:445:NC */ extern const gchar *glib_check_version (guint, guint, guint);
/* /usr/include/glib-2.0/glib/gatomic.h:33:NC */ extern gint g_atomic_int_get (volatile gint *);
/* /usr/include/glib-2.0/glib/gatomic.h:34:NC */ extern void g_atomic_int_set (volatile gint *, gint);
/* /usr/include/glib-2.0/glib/gatomic.h:36:NC */ extern void g_atomic_int_inc (volatile gint *);
/* /usr/include/glib-2.0/glib/gatomic.h:37:NC */ extern gboolean g_atomic_int_dec_and_test (volatile gint *);
/* /usr/include/glib-2.0/glib/gatomic.h:38:NC */ extern gboolean g_atomic_int_compare_and_exchange (volatile gint *, gint, gint);
/* /usr/include/glib-2.0/glib/gatomic.h:41:NC */ extern gint g_atomic_int_add (volatile gint *, gint);
/* /usr/include/glib-2.0/glib/gatomic.h:43:NC */ extern guint g_atomic_int_and (volatile guint *, guint);
/* /usr/include/glib-2.0/glib/gatomic.h:45:NC */ extern guint g_atomic_int_or (volatile guint *, guint);
/* /usr/include/glib-2.0/glib/gatomic.h:47:NC */ extern guint g_atomic_int_xor (volatile guint *, guint);
/* /usr/include/glib-2.0/glib/gatomic.h:50:NC */ extern gpointer g_atomic_pointer_get (volatile void *);
/* /usr/include/glib-2.0/glib/gatomic.h:51:NC */ extern void g_atomic_pointer_set (volatile void *, gpointer);
/* /usr/include/glib-2.0/glib/gatomic.h:53:NC */ extern gboolean g_atomic_pointer_compare_and_exchange (volatile void *, gpointer, gpointer);
/* /usr/include/glib-2.0/glib/gatomic.h:56:NC */ extern gssize g_atomic_pointer_add (volatile void *, gssize);
/* /usr/include/glib-2.0/glib/gatomic.h:58:NC */ extern gsize g_atomic_pointer_and (volatile void *, gsize);
/* /usr/include/glib-2.0/glib/gatomic.h:60:NC */ extern gsize g_atomic_pointer_or (volatile void *, gsize);
/* /usr/include/glib-2.0/glib/gatomic.h:62:NC */ extern gsize g_atomic_pointer_xor (volatile void *, gsize);
/* /usr/include/glib-2.0/glib/gatomic.h:66:NC */ extern gint g_atomic_int_exchange_and_add (volatile gint *, gint);
/* /usr/include/glib-2.0/glib/gthread.h:43:NC */ extern GQuark g_thread_error_quark (void);
/* /usr/include/glib-2.0/glib/gthread.h:125:NC */ extern void g_thread_init (GThreadFunctions *);
/* /usr/include/glib-2.0/glib/gthread.h:134:NC */ extern void g_thread_init_with_errorcheck_mutexes (GThreadFunctions *);
/* /usr/include/glib-2.0/glib/gthread.h:139:NC */ extern gboolean g_thread_get_initialized (void);
/* /usr/include/glib-2.0/glib/gthread.h:149:NC */ extern GMutex *g_static_mutex_get_mutex_impl (GMutex **);
/* /usr/include/glib-2.0/glib/gthread.h:224:NC */ extern GThread *g_thread_create_full (GThreadFunc, gpointer, gulong, gboolean, gboolean, GThreadPriority, GError **);
/* /usr/include/glib-2.0/glib/gthread.h:231:NC */ extern GThread *g_thread_self (void);
/* /usr/include/glib-2.0/glib/gthread.h:232:NC */ extern void g_thread_exit (gpointer);
/* /usr/include/glib-2.0/glib/gthread.h:233:NC */ extern gpointer g_thread_join (GThread *);
/* /usr/include/glib-2.0/glib/gthread.h:235:NC */ extern void g_thread_set_priority (GThread *, GThreadPriority);
/* /usr/include/glib-2.0/glib/gthread.h:249:NC */ extern void g_static_mutex_init (GStaticMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:250:NC */ extern void g_static_mutex_free (GStaticMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:258:NC */ extern void g_static_private_init (GStaticPrivate *);
/* /usr/include/glib-2.0/glib/gthread.h:259:NC */ extern gpointer g_static_private_get (GStaticPrivate *);
/* /usr/include/glib-2.0/glib/gthread.h:260:NC */ extern void g_static_private_set (GStaticPrivate *, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gthread.h:263:NC */ extern void g_static_private_free (GStaticPrivate *);
/* /usr/include/glib-2.0/glib/gthread.h:275:NC */ extern void g_static_rec_mutex_init (GStaticRecMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:276:NC */ extern void g_static_rec_mutex_lock (GStaticRecMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:277:NC */ extern gboolean g_static_rec_mutex_trylock (GStaticRecMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:278:NC */ extern void g_static_rec_mutex_unlock (GStaticRecMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:279:NC */ extern void g_static_rec_mutex_lock_full (GStaticRecMutex *, guint);
/* /usr/include/glib-2.0/glib/gthread.h:281:NC */ extern guint g_static_rec_mutex_unlock_full (GStaticRecMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:282:NC */ extern void g_static_rec_mutex_free (GStaticRecMutex *);
/* /usr/include/glib-2.0/glib/gthread.h:299:NC */ extern void g_static_rw_lock_init (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:300:NC */ extern void g_static_rw_lock_reader_lock (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:301:NC */ extern gboolean g_static_rw_lock_reader_trylock (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:302:NC */ extern void g_static_rw_lock_reader_unlock (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:303:NC */ extern void g_static_rw_lock_writer_lock (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:304:NC */ extern gboolean g_static_rw_lock_writer_trylock (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:305:NC */ extern void g_static_rw_lock_writer_unlock (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:306:NC */ extern void g_static_rw_lock_free (GStaticRWLock *);
/* /usr/include/glib-2.0/glib/gthread.h:308:NC */ extern void g_thread_foreach (GFunc, gpointer);
/* /usr/include/glib-2.0/glib/gthread.h:327:NC */ extern gpointer g_once_impl (GOnce *, GThreadFunc, gpointer);
/* /usr/include/glib-2.0/glib/gthread.h:339:NC */ static gboolean g_once_init_enter (volatile gsize *);
/* /usr/include/glib-2.0/glib/gthread.h:340:NC */ extern gboolean g_once_init_enter_impl (volatile gsize *);
/* /usr/include/glib-2.0/glib/gthread.h:341:NC */ extern void g_once_init_leave (volatile gsize *, gsize);
/* /usr/include/glib-2.0/glib/gthread.h:345:NF */ static gboolean g_once_init_enter (volatile gsize *value_location); /* (value_location) volatile gsize *value_location; */
/* /usr/include/glib-2.0/glib/gthread.h:363:NC */ extern void glib_dummy_decl (void);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:43:NC */ extern GAsyncQueue *g_async_queue_new (void);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:45:NC */ extern GAsyncQueue *g_async_queue_new_full (GDestroyNotify);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:51:NC */ extern void g_async_queue_lock (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:52:NC */ extern void g_async_queue_unlock (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:55:NC */ extern GAsyncQueue *g_async_queue_ref (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:56:NC */ extern void g_async_queue_unref (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:60:NC */ extern void g_async_queue_ref_unlocked (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:61:NC */ extern void g_async_queue_unref_and_unlock (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:65:NC */ extern void g_async_queue_push (GAsyncQueue *, gpointer);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:67:NC */ extern void g_async_queue_push_unlocked (GAsyncQueue *, gpointer);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:70:NC */ extern void g_async_queue_push_sorted (GAsyncQueue *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:74:NC */ extern void g_async_queue_push_sorted_unlocked (GAsyncQueue *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:82:NC */ extern gpointer g_async_queue_pop (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:83:NC */ extern gpointer g_async_queue_pop_unlocked (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:86:NC */ extern gpointer g_async_queue_try_pop (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:87:NC */ extern gpointer g_async_queue_try_pop_unlocked (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:94:NC */ extern gpointer g_async_queue_timed_pop (GAsyncQueue *, GTimeVal *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:96:NC */ extern gpointer g_async_queue_timed_pop_unlocked (GAsyncQueue *, GTimeVal *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:106:NC */ extern gint g_async_queue_length (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:107:NC */ extern gint g_async_queue_length_unlocked (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:108:NC */ extern void g_async_queue_sort (GAsyncQueue *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:111:NC */ extern void g_async_queue_sort_unlocked (GAsyncQueue *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gasyncqueue.h:116:NC */ extern GMutex *_g_async_queue_get_mutex (GAsyncQueue *);
/* /usr/include/glib-2.0/glib/gbacktrace.h:39:NC */ extern void g_on_error_query (const gchar *);
/* /usr/include/glib-2.0/glib/gbacktrace.h:40:NC */ extern void g_on_error_stack_trace (const gchar *);
/* /usr/include/glib-2.0/glib/gbase64.h:32:NC */ extern gsize g_base64_encode_step (const guchar *, gsize, gboolean, gchar *, gint *, gint *);
/* /usr/include/glib-2.0/glib/gbase64.h:38:NC */ extern gsize g_base64_encode_close (gboolean, gchar *, gint *, gint *);
/* /usr/include/glib-2.0/glib/gbase64.h:42:NC */ extern gchar *g_base64_encode (const guchar *, gsize);
/* /usr/include/glib-2.0/glib/gbase64.h:44:NC */ extern gsize g_base64_decode_step (const gchar *, gsize, guchar *, gint *, guint *);
/* /usr/include/glib-2.0/glib/gbase64.h:49:NC */ extern guchar *g_base64_decode (const gchar *, gsize *);
/* /usr/include/glib-2.0/glib/gbase64.h:51:NC */ extern guchar *g_base64_decode_inplace (gchar *, gsize *);
/* /usr/include/glib-2.0/glib/gbitlock.h:34:NC */ extern void g_bit_lock (volatile gint *, gint);
/* /usr/include/glib-2.0/glib/gbitlock.h:36:NC */ extern gboolean g_bit_trylock (volatile gint *, gint);
/* /usr/include/glib-2.0/glib/gbitlock.h:38:NC */ extern void g_bit_unlock (volatile gint *, gint);
/* /usr/include/glib-2.0/glib/gbitlock.h:41:NC */ extern void g_pointer_bit_lock (volatile void *, gint);
/* /usr/include/glib-2.0/glib/gbitlock.h:43:NC */ extern gboolean g_pointer_bit_trylock (volatile void *, gint);
/* /usr/include/glib-2.0/glib/gbitlock.h:45:NC */ extern void g_pointer_bit_unlock (volatile void *, gint);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:69:NC */ extern GQuark g_bookmark_file_error_quark (void);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:79:NC */ extern GBookmarkFile *g_bookmark_file_new (void);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:80:NC */ extern void g_bookmark_file_free (GBookmarkFile *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:82:NC */ extern gboolean g_bookmark_file_load_from_file (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:85:NC */ extern gboolean g_bookmark_file_load_from_data (GBookmarkFile *, const gchar *, gsize, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:89:NC */ extern gboolean g_bookmark_file_load_from_data_dirs (GBookmarkFile *, const gchar *, gchar **, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:93:NC */ extern gchar *g_bookmark_file_to_data (GBookmarkFile *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:96:NC */ extern gboolean g_bookmark_file_to_file (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:100:NC */ extern void g_bookmark_file_set_title (GBookmarkFile *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:103:NC */ extern gchar *g_bookmark_file_get_title (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:106:NC */ extern void g_bookmark_file_set_description (GBookmarkFile *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:109:NC */ extern gchar *g_bookmark_file_get_description (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:112:NC */ extern void g_bookmark_file_set_mime_type (GBookmarkFile *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:115:NC */ extern gchar *g_bookmark_file_get_mime_type (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:118:NC */ extern void g_bookmark_file_set_groups (GBookmarkFile *, const gchar *, const gchar **, gsize);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:122:NC */ extern void g_bookmark_file_add_group (GBookmarkFile *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:125:NC */ extern gboolean g_bookmark_file_has_group (GBookmarkFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:129:NC */ extern gchar **g_bookmark_file_get_groups (GBookmarkFile *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:133:NC */ extern void g_bookmark_file_add_application (GBookmarkFile *, const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:137:NC */ extern gboolean g_bookmark_file_has_application (GBookmarkFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:141:NC */ extern gchar **g_bookmark_file_get_applications (GBookmarkFile *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:145:NC */ extern gboolean g_bookmark_file_set_app_info (GBookmarkFile *, const gchar *, const gchar *, const gchar *, gint, time_t, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:152:NC */ extern gboolean g_bookmark_file_get_app_info (GBookmarkFile *, const gchar *, const gchar *, gchar **, guint *, time_t *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:159:NC */ extern void g_bookmark_file_set_is_private (GBookmarkFile *, const gchar *, gboolean);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:162:NC */ extern gboolean g_bookmark_file_get_is_private (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:165:NC */ extern void g_bookmark_file_set_icon (GBookmarkFile *, const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:169:NC */ extern gboolean g_bookmark_file_get_icon (GBookmarkFile *, const gchar *, gchar **, gchar **, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:174:NC */ extern void g_bookmark_file_set_added (GBookmarkFile *, const gchar *, time_t);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:177:NC */ extern time_t g_bookmark_file_get_added (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:180:NC */ extern void g_bookmark_file_set_modified (GBookmarkFile *, const gchar *, time_t);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:183:NC */ extern time_t g_bookmark_file_get_modified (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:186:NC */ extern void g_bookmark_file_set_visited (GBookmarkFile *, const gchar *, time_t);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:189:NC */ extern time_t g_bookmark_file_get_visited (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:192:NC */ extern gboolean g_bookmark_file_has_item (GBookmarkFile *, const gchar *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:194:NC */ extern gint g_bookmark_file_get_size (GBookmarkFile *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:195:NC */ extern gchar **g_bookmark_file_get_uris (GBookmarkFile *, gsize *);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:197:NC */ extern gboolean g_bookmark_file_remove_group (GBookmarkFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:201:NC */ extern gboolean g_bookmark_file_remove_application (GBookmarkFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:205:NC */ extern gboolean g_bookmark_file_remove_item (GBookmarkFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gbookmarkfile.h:208:NC */ extern gboolean g_bookmark_file_move_item (GBookmarkFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gslice.h:33:NC */ extern gpointer g_slice_alloc (gsize);
/* /usr/include/glib-2.0/glib/gslice.h:34:NC */ extern gpointer g_slice_alloc0 (gsize);
/* /usr/include/glib-2.0/glib/gslice.h:35:NC */ extern gpointer g_slice_copy (gsize, gconstpointer);
/* /usr/include/glib-2.0/glib/gslice.h:37:NC */ extern void g_slice_free1 (gsize, gpointer);
/* /usr/include/glib-2.0/glib/gslice.h:39:NC */ extern void g_slice_free_chain_with_offset (gsize, gpointer, gsize);
/* /usr/include/glib-2.0/glib/gslice.h:80:NC */ extern void g_slice_set_config (GSliceConfig, gint64);
/* /usr/include/glib-2.0/glib/gslice.h:81:NC */ extern gint64 g_slice_get_config (GSliceConfig);
/* /usr/include/glib-2.0/glib/gslice.h:82:NC */ extern gint64 *g_slice_get_config_state (GSliceConfig, gint64, guint *);
/* /usr/include/glib-2.0/glib/gmem.h:71:NC */ extern void g_free (gpointer);
/* /usr/include/glib-2.0/glib/gmem.h:73:NC */ extern gpointer g_malloc (gsize);
/* /usr/include/glib-2.0/glib/gmem.h:74:NC */ extern gpointer g_malloc0 (gsize);
/* /usr/include/glib-2.0/glib/gmem.h:75:NC */ extern gpointer g_realloc (gpointer, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:77:NC */ extern gpointer g_try_malloc (gsize);
/* /usr/include/glib-2.0/glib/gmem.h:78:NC */ extern gpointer g_try_malloc0 (gsize);
/* /usr/include/glib-2.0/glib/gmem.h:79:NC */ extern gpointer g_try_realloc (gpointer, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:82:NC */ extern gpointer g_malloc_n (gsize, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:84:NC */ extern gpointer g_malloc0_n (gsize, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:86:NC */ extern gpointer g_realloc_n (gpointer, gsize, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:89:NC */ extern gpointer g_try_malloc_n (gsize, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:91:NC */ extern gpointer g_try_malloc0_n (gsize, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:93:NC */ extern gpointer g_try_realloc_n (gpointer, gsize, gsize);
/* /usr/include/glib-2.0/glib/gmem.h:253:NC */ extern void g_mem_set_vtable (GMemVTable *);
/* /usr/include/glib-2.0/glib/gmem.h:254:NC */ extern gboolean g_mem_is_system_malloc (void);
/* /usr/include/glib-2.0/glib/gmem.h:261:NC */ extern void g_mem_profile (void);
/* /usr/include/glib-2.0/glib/gmem.h:285:NC */ extern GMemChunk *g_mem_chunk_new (const gchar *, gint, gsize, gint);
/* /usr/include/glib-2.0/glib/gmem.h:289:NC */ extern void g_mem_chunk_destroy (GMemChunk *);
/* /usr/include/glib-2.0/glib/gmem.h:290:NC */ extern gpointer g_mem_chunk_alloc (GMemChunk *);
/* /usr/include/glib-2.0/glib/gmem.h:291:NC */ extern gpointer g_mem_chunk_alloc0 (GMemChunk *);
/* /usr/include/glib-2.0/glib/gmem.h:292:NC */ extern void g_mem_chunk_free (GMemChunk *, gpointer);
/* /usr/include/glib-2.0/glib/gmem.h:294:NC */ extern void g_mem_chunk_clean (GMemChunk *);
/* /usr/include/glib-2.0/glib/gmem.h:295:NC */ extern void g_mem_chunk_reset (GMemChunk *);
/* /usr/include/glib-2.0/glib/gmem.h:296:NC */ extern void g_mem_chunk_print (GMemChunk *);
/* /usr/include/glib-2.0/glib/gmem.h:297:NC */ extern void g_mem_chunk_info (void);
/* /usr/include/glib-2.0/glib/gmem.h:298:NC */ extern void g_blow_chunks (void);
/* /usr/include/glib-2.0/glib/gmem.h:299:NC */ extern GAllocator *g_allocator_new (const gchar *, guint);
/* /usr/include/glib-2.0/glib/gmem.h:301:NC */ extern void g_allocator_free (GAllocator *);
/* /usr/include/glib-2.0/glib/glist.h:49:NC */ extern GList *g_list_alloc (void);
/* /usr/include/glib-2.0/glib/glist.h:50:NC */ extern void g_list_free (GList *);
/* /usr/include/glib-2.0/glib/glist.h:51:NC */ extern void g_list_free_1 (GList *);
/* /usr/include/glib-2.0/glib/glist.h:53:NC */ extern void g_list_free_full (GList *, GDestroyNotify);
/* /usr/include/glib-2.0/glib/glist.h:55:NC */ extern GList *g_list_append (GList *, gpointer);
/* /usr/include/glib-2.0/glib/glist.h:57:NC */ extern GList *g_list_prepend (GList *, gpointer);
/* /usr/include/glib-2.0/glib/glist.h:59:NC */ extern GList *g_list_insert (GList *, gpointer, gint);
/* /usr/include/glib-2.0/glib/glist.h:62:NC */ extern GList *g_list_insert_sorted (GList *, gpointer, GCompareFunc);
/* /usr/include/glib-2.0/glib/glist.h:65:NC */ extern GList *g_list_insert_sorted_with_data (GList *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/glist.h:69:NC */ extern GList *g_list_insert_before (GList *, GList *, gpointer);
/* /usr/include/glib-2.0/glib/glist.h:72:NC */ extern GList *g_list_concat (GList *, GList *);
/* /usr/include/glib-2.0/glib/glist.h:74:NC */ extern GList *g_list_remove (GList *, gconstpointer);
/* /usr/include/glib-2.0/glib/glist.h:76:NC */ extern GList *g_list_remove_all (GList *, gconstpointer);
/* /usr/include/glib-2.0/glib/glist.h:78:NC */ extern GList *g_list_remove_link (GList *, GList *);
/* /usr/include/glib-2.0/glib/glist.h:80:NC */ extern GList *g_list_delete_link (GList *, GList *);
/* /usr/include/glib-2.0/glib/glist.h:82:NC */ extern GList *g_list_reverse (GList *);
/* /usr/include/glib-2.0/glib/glist.h:83:NC */ extern GList *g_list_copy (GList *);
/* /usr/include/glib-2.0/glib/glist.h:84:NC */ extern GList *g_list_nth (GList *, guint);
/* /usr/include/glib-2.0/glib/glist.h:86:NC */ extern GList *g_list_nth_prev (GList *, guint);
/* /usr/include/glib-2.0/glib/glist.h:88:NC */ extern GList *g_list_find (GList *, gconstpointer);
/* /usr/include/glib-2.0/glib/glist.h:90:NC */ extern GList *g_list_find_custom (GList *, gconstpointer, GCompareFunc);
/* /usr/include/glib-2.0/glib/glist.h:93:NC */ extern gint g_list_position (GList *, GList *);
/* /usr/include/glib-2.0/glib/glist.h:95:NC */ extern gint g_list_index (GList *, gconstpointer);
/* /usr/include/glib-2.0/glib/glist.h:97:NC */ extern GList *g_list_last (GList *);
/* /usr/include/glib-2.0/glib/glist.h:98:NC */ extern GList *g_list_first (GList *);
/* /usr/include/glib-2.0/glib/glist.h:99:NC */ extern guint g_list_length (GList *);
/* /usr/include/glib-2.0/glib/glist.h:100:NC */ extern void g_list_foreach (GList *, GFunc, gpointer);
/* /usr/include/glib-2.0/glib/glist.h:103:NC */ extern GList *g_list_sort (GList *, GCompareFunc);
/* /usr/include/glib-2.0/glib/glist.h:105:NC */ extern GList *g_list_sort_with_data (GList *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/glist.h:108:NC */ extern gpointer g_list_nth_data (GList *, guint);
/* /usr/include/glib-2.0/glib/glist.h:116:NC */ extern void g_list_push_allocator (gpointer);
/* /usr/include/glib-2.0/glib/glist.h:117:NC */ extern void g_list_pop_allocator (void);
/* /usr/include/glib-2.0/glib/gcache.h:46:NC */ extern GCache *g_cache_new (GCacheNewFunc, GCacheDestroyFunc, GCacheDupFunc, GCacheDestroyFunc, GHashFunc, GHashFunc, GEqualFunc);
/* /usr/include/glib-2.0/glib/gcache.h:53:NC */ extern void g_cache_destroy (GCache *);
/* /usr/include/glib-2.0/glib/gcache.h:54:NC */ extern gpointer g_cache_insert (GCache *, gpointer);
/* /usr/include/glib-2.0/glib/gcache.h:56:NC */ extern void g_cache_remove (GCache *, gconstpointer);
/* /usr/include/glib-2.0/glib/gcache.h:58:NC */ extern void g_cache_key_foreach (GCache *, GHFunc, gpointer);
/* /usr/include/glib-2.0/glib/gcache.h:62:NC */ extern void g_cache_value_foreach (GCache *, GHFunc, gpointer);
/* /usr/include/glib-2.0/glib/gchecksum.h:63:NC */ extern gssize g_checksum_type_get_length (GChecksumType);
/* /usr/include/glib-2.0/glib/gchecksum.h:65:NC */ extern GChecksum *g_checksum_new (GChecksumType);
/* /usr/include/glib-2.0/glib/gchecksum.h:66:NC */ extern void g_checksum_reset (GChecksum *);
/* /usr/include/glib-2.0/glib/gchecksum.h:67:NC */ extern GChecksum *g_checksum_copy (const GChecksum *);
/* /usr/include/glib-2.0/glib/gchecksum.h:68:NC */ extern void g_checksum_free (GChecksum *);
/* /usr/include/glib-2.0/glib/gchecksum.h:69:NC */ extern void g_checksum_update (GChecksum *, const guchar *, gssize);
/* /usr/include/glib-2.0/glib/gchecksum.h:72:NC */ extern const gchar *g_checksum_get_string (GChecksum *);
/* /usr/include/glib-2.0/glib/gchecksum.h:73:NC */ extern void g_checksum_get_digest (GChecksum *, guint8 *, gsize *);
/* /usr/include/glib-2.0/glib/gchecksum.h:77:NC */ extern gchar *g_compute_checksum_for_data (GChecksumType, const guchar *, gsize);
/* /usr/include/glib-2.0/glib/gchecksum.h:80:NC */ extern gchar *g_compute_checksum_for_string (GChecksumType, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gcompletion.h:61:NC */ extern GCompletion *g_completion_new (GCompletionFunc);
/* /usr/include/glib-2.0/glib/gcompletion.h:62:NC */ extern void g_completion_add_items (GCompletion *, GList *);
/* /usr/include/glib-2.0/glib/gcompletion.h:64:NC */ extern void g_completion_remove_items (GCompletion *, GList *);
/* /usr/include/glib-2.0/glib/gcompletion.h:66:NC */ extern void g_completion_clear_items (GCompletion *);
/* /usr/include/glib-2.0/glib/gcompletion.h:67:NC */ extern GList *g_completion_complete (GCompletion *, const gchar *, gchar **);
/* /usr/include/glib-2.0/glib/gcompletion.h:70:NC */ extern GList *g_completion_complete_utf8 (GCompletion *, const gchar *, gchar **);
/* /usr/include/glib-2.0/glib/gcompletion.h:73:NC */ extern void g_completion_set_compare (GCompletion *, GCompletionStrncmpFunc);
/* /usr/include/glib-2.0/glib/gcompletion.h:75:NC */ extern void g_completion_free (GCompletion *);
/* /usr/include/glib-2.0/glib/gconvert.h:68:NC */ extern GQuark g_convert_error_quark (void);
/* /usr/include/glib-2.0/glib/gconvert.h:79:NC */ extern GIConv g_iconv_open (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gconvert.h:81:NC */ extern gsize g_iconv (GIConv, gchar **, gsize *, gchar **, gsize *);
/* /usr/include/glib-2.0/glib/gconvert.h:86:NC */ extern gint g_iconv_close (GIConv);
/* /usr/include/glib-2.0/glib/gconvert.h:89:NC */ extern gchar *g_convert (const gchar *, gssize, const gchar *, const gchar *, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:96:NC */ extern gchar *g_convert_with_iconv (const gchar *, gssize, GIConv, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:102:NC */ extern gchar *g_convert_with_fallback (const gchar *, gssize, const gchar *, const gchar *, const gchar *, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:114:NC */ extern gchar *g_locale_to_utf8 (const gchar *, gssize, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:119:NC */ extern gchar *g_locale_from_utf8 (const gchar *, gssize, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:137:NC */ extern gchar *g_filename_to_utf8 (const gchar *, gssize, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:142:NC */ extern gchar *g_filename_from_utf8 (const gchar *, gssize, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:148:NC */ extern gchar *g_filename_from_uri (const gchar *, gchar **, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:152:NC */ extern gchar *g_filename_to_uri (const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gconvert.h:155:NC */ extern gchar *g_filename_display_name (const gchar *);
/* /usr/include/glib-2.0/glib/gconvert.h:156:NC */ extern gboolean g_get_filename_charsets (const gchar ***);
/* /usr/include/glib-2.0/glib/gconvert.h:158:NC */ extern gchar *g_filename_display_basename (const gchar *);
/* /usr/include/glib-2.0/glib/gconvert.h:160:NC */ extern gchar **g_uri_list_extract_uris (const gchar *);
/* /usr/include/glib-2.0/glib/gdataset.h:46:NC */ extern void g_datalist_init (GData **);
/* /usr/include/glib-2.0/glib/gdataset.h:47:NC */ extern void g_datalist_clear (GData **);
/* /usr/include/glib-2.0/glib/gdataset.h:48:NC */ extern gpointer g_datalist_id_get_data (GData **, GQuark);
/* /usr/include/glib-2.0/glib/gdataset.h:50:NC */ extern void g_datalist_id_set_data_full (GData **, GQuark, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gdataset.h:54:NC */ extern gpointer g_datalist_id_remove_no_notify (GData **, GQuark);
/* /usr/include/glib-2.0/glib/gdataset.h:56:NC */ extern void g_datalist_foreach (GData **, GDataForeachFunc, gpointer);
/* /usr/include/glib-2.0/glib/gdataset.h:69:NC */ extern void g_datalist_set_flags (GData **, guint);
/* /usr/include/glib-2.0/glib/gdataset.h:71:NC */ extern void g_datalist_unset_flags (GData **, guint);
/* /usr/include/glib-2.0/glib/gdataset.h:73:NC */ extern guint g_datalist_get_flags (GData **);
/* /usr/include/glib-2.0/glib/gdataset.h:91:NC */ extern void g_dataset_destroy (gconstpointer);
/* /usr/include/glib-2.0/glib/gdataset.h:92:NC */ extern gpointer g_dataset_id_get_data (gconstpointer, GQuark);
/* /usr/include/glib-2.0/glib/gdataset.h:94:NC */ extern gpointer g_datalist_get_data (GData **, const gchar *);
/* /usr/include/glib-2.0/glib/gdataset.h:96:NC */ extern void g_dataset_id_set_data_full (gconstpointer, GQuark, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gdataset.h:100:NC */ extern gpointer g_dataset_id_remove_no_notify (gconstpointer, GQuark);
/* /usr/include/glib-2.0/glib/gdataset.h:102:NC */ extern void g_dataset_foreach (gconstpointer, GDataForeachFunc, gpointer);
/* /usr/include/glib-2.0/glib/gdate.h:122:NC */ extern GDate *g_date_new (void);
/* /usr/include/glib-2.0/glib/gdate.h:123:NC */ extern GDate *g_date_new_dmy (GDateDay, GDateMonth, GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:126:NC */ extern GDate *g_date_new_julian (guint32);
/* /usr/include/glib-2.0/glib/gdate.h:127:NC */ extern void g_date_free (GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:134:NC */ extern gboolean g_date_valid (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:135:NC */ extern gboolean g_date_valid_day (GDateDay);
/* /usr/include/glib-2.0/glib/gdate.h:136:NC */ extern gboolean g_date_valid_month (GDateMonth);
/* /usr/include/glib-2.0/glib/gdate.h:137:NC */ extern gboolean g_date_valid_year (GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:138:NC */ extern gboolean g_date_valid_weekday (GDateWeekday);
/* /usr/include/glib-2.0/glib/gdate.h:139:NC */ extern gboolean g_date_valid_julian (guint32);
/* /usr/include/glib-2.0/glib/gdate.h:140:NC */ extern gboolean g_date_valid_dmy (GDateDay, GDateMonth, GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:144:NC */ extern GDateWeekday g_date_get_weekday (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:145:NC */ extern GDateMonth g_date_get_month (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:146:NC */ extern GDateYear g_date_get_year (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:147:NC */ extern GDateDay g_date_get_day (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:148:NC */ extern guint32 g_date_get_julian (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:149:NC */ extern guint g_date_get_day_of_year (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:156:NC */ extern guint g_date_get_monday_week_of_year (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:157:NC */ extern guint g_date_get_sunday_week_of_year (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:158:NC */ extern guint g_date_get_iso8601_week_of_year (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:164:NC */ extern void g_date_clear (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:171:NC */ extern void g_date_set_parse (GDate *, const gchar *);
/* /usr/include/glib-2.0/glib/gdate.h:173:NC */ extern void g_date_set_time_t (GDate *, time_t);
/* /usr/include/glib-2.0/glib/gdate.h:175:NC */ extern void g_date_set_time_val (GDate *, GTimeVal *);
/* /usr/include/glib-2.0/glib/gdate.h:178:NC */ extern void g_date_set_time (GDate *, GTime);
/* /usr/include/glib-2.0/glib/gdate.h:181:NC */ extern void g_date_set_month (GDate *, GDateMonth);
/* /usr/include/glib-2.0/glib/gdate.h:183:NC */ extern void g_date_set_day (GDate *, GDateDay);
/* /usr/include/glib-2.0/glib/gdate.h:185:NC */ extern void g_date_set_year (GDate *, GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:187:NC */ extern void g_date_set_dmy (GDate *, GDateDay, GDateMonth, GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:191:NC */ extern void g_date_set_julian (GDate *, guint32);
/* /usr/include/glib-2.0/glib/gdate.h:193:NC */ extern gboolean g_date_is_first_of_month (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:194:NC */ extern gboolean g_date_is_last_of_month (const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:197:NC */ extern void g_date_add_days (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:199:NC */ extern void g_date_subtract_days (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:203:NC */ extern void g_date_add_months (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:205:NC */ extern void g_date_subtract_months (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:209:NC */ extern void g_date_add_years (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:211:NC */ extern void g_date_subtract_years (GDate *, guint);
/* /usr/include/glib-2.0/glib/gdate.h:213:NC */ extern gboolean g_date_is_leap_year (GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:214:NC */ extern guint8 g_date_get_days_in_month (GDateMonth, GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:216:NC */ extern guint8 g_date_get_monday_weeks_in_year (GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:217:NC */ extern guint8 g_date_get_sunday_weeks_in_year (GDateYear);
/* /usr/include/glib-2.0/glib/gdate.h:221:NC */ extern gint g_date_days_between (const GDate *, const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:225:NC */ extern gint g_date_compare (const GDate *, const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:227:NC */ extern void g_date_to_struct_tm (const GDate *, struct tm *);
/* /usr/include/glib-2.0/glib/gdate.h:230:NC */ extern void g_date_clamp (GDate *, const GDate *, const GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:235:NC */ extern void g_date_order (GDate *, GDate *);
/* /usr/include/glib-2.0/glib/gdate.h:240:NC */ extern gsize g_date_strftime (gchar *, gsize, const gchar *, const GDate *);
/* /usr/include/glib-2.0/glib/gtimezone.h:57:NC */ extern GTimeZone *g_time_zone_new (const gchar *);
/* /usr/include/glib-2.0/glib/gtimezone.h:58:NC */ extern GTimeZone *g_time_zone_new_utc (void);
/* /usr/include/glib-2.0/glib/gtimezone.h:59:NC */ extern GTimeZone *g_time_zone_new_local (void);
/* /usr/include/glib-2.0/glib/gtimezone.h:61:NC */ extern GTimeZone *g_time_zone_ref (GTimeZone *);
/* /usr/include/glib-2.0/glib/gtimezone.h:62:NC */ extern void g_time_zone_unref (GTimeZone *);
/* /usr/include/glib-2.0/glib/gtimezone.h:64:NC */ extern gint g_time_zone_find_interval (GTimeZone *, GTimeType, gint64);
/* /usr/include/glib-2.0/glib/gtimezone.h:68:NC */ extern gint g_time_zone_adjust_time (GTimeZone *, GTimeType, gint64 *);
/* /usr/include/glib-2.0/glib/gtimezone.h:72:NC */ extern const gchar *g_time_zone_get_abbreviation (GTimeZone *, gint);
/* /usr/include/glib-2.0/glib/gtimezone.h:74:NC */ extern gint32 g_time_zone_get_offset (GTimeZone *, gint);
/* /usr/include/glib-2.0/glib/gtimezone.h:76:NC */ extern gboolean g_time_zone_is_dst (GTimeZone *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:101:NC */ extern void g_date_time_unref (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:102:NC */ extern GDateTime *g_date_time_ref (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:104:NC */ extern GDateTime *g_date_time_new_now (GTimeZone *);
/* /usr/include/glib-2.0/glib/gdatetime.h:105:NC */ extern GDateTime *g_date_time_new_now_local (void);
/* /usr/include/glib-2.0/glib/gdatetime.h:106:NC */ extern GDateTime *g_date_time_new_now_utc (void);
/* /usr/include/glib-2.0/glib/gdatetime.h:108:NC */ extern GDateTime *g_date_time_new_from_unix_local (gint64);
/* /usr/include/glib-2.0/glib/gdatetime.h:109:NC */ extern GDateTime *g_date_time_new_from_unix_utc (gint64);
/* /usr/include/glib-2.0/glib/gdatetime.h:111:NC */ extern GDateTime *g_date_time_new_from_timeval_local (const GTimeVal *);
/* /usr/include/glib-2.0/glib/gdatetime.h:112:NC */ extern GDateTime *g_date_time_new_from_timeval_utc (const GTimeVal *);
/* /usr/include/glib-2.0/glib/gdatetime.h:114:NC */ extern GDateTime *g_date_time_new (GTimeZone *, gint, gint, gint, gint, gint, gdouble);
/* /usr/include/glib-2.0/glib/gdatetime.h:121:NC */ extern GDateTime *g_date_time_new_local (gint, gint, gint, gint, gint, gdouble);
/* /usr/include/glib-2.0/glib/gdatetime.h:127:NC */ extern GDateTime *g_date_time_new_utc (gint, gint, gint, gint, gint, gdouble);
/* /usr/include/glib-2.0/glib/gdatetime.h:135:NC */ extern GDateTime *g_date_time_add (GDateTime *, GTimeSpan);
/* /usr/include/glib-2.0/glib/gdatetime.h:139:NC */ extern GDateTime *g_date_time_add_years (GDateTime *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:142:NC */ extern GDateTime *g_date_time_add_months (GDateTime *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:145:NC */ extern GDateTime *g_date_time_add_weeks (GDateTime *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:148:NC */ extern GDateTime *g_date_time_add_days (GDateTime *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:152:NC */ extern GDateTime *g_date_time_add_hours (GDateTime *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:155:NC */ extern GDateTime *g_date_time_add_minutes (GDateTime *, gint);
/* /usr/include/glib-2.0/glib/gdatetime.h:158:NC */ extern GDateTime *g_date_time_add_seconds (GDateTime *, gdouble);
/* /usr/include/glib-2.0/glib/gdatetime.h:162:NC */ extern GDateTime *g_date_time_add_full (GDateTime *, gint, gint, gint, gint, gint, gdouble);
/* /usr/include/glib-2.0/glib/gdatetime.h:170:NC */ extern gint g_date_time_compare (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/gdatetime.h:172:NC */ extern GTimeSpan g_date_time_difference (GDateTime *, GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:174:NC */ extern guint g_date_time_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/gdatetime.h:175:NC */ extern gboolean g_date_time_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/gdatetime.h:178:NC */ extern void g_date_time_get_ymd (GDateTime *, gint *, gint *, gint *);
/* /usr/include/glib-2.0/glib/gdatetime.h:183:NC */ extern gint g_date_time_get_year (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:184:NC */ extern gint g_date_time_get_month (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:185:NC */ extern gint g_date_time_get_day_of_month (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:187:NC */ extern gint g_date_time_get_week_numbering_year (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:188:NC */ extern gint g_date_time_get_week_of_year (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:189:NC */ extern gint g_date_time_get_day_of_week (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:191:NC */ extern gint g_date_time_get_day_of_year (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:193:NC */ extern gint g_date_time_get_hour (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:194:NC */ extern gint g_date_time_get_minute (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:195:NC */ extern gint g_date_time_get_second (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:196:NC */ extern gint g_date_time_get_microsecond (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:197:NC */ extern gdouble g_date_time_get_seconds (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:199:NC */ extern gint64 g_date_time_to_unix (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:200:NC */ extern gboolean g_date_time_to_timeval (GDateTime *, GTimeVal *);
/* /usr/include/glib-2.0/glib/gdatetime.h:203:NC */ extern GTimeSpan g_date_time_get_utc_offset (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:204:NC */ extern const gchar *g_date_time_get_timezone_abbreviation (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:205:NC */ extern gboolean g_date_time_is_daylight_savings (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:207:NC */ extern GDateTime *g_date_time_to_timezone (GDateTime *, GTimeZone *);
/* /usr/include/glib-2.0/glib/gdatetime.h:209:NC */ extern GDateTime *g_date_time_to_local (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:210:NC */ extern GDateTime *g_date_time_to_utc (GDateTime *);
/* /usr/include/glib-2.0/glib/gdatetime.h:212:NC */ extern gchar *g_date_time_format (GDateTime *, const gchar *);
/* /usr/include/glib-2.0/glib/gdir.h:45:NC */ extern GDir *g_dir_open (const gchar *, guint, GError **);
/* /usr/include/glib-2.0/glib/gdir.h:48:NC */ extern const gchar *g_dir_read_name (GDir *);
/* /usr/include/glib-2.0/glib/gdir.h:49:NC */ extern void g_dir_rewind (GDir *);
/* /usr/include/glib-2.0/glib/gdir.h:50:NC */ extern void g_dir_close (GDir *);
/* /usr/include/glib-2.0/glib/gfileutils.h:76:NC */ extern GQuark g_file_error_quark (void);
/* /usr/include/glib-2.0/glib/gfileutils.h:78:NC */ extern GFileError g_file_error_from_errno (gint);
/* /usr/include/glib-2.0/glib/gfileutils.h:89:NC */ extern gboolean g_file_test (const gchar *, GFileTest);
/* /usr/include/glib-2.0/glib/gfileutils.h:91:NC */ extern gboolean g_file_get_contents (const gchar *, gchar **, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gfileutils.h:95:NC */ extern gboolean g_file_set_contents (const gchar *, const gchar *, gssize, GError **);
/* /usr/include/glib-2.0/glib/gfileutils.h:99:NC */ extern gchar *g_file_read_link (const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gfileutils.h:103:NC */ extern gchar *g_mkdtemp (gchar *);
/* /usr/include/glib-2.0/glib/gfileutils.h:104:NC */ extern gchar *g_mkdtemp_full (gchar *, gint);
/* /usr/include/glib-2.0/glib/gfileutils.h:108:NC */ extern gint g_mkstemp (gchar *);
/* /usr/include/glib-2.0/glib/gfileutils.h:109:NC */ extern gint g_mkstemp_full (gchar *, gint, gint);
/* /usr/include/glib-2.0/glib/gfileutils.h:114:NC */ extern gint g_file_open_tmp (const gchar *, gchar **, GError **);
/* /usr/include/glib-2.0/glib/gfileutils.h:117:NC */ extern gchar *g_dir_make_tmp (const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gfileutils.h:127:NC */ extern gchar *g_format_size_full (guint64, GFormatSizeFlags);
/* /usr/include/glib-2.0/glib/gfileutils.h:129:NC */ extern gchar *g_format_size (guint64);
/* /usr/include/glib-2.0/glib/gfileutils.h:132:NC */ extern char *g_format_size_for_display (goffset);
/* /usr/include/glib-2.0/glib/gfileutils.h:135:NC */ extern gchar *g_build_path (const gchar *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gfileutils.h:138:NC */ extern gchar *g_build_pathv (const gchar *, gchar **);
/* /usr/include/glib-2.0/glib/gfileutils.h:141:NC */ extern gchar *g_build_filename (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gfileutils.h:143:NC */ extern gchar *g_build_filenamev (gchar **);
/* /usr/include/glib-2.0/glib/gfileutils.h:145:NC */ extern int g_mkdir_with_parents (const gchar *, int);
/* /usr/include/glib-2.0/glib/ghash.h:60:NC */ extern GHashTable *g_hash_table_new (GHashFunc, GEqualFunc);
/* /usr/include/glib-2.0/glib/ghash.h:62:NC */ extern GHashTable *g_hash_table_new_full (GHashFunc, GEqualFunc, GDestroyNotify, GDestroyNotify);
/* /usr/include/glib-2.0/glib/ghash.h:66:NC */ extern void g_hash_table_destroy (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:67:NC */ extern void g_hash_table_insert (GHashTable *, gpointer, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:70:NC */ extern void g_hash_table_replace (GHashTable *, gpointer, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:73:NC */ extern gboolean g_hash_table_remove (GHashTable *, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:75:NC */ extern void g_hash_table_remove_all (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:76:NC */ extern gboolean g_hash_table_steal (GHashTable *, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:78:NC */ extern void g_hash_table_steal_all (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:79:NC */ extern gpointer g_hash_table_lookup (GHashTable *, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:81:NC */ extern gboolean g_hash_table_lookup_extended (GHashTable *, gconstpointer, gpointer *, gpointer *);
/* /usr/include/glib-2.0/glib/ghash.h:85:NC */ extern void g_hash_table_foreach (GHashTable *, GHFunc, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:88:NC */ extern gpointer g_hash_table_find (GHashTable *, GHRFunc, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:91:NC */ extern guint g_hash_table_foreach_remove (GHashTable *, GHRFunc, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:94:NC */ extern guint g_hash_table_foreach_steal (GHashTable *, GHRFunc, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:97:NC */ extern guint g_hash_table_size (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:98:NC */ extern GList *g_hash_table_get_keys (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:99:NC */ extern GList *g_hash_table_get_values (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:101:NC */ extern void g_hash_table_iter_init (GHashTableIter *, GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:103:NC */ extern gboolean g_hash_table_iter_next (GHashTableIter *, gpointer *, gpointer *);
/* /usr/include/glib-2.0/glib/ghash.h:106:NC */ extern GHashTable *g_hash_table_iter_get_hash_table (GHashTableIter *);
/* /usr/include/glib-2.0/glib/ghash.h:107:NC */ extern void g_hash_table_iter_remove (GHashTableIter *);
/* /usr/include/glib-2.0/glib/ghash.h:108:NC */ extern void g_hash_table_iter_replace (GHashTableIter *, gpointer);
/* /usr/include/glib-2.0/glib/ghash.h:110:NC */ extern void g_hash_table_iter_steal (GHashTableIter *);
/* /usr/include/glib-2.0/glib/ghash.h:113:NC */ extern GHashTable *g_hash_table_ref (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:114:NC */ extern void g_hash_table_unref (GHashTable *);
/* /usr/include/glib-2.0/glib/ghash.h:140:NC */ extern gboolean g_str_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:142:NC */ extern guint g_str_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:144:NC */ extern gboolean g_int_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:146:NC */ extern guint g_int_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:148:NC */ extern gboolean g_int64_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:150:NC */ extern guint g_int64_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:152:NC */ extern gboolean g_double_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:154:NC */ extern guint g_double_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:162:NC */ extern guint g_direct_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/ghash.h:163:NC */ extern gboolean g_direct_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/ghmac.h:44:NC */ extern GHmac *g_hmac_new (GChecksumType, const guchar *, gsize);
/* /usr/include/glib-2.0/glib/ghmac.h:47:NC */ extern GHmac *g_hmac_copy (const GHmac *);
/* /usr/include/glib-2.0/glib/ghmac.h:48:NC */ extern GHmac *g_hmac_ref (GHmac *);
/* /usr/include/glib-2.0/glib/ghmac.h:49:NC */ extern void g_hmac_unref (GHmac *);
/* /usr/include/glib-2.0/glib/ghmac.h:50:NC */ extern void g_hmac_update (GHmac *, const guchar *, gssize);
/* /usr/include/glib-2.0/glib/ghmac.h:53:NC */ extern const gchar *g_hmac_get_string (GHmac *);
/* /usr/include/glib-2.0/glib/ghmac.h:54:NC */ extern void g_hmac_get_digest (GHmac *, guint8 *, gsize *);
/* /usr/include/glib-2.0/glib/ghmac.h:58:NC */ extern gchar *g_compute_hmac_for_data (GChecksumType, const guchar *, gsize, const guchar *, gsize);
/* /usr/include/glib-2.0/glib/ghmac.h:63:NC */ extern gchar *g_compute_hmac_for_string (GChecksumType, const guchar *, gsize, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/ghook.h:106:NC */ extern void g_hook_list_init (GHookList *, guint);
/* /usr/include/glib-2.0/glib/ghook.h:108:NC */ extern void g_hook_list_clear (GHookList *);
/* /usr/include/glib-2.0/glib/ghook.h:109:NC */ extern GHook *g_hook_alloc (GHookList *);
/* /usr/include/glib-2.0/glib/ghook.h:110:NC */ extern void g_hook_free (GHookList *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:112:NC */ extern GHook *g_hook_ref (GHookList *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:114:NC */ extern void g_hook_unref (GHookList *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:116:NC */ extern gboolean g_hook_destroy (GHookList *, gulong);
/* /usr/include/glib-2.0/glib/ghook.h:118:NC */ extern void g_hook_destroy_link (GHookList *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:120:NC */ extern void g_hook_prepend (GHookList *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:122:NC */ extern void g_hook_insert_before (GHookList *, GHook *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:125:NC */ extern void g_hook_insert_sorted (GHookList *, GHook *, GHookCompareFunc);
/* /usr/include/glib-2.0/glib/ghook.h:128:NC */ extern GHook *g_hook_get (GHookList *, gulong);
/* /usr/include/glib-2.0/glib/ghook.h:130:NC */ extern GHook *g_hook_find (GHookList *, gboolean, GHookFindFunc, gpointer);
/* /usr/include/glib-2.0/glib/ghook.h:134:NC */ extern GHook *g_hook_find_data (GHookList *, gboolean, gpointer);
/* /usr/include/glib-2.0/glib/ghook.h:137:NC */ extern GHook *g_hook_find_func (GHookList *, gboolean, gpointer);
/* /usr/include/glib-2.0/glib/ghook.h:140:NC */ extern GHook *g_hook_find_func_data (GHookList *, gboolean, gpointer, gpointer);
/* /usr/include/glib-2.0/glib/ghook.h:145:NC */ extern GHook *g_hook_first_valid (GHookList *, gboolean);
/* /usr/include/glib-2.0/glib/ghook.h:150:NC */ extern GHook *g_hook_next_valid (GHookList *, GHook *, gboolean);
/* /usr/include/glib-2.0/glib/ghook.h:154:NC */ extern gint g_hook_compare_ids (GHook *, GHook *);
/* /usr/include/glib-2.0/glib/ghook.h:161:NC */ extern void g_hook_list_invoke (GHookList *, gboolean);
/* /usr/include/glib-2.0/glib/ghook.h:166:NC */ extern void g_hook_list_invoke_check (GHookList *, gboolean);
/* /usr/include/glib-2.0/glib/ghook.h:170:NC */ extern void g_hook_list_marshal (GHookList *, gboolean, GHookMarshaller, gpointer);
/* /usr/include/glib-2.0/glib/ghook.h:174:NC */ extern void g_hook_list_marshal_check (GHookList *, gboolean, GHookCheckMarshaller, gpointer);
/* /usr/include/glib-2.0/glib/ghostutils.h:31:NC */ extern gboolean g_hostname_is_non_ascii (const gchar *);
/* /usr/include/glib-2.0/glib/ghostutils.h:32:NC */ extern gboolean g_hostname_is_ascii_encoded (const gchar *);
/* /usr/include/glib-2.0/glib/ghostutils.h:33:NC */ extern gboolean g_hostname_is_ip_address (const gchar *);
/* /usr/include/glib-2.0/glib/ghostutils.h:35:NC */ extern gchar *g_hostname_to_ascii (const gchar *);
/* /usr/include/glib-2.0/glib/ghostutils.h:36:NC */ extern gchar *g_hostname_to_unicode (const gchar *);
/* /usr/include/glib-2.0/glib/gpoll.h:111:NC */ extern gint g_poll (GPollFD *, guint, gint);
/* /usr/include/glib-2.0/glib/gslist.h:48:NC */ extern GSList *g_slist_alloc (void);
/* /usr/include/glib-2.0/glib/gslist.h:49:NC */ extern void g_slist_free (GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:50:NC */ extern void g_slist_free_1 (GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:52:NC */ extern void g_slist_free_full (GSList *, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gslist.h:54:NC */ extern GSList *g_slist_append (GSList *, gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:56:NC */ extern GSList *g_slist_prepend (GSList *, gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:58:NC */ extern GSList *g_slist_insert (GSList *, gpointer, gint);
/* /usr/include/glib-2.0/glib/gslist.h:61:NC */ extern GSList *g_slist_insert_sorted (GSList *, gpointer, GCompareFunc);
/* /usr/include/glib-2.0/glib/gslist.h:64:NC */ extern GSList *g_slist_insert_sorted_with_data (GSList *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:68:NC */ extern GSList *g_slist_insert_before (GSList *, GSList *, gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:71:NC */ extern GSList *g_slist_concat (GSList *, GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:73:NC */ extern GSList *g_slist_remove (GSList *, gconstpointer);
/* /usr/include/glib-2.0/glib/gslist.h:75:NC */ extern GSList *g_slist_remove_all (GSList *, gconstpointer);
/* /usr/include/glib-2.0/glib/gslist.h:77:NC */ extern GSList *g_slist_remove_link (GSList *, GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:79:NC */ extern GSList *g_slist_delete_link (GSList *, GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:81:NC */ extern GSList *g_slist_reverse (GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:82:NC */ extern GSList *g_slist_copy (GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:83:NC */ extern GSList *g_slist_nth (GSList *, guint);
/* /usr/include/glib-2.0/glib/gslist.h:85:NC */ extern GSList *g_slist_find (GSList *, gconstpointer);
/* /usr/include/glib-2.0/glib/gslist.h:87:NC */ extern GSList *g_slist_find_custom (GSList *, gconstpointer, GCompareFunc);
/* /usr/include/glib-2.0/glib/gslist.h:90:NC */ extern gint g_slist_position (GSList *, GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:92:NC */ extern gint g_slist_index (GSList *, gconstpointer);
/* /usr/include/glib-2.0/glib/gslist.h:94:NC */ extern GSList *g_slist_last (GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:95:NC */ extern guint g_slist_length (GSList *);
/* /usr/include/glib-2.0/glib/gslist.h:96:NC */ extern void g_slist_foreach (GSList *, GFunc, gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:99:NC */ extern GSList *g_slist_sort (GSList *, GCompareFunc);
/* /usr/include/glib-2.0/glib/gslist.h:101:NC */ extern GSList *g_slist_sort_with_data (GSList *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:104:NC */ extern gpointer g_slist_nth_data (GSList *, guint);
/* /usr/include/glib-2.0/glib/gslist.h:110:NC */ extern void g_slist_push_allocator (gpointer);
/* /usr/include/glib-2.0/glib/gslist.h:111:NC */ extern void g_slist_pop_allocator (void);
/* /usr/include/glib-2.0/glib/gmain.h:263:NC */ extern GMainContext *g_main_context_new (void);
/* /usr/include/glib-2.0/glib/gmain.h:264:NC */ extern GMainContext *g_main_context_ref (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:265:NC */ extern void g_main_context_unref (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:266:NC */ extern GMainContext *g_main_context_default (void);
/* /usr/include/glib-2.0/glib/gmain.h:268:NC */ extern gboolean g_main_context_iteration (GMainContext *, gboolean);
/* /usr/include/glib-2.0/glib/gmain.h:270:NC */ extern gboolean g_main_context_pending (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:274:NC */ extern GSource *g_main_context_find_source_by_id (GMainContext *, guint);
/* /usr/include/glib-2.0/glib/gmain.h:276:NC */ extern GSource *g_main_context_find_source_by_user_data (GMainContext *, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:278:NC */ extern GSource *g_main_context_find_source_by_funcs_user_data (GMainContext *, GSourceFuncs *, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:284:NC */ extern void g_main_context_wakeup (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:285:NC */ extern gboolean g_main_context_acquire (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:286:NC */ extern void g_main_context_release (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:287:NC */ extern gboolean g_main_context_is_owner (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:288:NC */ extern gboolean g_main_context_wait (GMainContext *, GCond *, GMutex *);
/* /usr/include/glib-2.0/glib/gmain.h:292:NC */ extern gboolean g_main_context_prepare (GMainContext *, gint *);
/* /usr/include/glib-2.0/glib/gmain.h:294:NC */ extern gint g_main_context_query (GMainContext *, gint, gint *, GPollFD *, gint);
/* /usr/include/glib-2.0/glib/gmain.h:299:NC */ extern gint g_main_context_check (GMainContext *, gint, GPollFD *, gint);
/* /usr/include/glib-2.0/glib/gmain.h:303:NC */ extern void g_main_context_dispatch (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:305:NC */ extern void g_main_context_set_poll_func (GMainContext *, GPollFunc);
/* /usr/include/glib-2.0/glib/gmain.h:307:NC */ extern GPollFunc g_main_context_get_poll_func (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:311:NC */ extern void g_main_context_add_poll (GMainContext *, GPollFD *, gint);
/* /usr/include/glib-2.0/glib/gmain.h:314:NC */ extern void g_main_context_remove_poll (GMainContext *, GPollFD *);
/* /usr/include/glib-2.0/glib/gmain.h:317:NC */ extern gint g_main_depth (void);
/* /usr/include/glib-2.0/glib/gmain.h:318:NC */ extern GSource *g_main_current_source (void);
/* /usr/include/glib-2.0/glib/gmain.h:322:NC */ extern void g_main_context_push_thread_default (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:323:NC */ extern void g_main_context_pop_thread_default (GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:324:NC */ extern GMainContext *g_main_context_get_thread_default (void);
/* /usr/include/glib-2.0/glib/gmain.h:328:NC */ extern GMainLoop *g_main_loop_new (GMainContext *, gboolean);
/* /usr/include/glib-2.0/glib/gmain.h:330:NC */ extern void g_main_loop_run (GMainLoop *);
/* /usr/include/glib-2.0/glib/gmain.h:331:NC */ extern void g_main_loop_quit (GMainLoop *);
/* /usr/include/glib-2.0/glib/gmain.h:332:NC */ extern GMainLoop *g_main_loop_ref (GMainLoop *);
/* /usr/include/glib-2.0/glib/gmain.h:333:NC */ extern void g_main_loop_unref (GMainLoop *);
/* /usr/include/glib-2.0/glib/gmain.h:334:NC */ extern gboolean g_main_loop_is_running (GMainLoop *);
/* /usr/include/glib-2.0/glib/gmain.h:335:NC */ extern GMainContext *g_main_loop_get_context (GMainLoop *);
/* /usr/include/glib-2.0/glib/gmain.h:339:NC */ extern GSource *g_source_new (GSourceFuncs *, guint);
/* /usr/include/glib-2.0/glib/gmain.h:341:NC */ extern GSource *g_source_ref (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:342:NC */ extern void g_source_unref (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:344:NC */ extern guint g_source_attach (GSource *, GMainContext *);
/* /usr/include/glib-2.0/glib/gmain.h:346:NC */ extern void g_source_destroy (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:348:NC */ extern void g_source_set_priority (GSource *, gint);
/* /usr/include/glib-2.0/glib/gmain.h:350:NC */ extern gint g_source_get_priority (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:351:NC */ extern void g_source_set_can_recurse (GSource *, gboolean);
/* /usr/include/glib-2.0/glib/gmain.h:353:NC */ extern gboolean g_source_get_can_recurse (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:354:NC */ extern guint g_source_get_id (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:356:NC */ extern GMainContext *g_source_get_context (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:358:NC */ extern void g_source_set_callback (GSource *, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmain.h:363:NC */ extern void g_source_set_funcs (GSource *, GSourceFuncs *);
/* /usr/include/glib-2.0/glib/gmain.h:365:NC */ extern gboolean g_source_is_destroyed (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:367:NC */ extern void g_source_set_name (GSource *, const char *);
/* /usr/include/glib-2.0/glib/gmain.h:369:NC */ extern const char *g_source_get_name (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:370:NC */ extern void g_source_set_name_by_id (guint, const char *);
/* /usr/include/glib-2.0/glib/gmain.h:375:NC */ extern void g_source_set_callback_indirect (GSource *, gpointer, GSourceCallbackFuncs *);
/* /usr/include/glib-2.0/glib/gmain.h:379:NC */ extern void g_source_add_poll (GSource *, GPollFD *);
/* /usr/include/glib-2.0/glib/gmain.h:381:NC */ extern void g_source_remove_poll (GSource *, GPollFD *);
/* /usr/include/glib-2.0/glib/gmain.h:384:NC */ extern void g_source_add_child_source (GSource *, GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:386:NC */ extern void g_source_remove_child_source (GSource *, GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:390:NC */ extern void g_source_get_current_time (GSource *, GTimeVal *);
/* /usr/include/glib-2.0/glib/gmain.h:393:NC */ extern gint64 g_source_get_time (GSource *);
/* /usr/include/glib-2.0/glib/gmain.h:401:NC */ extern GSource *g_idle_source_new (void);
/* /usr/include/glib-2.0/glib/gmain.h:402:NC */ extern GSource *g_child_watch_source_new (GPid);
/* /usr/include/glib-2.0/glib/gmain.h:403:NC */ extern GSource *g_timeout_source_new (guint);
/* /usr/include/glib-2.0/glib/gmain.h:404:NC */ extern GSource *g_timeout_source_new_seconds (guint);
/* /usr/include/glib-2.0/glib/gmain.h:408:NC */ extern void g_get_current_time (GTimeVal *);
/* /usr/include/glib-2.0/glib/gmain.h:409:NC */ extern gint64 g_get_monotonic_time (void);
/* /usr/include/glib-2.0/glib/gmain.h:410:NC */ extern gint64 g_get_real_time (void);
/* /usr/include/glib-2.0/glib/gmain.h:514:NC */ extern gboolean g_source_remove (guint);
/* /usr/include/glib-2.0/glib/gmain.h:515:NC */ extern gboolean g_source_remove_by_user_data (gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:516:NC */ extern gboolean g_source_remove_by_funcs_user_data (GSourceFuncs *, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:520:NC */ extern guint g_timeout_add_full (gint, guint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmain.h:525:NC */ extern guint g_timeout_add (guint, GSourceFunc, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:528:NC */ extern guint g_timeout_add_seconds_full (gint, guint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmain.h:533:NC */ extern guint g_timeout_add_seconds (guint, GSourceFunc, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:536:NC */ extern guint g_child_watch_add_full (gint, GPid, GChildWatchFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmain.h:541:NC */ extern guint g_child_watch_add (GPid, GChildWatchFunc, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:544:NC */ extern guint g_idle_add (GSourceFunc, gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:546:NC */ extern guint g_idle_add_full (gint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmain.h:550:NC */ extern gboolean g_idle_remove_by_data (gpointer);
/* /usr/include/glib-2.0/glib/gmain.h:552:NC */ extern void g_main_context_invoke_full (GMainContext *, gint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmain.h:557:NC */ extern void g_main_context_invoke (GMainContext *, GSourceFunc, gpointer);
/* /usr/include/glib-2.0/glib/gunicode.h:489:NC */ extern guint32 g_unicode_script_to_iso15924 (GUnicodeScript);
/* /usr/include/glib-2.0/glib/gunicode.h:490:NC */ extern GUnicodeScript g_unicode_script_from_iso15924 (guint32);
/* /usr/include/glib-2.0/glib/gunicode.h:498:NC */ extern gboolean g_get_charset (const char **);
/* /usr/include/glib-2.0/glib/gunicode.h:502:NC */ extern gboolean g_unichar_isalnum (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:503:NC */ extern gboolean g_unichar_isalpha (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:504:NC */ extern gboolean g_unichar_iscntrl (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:505:NC */ extern gboolean g_unichar_isdigit (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:506:NC */ extern gboolean g_unichar_isgraph (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:507:NC */ extern gboolean g_unichar_islower (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:508:NC */ extern gboolean g_unichar_isprint (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:509:NC */ extern gboolean g_unichar_ispunct (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:510:NC */ extern gboolean g_unichar_isspace (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:511:NC */ extern gboolean g_unichar_isupper (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:512:NC */ extern gboolean g_unichar_isxdigit (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:513:NC */ extern gboolean g_unichar_istitle (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:514:NC */ extern gboolean g_unichar_isdefined (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:515:NC */ extern gboolean g_unichar_iswide (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:516:NC */ extern gboolean g_unichar_iswide_cjk (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:517:NC */ extern gboolean g_unichar_iszerowidth (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:518:NC */ extern gboolean g_unichar_ismark (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:522:NC */ extern gunichar g_unichar_toupper (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:523:NC */ extern gunichar g_unichar_tolower (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:524:NC */ extern gunichar g_unichar_totitle (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:528:NC */ extern gint g_unichar_digit_value (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:530:NC */ extern gint g_unichar_xdigit_value (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:533:NC */ extern GUnicodeType g_unichar_type (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:536:NC */ extern GUnicodeBreakType g_unichar_break_type (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:539:NC */ extern gint g_unichar_combining_class (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:541:NC */ extern gboolean g_unichar_get_mirror_char (gunichar, gunichar *);
/* /usr/include/glib-2.0/glib/gunicode.h:544:NC */ extern GUnicodeScript g_unichar_get_script (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:547:NC */ extern gboolean g_unichar_validate (gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:550:NC */ extern gboolean g_unichar_compose (gunichar, gunichar, gunichar *);
/* /usr/include/glib-2.0/glib/gunicode.h:553:NC */ extern gboolean g_unichar_decompose (gunichar, gunichar *, gunichar *);
/* /usr/include/glib-2.0/glib/gunicode.h:557:NC */ extern gsize g_unichar_fully_decompose (gunichar, gboolean, gunichar *, gsize);
/* /usr/include/glib-2.0/glib/gunicode.h:565:NC */ extern void g_unicode_canonical_ordering (gunichar *, gsize);
/* /usr/include/glib-2.0/glib/gunicode.h:571:NC */ extern gunichar *g_unicode_canonical_decomposition (gunichar, gsize *);
/* /usr/include/glib-2.0/glib/gunicode.h:592:NC */ extern gunichar g_utf8_get_char (const gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:593:NC */ extern gunichar g_utf8_get_char_validated (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:596:NC */ extern gchar *g_utf8_offset_to_pointer (const gchar *, glong);
/* /usr/include/glib-2.0/glib/gunicode.h:598:NC */ extern glong g_utf8_pointer_to_offset (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:600:NC */ extern gchar *g_utf8_prev_char (const gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:601:NC */ extern gchar *g_utf8_find_next_char (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:603:NC */ extern gchar *g_utf8_find_prev_char (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:606:NC */ extern glong g_utf8_strlen (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:609:NC */ extern gchar *g_utf8_substring (const gchar *, glong, glong);
/* /usr/include/glib-2.0/glib/gunicode.h:613:NC */ extern gchar *g_utf8_strncpy (gchar *, const gchar *, gsize);
/* /usr/include/glib-2.0/glib/gunicode.h:619:NC */ extern gchar *g_utf8_strchr (const gchar *, gssize, gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:622:NC */ extern gchar *g_utf8_strrchr (const gchar *, gssize, gunichar);
/* /usr/include/glib-2.0/glib/gunicode.h:625:NC */ extern gchar *g_utf8_strreverse (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:628:NC */ extern gunichar2 *g_utf8_to_utf16 (const gchar *, glong, glong *, glong *, GError **);
/* /usr/include/glib-2.0/glib/gunicode.h:633:NC */ extern gunichar *g_utf8_to_ucs4 (const gchar *, glong, glong *, glong *, GError **);
/* /usr/include/glib-2.0/glib/gunicode.h:638:NC */ extern gunichar *g_utf8_to_ucs4_fast (const gchar *, glong, glong *);
/* /usr/include/glib-2.0/glib/gunicode.h:641:NC */ extern gunichar *g_utf16_to_ucs4 (const gunichar2 *, glong, glong *, glong *, GError **);
/* /usr/include/glib-2.0/glib/gunicode.h:646:NC */ extern gchar *g_utf16_to_utf8 (const gunichar2 *, glong, glong *, glong *, GError **);
/* /usr/include/glib-2.0/glib/gunicode.h:651:NC */ extern gunichar2 *g_ucs4_to_utf16 (const gunichar *, glong, glong *, glong *, GError **);
/* /usr/include/glib-2.0/glib/gunicode.h:656:NC */ extern gchar *g_ucs4_to_utf8 (const gunichar *, glong, glong *, glong *, GError **);
/* /usr/include/glib-2.0/glib/gunicode.h:662:NC */ extern gint g_unichar_to_utf8 (gunichar, gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:665:NC */ extern gboolean g_utf8_validate (const gchar *, gssize, const gchar **);
/* /usr/include/glib-2.0/glib/gunicode.h:669:NC */ extern gchar *g_utf8_strup (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:671:NC */ extern gchar *g_utf8_strdown (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:673:NC */ extern gchar *g_utf8_casefold (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:711:NC */ extern gchar *g_utf8_normalize (const gchar *, gssize, GNormalizeMode);
/* /usr/include/glib-2.0/glib/gunicode.h:715:NC */ extern gint g_utf8_collate (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gunicode.h:717:NC */ extern gchar *g_utf8_collate_key (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:719:NC */ extern gchar *g_utf8_collate_key_for_filename (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gunicode.h:725:NC */ extern gchar *_g_utf8_make_valid (const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:64:NC */ extern GStringChunk *g_string_chunk_new (gsize);
/* /usr/include/glib-2.0/glib/gstring.h:65:NC */ extern void g_string_chunk_free (GStringChunk *);
/* /usr/include/glib-2.0/glib/gstring.h:66:NC */ extern void g_string_chunk_clear (GStringChunk *);
/* /usr/include/glib-2.0/glib/gstring.h:67:NC */ extern gchar *g_string_chunk_insert (GStringChunk *, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:69:NC */ extern gchar *g_string_chunk_insert_len (GStringChunk *, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:72:NC */ extern gchar *g_string_chunk_insert_const (GStringChunk *, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:78:NC */ extern GString *g_string_new (const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:79:NC */ extern GString *g_string_new_len (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:81:NC */ extern GString *g_string_sized_new (gsize);
/* /usr/include/glib-2.0/glib/gstring.h:82:NC */ extern gchar *g_string_free (GString *, gboolean);
/* /usr/include/glib-2.0/glib/gstring.h:84:NC */ extern gboolean g_string_equal (const GString *, const GString *);
/* /usr/include/glib-2.0/glib/gstring.h:86:NC */ extern guint g_string_hash (const GString *);
/* /usr/include/glib-2.0/glib/gstring.h:87:NC */ extern GString *g_string_assign (GString *, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:89:NC */ extern GString *g_string_truncate (GString *, gsize);
/* /usr/include/glib-2.0/glib/gstring.h:91:NC */ extern GString *g_string_set_size (GString *, gsize);
/* /usr/include/glib-2.0/glib/gstring.h:93:NC */ extern GString *g_string_insert_len (GString *, gssize, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:97:NC */ extern GString *g_string_append (GString *, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:99:NC */ extern GString *g_string_append_len (GString *, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:102:NC */ extern GString *g_string_append_c (GString *, gchar);
/* /usr/include/glib-2.0/glib/gstring.h:104:NC */ extern GString *g_string_append_unichar (GString *, gunichar);
/* /usr/include/glib-2.0/glib/gstring.h:106:NC */ extern GString *g_string_prepend (GString *, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:108:NC */ extern GString *g_string_prepend_c (GString *, gchar);
/* /usr/include/glib-2.0/glib/gstring.h:110:NC */ extern GString *g_string_prepend_unichar (GString *, gunichar);
/* /usr/include/glib-2.0/glib/gstring.h:112:NC */ extern GString *g_string_prepend_len (GString *, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:115:NC */ extern GString *g_string_insert (GString *, gssize, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:118:NC */ extern GString *g_string_insert_c (GString *, gssize, gchar);
/* /usr/include/glib-2.0/glib/gstring.h:121:NC */ extern GString *g_string_insert_unichar (GString *, gssize, gunichar);
/* /usr/include/glib-2.0/glib/gstring.h:124:NC */ extern GString *g_string_overwrite (GString *, gsize, const gchar *);
/* /usr/include/glib-2.0/glib/gstring.h:127:NC */ extern GString *g_string_overwrite_len (GString *, gsize, const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:131:NC */ extern GString *g_string_erase (GString *, gssize, gssize);
/* /usr/include/glib-2.0/glib/gstring.h:134:NC */ extern GString *g_string_ascii_down (GString *);
/* /usr/include/glib-2.0/glib/gstring.h:135:NC */ extern GString *g_string_ascii_up (GString *);
/* /usr/include/glib-2.0/glib/gstring.h:136:NC */ extern void g_string_vprintf (GString *, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gstring.h:139:NC */ extern void g_string_printf (GString *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gstring.h:142:NC */ extern void g_string_append_vprintf (GString *, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gstring.h:145:NC */ extern void g_string_append_printf (GString *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gstring.h:148:NC */ extern GString *g_string_append_uri_escaped (GString *, const char *, const char *, gboolean);
/* /usr/include/glib-2.0/glib/gstring.h:156:NF */ static GString *g_string_append_c_inline (GString *gstring, gchar c); /* (gstring, c) GString *gstring; gchar c; */
/* /usr/include/glib-2.0/glib/gstring.h:179:NC */ extern GString *g_string_down (GString *);
/* /usr/include/glib-2.0/glib/gstring.h:180:NC */ extern GString *g_string_up (GString *);
/* /usr/include/glib-2.0/glib/giochannel.h:169:NC */ extern void g_io_channel_init (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:170:NC */ extern GIOChannel *g_io_channel_ref (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:171:NC */ extern void g_io_channel_unref (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:174:NC */ extern GIOError g_io_channel_read (GIOChannel *, gchar *, gsize, gsize *);
/* /usr/include/glib-2.0/glib/giochannel.h:178:NC */ extern GIOError g_io_channel_write (GIOChannel *, const gchar *, gsize, gsize *);
/* /usr/include/glib-2.0/glib/giochannel.h:182:NC */ extern GIOError g_io_channel_seek (GIOChannel *, gint64, GSeekType);
/* /usr/include/glib-2.0/glib/giochannel.h:185:NC */ extern void g_io_channel_close (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:188:NC */ extern GIOStatus g_io_channel_shutdown (GIOChannel *, gboolean, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:191:NC */ extern guint g_io_add_watch_full (GIOChannel *, gint, GIOCondition, GIOFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/giochannel.h:197:NC */ extern GSource *g_io_create_watch (GIOChannel *, GIOCondition);
/* /usr/include/glib-2.0/glib/giochannel.h:199:NC */ extern guint g_io_add_watch (GIOChannel *, GIOCondition, GIOFunc, gpointer);
/* /usr/include/glib-2.0/glib/giochannel.h:207:NC */ extern void g_io_channel_set_buffer_size (GIOChannel *, gsize);
/* /usr/include/glib-2.0/glib/giochannel.h:209:NC */ extern gsize g_io_channel_get_buffer_size (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:210:NC */ extern GIOCondition g_io_channel_get_buffer_condition (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:211:NC */ extern GIOStatus g_io_channel_set_flags (GIOChannel *, GIOFlags, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:214:NC */ extern GIOFlags g_io_channel_get_flags (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:215:NC */ extern void g_io_channel_set_line_term (GIOChannel *, const gchar *, gint);
/* /usr/include/glib-2.0/glib/giochannel.h:218:NC */ extern const gchar *g_io_channel_get_line_term (GIOChannel *, gint *);
/* /usr/include/glib-2.0/glib/giochannel.h:220:NC */ extern void g_io_channel_set_buffered (GIOChannel *, gboolean);
/* /usr/include/glib-2.0/glib/giochannel.h:222:NC */ extern gboolean g_io_channel_get_buffered (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:223:NC */ extern GIOStatus g_io_channel_set_encoding (GIOChannel *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:226:NC */ extern const gchar *g_io_channel_get_encoding (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:227:NC */ extern void g_io_channel_set_close_on_unref (GIOChannel *, gboolean);
/* /usr/include/glib-2.0/glib/giochannel.h:229:NC */ extern gboolean g_io_channel_get_close_on_unref (GIOChannel *);
/* /usr/include/glib-2.0/glib/giochannel.h:232:NC */ extern GIOStatus g_io_channel_flush (GIOChannel *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:234:NC */ extern GIOStatus g_io_channel_read_line (GIOChannel *, gchar **, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:239:NC */ extern GIOStatus g_io_channel_read_line_string (GIOChannel *, GString *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:243:NC */ extern GIOStatus g_io_channel_read_to_end (GIOChannel *, gchar **, gsize *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:247:NC */ extern GIOStatus g_io_channel_read_chars (GIOChannel *, gchar *, gsize, gsize *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:252:NC */ extern GIOStatus g_io_channel_read_unichar (GIOChannel *, gunichar *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:255:NC */ extern GIOStatus g_io_channel_write_chars (GIOChannel *, const gchar *, gssize, gsize *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:260:NC */ extern GIOStatus g_io_channel_write_unichar (GIOChannel *, gunichar, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:263:NC */ extern GIOStatus g_io_channel_seek_position (GIOChannel *, gint64, GSeekType, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:271:NC */ extern GIOChannel *g_io_channel_new_file (const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/giochannel.h:277:NC */ extern GQuark g_io_channel_error_quark (void);
/* /usr/include/glib-2.0/glib/giochannel.h:278:NC */ extern GIOChannelError g_io_channel_error_from_errno (gint);
/* /usr/include/glib-2.0/glib/giochannel.h:298:NC */ extern GIOChannel *g_io_channel_unix_new (int);
/* /usr/include/glib-2.0/glib/giochannel.h:299:NC */ extern gint g_io_channel_unix_get_fd (GIOChannel *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:46:NC */ extern GQuark g_key_file_error_quark (void);
/* /usr/include/glib-2.0/glib/gkeyfile.h:57:NC */ extern GKeyFile *g_key_file_new (void);
/* /usr/include/glib-2.0/glib/gkeyfile.h:58:NC */ extern void g_key_file_free (GKeyFile *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:59:NC */ extern void g_key_file_set_list_separator (GKeyFile *, gchar);
/* /usr/include/glib-2.0/glib/gkeyfile.h:61:NC */ extern gboolean g_key_file_load_from_file (GKeyFile *, const gchar *, GKeyFileFlags, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:65:NC */ extern gboolean g_key_file_load_from_data (GKeyFile *, const gchar *, gsize, GKeyFileFlags, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:70:NC */ extern gboolean g_key_file_load_from_dirs (GKeyFile *, const gchar *, const gchar **, gchar **, GKeyFileFlags, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:76:NC */ extern gboolean g_key_file_load_from_data_dirs (GKeyFile *, const gchar *, gchar **, GKeyFileFlags, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:81:NC */ extern gchar *g_key_file_to_data (GKeyFile *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:84:NC */ extern gchar *g_key_file_get_start_group (GKeyFile *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:85:NC */ extern gchar **g_key_file_get_groups (GKeyFile *, gsize *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:87:NC */ extern gchar **g_key_file_get_keys (GKeyFile *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:91:NC */ extern gboolean g_key_file_has_group (GKeyFile *, const gchar *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:93:NC */ extern gboolean g_key_file_has_key (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:97:NC */ extern gchar *g_key_file_get_value (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:101:NC */ extern void g_key_file_set_value (GKeyFile *, const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:105:NC */ extern gchar *g_key_file_get_string (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:109:NC */ extern void g_key_file_set_string (GKeyFile *, const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:113:NC */ extern gchar *g_key_file_get_locale_string (GKeyFile *, const gchar *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:118:NC */ extern void g_key_file_set_locale_string (GKeyFile *, const gchar *, const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gkeyfile.h:123:NC */ extern gboolean g_key_file_get_boolean (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:127:NC */ extern void g_key_file_set_boolean (GKeyFile *, const gchar *, const gchar *, gboolean);
/* /usr/include/glib-2.0/glib/gkeyfile.h:131:NC */ extern gint g_key_file_get_integer (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:135:NC */ extern void g_key_file_set_integer (GKeyFile *, const gchar *, const gchar *, gint);
/* /usr/include/glib-2.0/glib/gkeyfile.h:139:NC */ extern gint64 g_key_file_get_int64 (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:143:NC */ extern void g_key_file_set_int64 (GKeyFile *, const gchar *, const gchar *, gint64);
/* /usr/include/glib-2.0/glib/gkeyfile.h:147:NC */ extern guint64 g_key_file_get_uint64 (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:151:NC */ extern void g_key_file_set_uint64 (GKeyFile *, const gchar *, const gchar *, guint64);
/* /usr/include/glib-2.0/glib/gkeyfile.h:155:NC */ extern gdouble g_key_file_get_double (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:159:NC */ extern void g_key_file_set_double (GKeyFile *, const gchar *, const gchar *, gdouble);
/* /usr/include/glib-2.0/glib/gkeyfile.h:163:NC */ extern gchar **g_key_file_get_string_list (GKeyFile *, const gchar *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:168:NC */ extern void g_key_file_set_string_list (GKeyFile *, const gchar *, const gchar *, const gchar *const *, gsize);
/* /usr/include/glib-2.0/glib/gkeyfile.h:173:NC */ extern gchar **g_key_file_get_locale_string_list (GKeyFile *, const gchar *, const gchar *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:179:NC */ extern void g_key_file_set_locale_string_list (GKeyFile *, const gchar *, const gchar *, const gchar *, const gchar *const *, gsize);
/* /usr/include/glib-2.0/glib/gkeyfile.h:185:NC */ extern gboolean *g_key_file_get_boolean_list (GKeyFile *, const gchar *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:190:NC */ extern void g_key_file_set_boolean_list (GKeyFile *, const gchar *, const gchar *, gboolean *, gsize);
/* /usr/include/glib-2.0/glib/gkeyfile.h:195:NC */ extern gint *g_key_file_get_integer_list (GKeyFile *, const gchar *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:200:NC */ extern void g_key_file_set_double_list (GKeyFile *, const gchar *, const gchar *, gdouble *, gsize);
/* /usr/include/glib-2.0/glib/gkeyfile.h:205:NC */ extern gdouble *g_key_file_get_double_list (GKeyFile *, const gchar *, const gchar *, gsize *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:210:NC */ extern void g_key_file_set_integer_list (GKeyFile *, const gchar *, const gchar *, gint *, gsize);
/* /usr/include/glib-2.0/glib/gkeyfile.h:215:NC */ extern gboolean g_key_file_set_comment (GKeyFile *, const gchar *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:220:NC */ extern gchar *g_key_file_get_comment (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:225:NC */ extern gboolean g_key_file_remove_comment (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:229:NC */ extern gboolean g_key_file_remove_key (GKeyFile *, const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gkeyfile.h:233:NC */ extern gboolean g_key_file_remove_group (GKeyFile *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gmappedfile.h:35:NC */ extern GMappedFile *g_mapped_file_new (const gchar *, gboolean, GError **);
/* /usr/include/glib-2.0/glib/gmappedfile.h:38:NC */ extern gsize g_mapped_file_get_length (GMappedFile *);
/* /usr/include/glib-2.0/glib/gmappedfile.h:39:NC */ extern gchar *g_mapped_file_get_contents (GMappedFile *);
/* /usr/include/glib-2.0/glib/gmappedfile.h:40:NC */ extern GMappedFile *g_mapped_file_ref (GMappedFile *);
/* /usr/include/glib-2.0/glib/gmappedfile.h:41:NC */ extern void g_mapped_file_unref (GMappedFile *);
/* /usr/include/glib-2.0/glib/gmappedfile.h:44:NC */ extern void g_mapped_file_free (GMappedFile *);
/* /usr/include/glib-2.0/glib/gmarkup.h:74:NC */ extern GQuark g_markup_error_quark (void);
/* /usr/include/glib-2.0/glib/gmarkup.h:181:NC */ extern GMarkupParseContext *g_markup_parse_context_new (const GMarkupParser *, GMarkupParseFlags, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gmarkup.h:185:NC */ extern void g_markup_parse_context_free (GMarkupParseContext *);
/* /usr/include/glib-2.0/glib/gmarkup.h:186:NC */ extern gboolean g_markup_parse_context_parse (GMarkupParseContext *, const gchar *, gssize, GError **);
/* /usr/include/glib-2.0/glib/gmarkup.h:190:NC */ extern void g_markup_parse_context_push (GMarkupParseContext *, const GMarkupParser *, gpointer);
/* /usr/include/glib-2.0/glib/gmarkup.h:193:NC */ extern gpointer g_markup_parse_context_pop (GMarkupParseContext *);
/* /usr/include/glib-2.0/glib/gmarkup.h:195:NC */ extern gboolean g_markup_parse_context_end_parse (GMarkupParseContext *, GError **);
/* /usr/include/glib-2.0/glib/gmarkup.h:197:NC */ extern const gchar *g_markup_parse_context_get_element (GMarkupParseContext *);
/* /usr/include/glib-2.0/glib/gmarkup.h:198:NC */ extern const GSList *g_markup_parse_context_get_element_stack (GMarkupParseContext *);
/* /usr/include/glib-2.0/glib/gmarkup.h:201:NC */ extern void g_markup_parse_context_get_position (GMarkupParseContext *, gint *, gint *);
/* /usr/include/glib-2.0/glib/gmarkup.h:204:NC */ extern gpointer g_markup_parse_context_get_user_data (GMarkupParseContext *);
/* /usr/include/glib-2.0/glib/gmarkup.h:207:NC */ extern gchar *g_markup_escape_text (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gmarkup.h:210:NC */ extern gchar *g_markup_printf_escaped (const char *, ...);
/* /usr/include/glib-2.0/glib/gmarkup.h:212:NC */ extern gchar *g_markup_vprintf_escaped (const char *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gmarkup.h:228:NC */ extern gboolean g_markup_collect_attributes (const gchar *, const gchar **, const gchar **, GError **, GMarkupCollectType, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gmessages.h:48:NC */ extern gsize g_printf_string_upper_bound (const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gmessages.h:85:NC */ extern guint g_log_set_handler (const gchar *, GLogLevelFlags, GLogFunc, gpointer);
/* /usr/include/glib-2.0/glib/gmessages.h:89:NC */ extern void g_log_remove_handler (const gchar *, guint);
/* /usr/include/glib-2.0/glib/gmessages.h:91:NC */ extern void g_log_default_handler (const gchar *, GLogLevelFlags, const gchar *, gpointer);
/* /usr/include/glib-2.0/glib/gmessages.h:95:NC */ extern GLogFunc g_log_set_default_handler (GLogFunc, gpointer);
/* /usr/include/glib-2.0/glib/gmessages.h:97:NC */ extern void g_log (const gchar *, GLogLevelFlags, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gmessages.h:101:NC */ extern void g_logv (const gchar *, GLogLevelFlags, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gmessages.h:105:NC */ extern GLogLevelFlags g_log_set_fatal_mask (const gchar *, GLogLevelFlags);
/* /usr/include/glib-2.0/glib/gmessages.h:107:NC */ extern GLogLevelFlags g_log_set_always_fatal (GLogLevelFlags);
/* /usr/include/glib-2.0/glib/gmessages.h:110:NC */ extern void _g_log_fallback_handler (const gchar *, GLogLevelFlags, const gchar *, gpointer);
/* /usr/include/glib-2.0/glib/gmessages.h:116:NC */ extern void g_return_if_fail_warning (const char *, const char *, const char *);
/* /usr/include/glib-2.0/glib/gmessages.h:119:NC */ extern void g_warn_message (const char *, const char *, int, const char *, const char *);
/* /usr/include/glib-2.0/glib/gmessages.h:125:NC */ extern void g_assert_warning (const char *, const char *, const int , const char *, const char *);
/* /usr/include/glib-2.0/glib/gmessages.h:237:NC */ extern void g_print (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gmessages.h:239:NC */ extern GPrintFunc g_set_print_handler (GPrintFunc);
/* /usr/include/glib-2.0/glib/gmessages.h:240:NC */ extern void g_printerr (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gmessages.h:242:NC */ extern GPrintFunc g_set_printerr_handler (GPrintFunc);
/* /usr/include/glib-2.0/glib/gnode.h:115:NC */ extern GNode *g_node_new (gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:116:NC */ extern void g_node_destroy (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:117:NC */ extern void g_node_unlink (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:118:NC */ extern GNode *g_node_copy_deep (GNode *, GCopyFunc, gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:121:NC */ extern GNode *g_node_copy (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:122:NC */ extern GNode *g_node_insert (GNode *, gint, GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:125:NC */ extern GNode *g_node_insert_before (GNode *, GNode *, GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:128:NC */ extern GNode *g_node_insert_after (GNode *, GNode *, GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:131:NC */ extern GNode *g_node_prepend (GNode *, GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:133:NC */ extern guint g_node_n_nodes (GNode *, GTraverseFlags);
/* /usr/include/glib-2.0/glib/gnode.h:135:NC */ extern GNode *g_node_get_root (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:136:NC */ extern gboolean g_node_is_ancestor (GNode *, GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:138:NC */ extern guint g_node_depth (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:139:NC */ extern GNode *g_node_find (GNode *, GTraverseType, GTraverseFlags, gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:213:NC */ extern void g_node_traverse (GNode *, GTraverseType, GTraverseFlags, gint, GNodeTraverseFunc, gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:225:NC */ extern guint g_node_max_height (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:227:NC */ extern void g_node_children_foreach (GNode *, GTraverseFlags, GNodeForeachFunc, gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:231:NC */ extern void g_node_reverse_children (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:232:NC */ extern guint g_node_n_children (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:233:NC */ extern GNode *g_node_nth_child (GNode *, guint);
/* /usr/include/glib-2.0/glib/gnode.h:235:NC */ extern GNode *g_node_last_child (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:236:NC */ extern GNode *g_node_find_child (GNode *, GTraverseFlags, gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:239:NC */ extern gint g_node_child_position (GNode *, GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:241:NC */ extern gint g_node_child_index (GNode *, gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:244:NC */ extern GNode *g_node_first_sibling (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:245:NC */ extern GNode *g_node_last_sibling (GNode *);
/* /usr/include/glib-2.0/glib/gnode.h:284:NC */ extern void g_node_push_allocator (gpointer);
/* /usr/include/glib-2.0/glib/gnode.h:285:NC */ extern void g_node_pop_allocator (void);
/* /usr/include/glib-2.0/glib/goption.h:212:NC */ extern GQuark g_option_error_quark (void);
/* /usr/include/glib-2.0/glib/goption.h:310:NC */ extern GOptionContext *g_option_context_new (const gchar *);
/* /usr/include/glib-2.0/glib/goption.h:311:NC */ extern void g_option_context_set_summary (GOptionContext *, const gchar *);
/* /usr/include/glib-2.0/glib/goption.h:313:NC */ extern const gchar *g_option_context_get_summary (GOptionContext *);
/* /usr/include/glib-2.0/glib/goption.h:314:NC */ extern void g_option_context_set_description (GOptionContext *, const gchar *);
/* /usr/include/glib-2.0/glib/goption.h:316:NC */ extern const gchar *g_option_context_get_description (GOptionContext *);
/* /usr/include/glib-2.0/glib/goption.h:317:NC */ extern void g_option_context_free (GOptionContext *);
/* /usr/include/glib-2.0/glib/goption.h:318:NC */ extern void g_option_context_set_help_enabled (GOptionContext *, gboolean);
/* /usr/include/glib-2.0/glib/goption.h:320:NC */ extern gboolean g_option_context_get_help_enabled (GOptionContext *);
/* /usr/include/glib-2.0/glib/goption.h:321:NC */ extern void g_option_context_set_ignore_unknown_options (GOptionContext *, gboolean);
/* /usr/include/glib-2.0/glib/goption.h:323:NC */ extern gboolean g_option_context_get_ignore_unknown_options (GOptionContext *);
/* /usr/include/glib-2.0/glib/goption.h:325:NC */ extern void g_option_context_add_main_entries (GOptionContext *, const GOptionEntry *, const gchar *);
/* /usr/include/glib-2.0/glib/goption.h:328:NC */ extern gboolean g_option_context_parse (GOptionContext *, gint *, gchar ***, GError **);
/* /usr/include/glib-2.0/glib/goption.h:332:NC */ extern void g_option_context_set_translate_func (GOptionContext *, GTranslateFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/goption.h:336:NC */ extern void g_option_context_set_translation_domain (GOptionContext *, const gchar *);
/* /usr/include/glib-2.0/glib/goption.h:339:NC */ extern void g_option_context_add_group (GOptionContext *, GOptionGroup *);
/* /usr/include/glib-2.0/glib/goption.h:341:NC */ extern void g_option_context_set_main_group (GOptionContext *, GOptionGroup *);
/* /usr/include/glib-2.0/glib/goption.h:343:NC */ extern GOptionGroup *g_option_context_get_main_group (GOptionContext *);
/* /usr/include/glib-2.0/glib/goption.h:344:NC */ extern gchar *g_option_context_get_help (GOptionContext *, gboolean, GOptionGroup *);
/* /usr/include/glib-2.0/glib/goption.h:348:NC */ extern GOptionGroup *g_option_group_new (const gchar *, const gchar *, const gchar *, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/goption.h:353:NC */ extern void g_option_group_set_parse_hooks (GOptionGroup *, GOptionParseFunc, GOptionParseFunc);
/* /usr/include/glib-2.0/glib/goption.h:356:NC */ extern void g_option_group_set_error_hook (GOptionGroup *, GOptionErrorFunc);
/* /usr/include/glib-2.0/glib/goption.h:358:NC */ extern void g_option_group_free (GOptionGroup *);
/* /usr/include/glib-2.0/glib/goption.h:359:NC */ extern void g_option_group_add_entries (GOptionGroup *, const GOptionEntry *);
/* /usr/include/glib-2.0/glib/goption.h:361:NC */ extern void g_option_group_set_translate_func (GOptionGroup *, GTranslateFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/glib/goption.h:365:NC */ extern void g_option_group_set_translation_domain (GOptionGroup *, const gchar *);
/* /usr/include/glib-2.0/glib/gpattern.h:34:NC */ extern GPatternSpec *g_pattern_spec_new (const gchar *);
/* /usr/include/glib-2.0/glib/gpattern.h:35:NC */ extern void g_pattern_spec_free (GPatternSpec *);
/* /usr/include/glib-2.0/glib/gpattern.h:36:NC */ extern gboolean g_pattern_spec_equal (GPatternSpec *, GPatternSpec *);
/* /usr/include/glib-2.0/glib/gpattern.h:38:NC */ extern gboolean g_pattern_match (GPatternSpec *, guint, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gpattern.h:42:NC */ extern gboolean g_pattern_match_string (GPatternSpec *, const gchar *);
/* /usr/include/glib-2.0/glib/gpattern.h:44:NC */ extern gboolean g_pattern_match_simple (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gprimes.h:47:NC */ extern guint g_spaced_primes_closest (guint);
/* /usr/include/glib-2.0/glib/gqsort.h:38:NC */ extern void g_qsort_with_data (gconstpointer, gint, gsize, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:74:NC */ extern GQueue *g_queue_new (void);
/* /usr/include/glib-2.0/glib/gqueue.h:75:NC */ extern void g_queue_free (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:76:NC */ extern void g_queue_init (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:77:NC */ extern void g_queue_clear (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:78:NC */ extern gboolean g_queue_is_empty (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:79:NC */ extern guint g_queue_get_length (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:80:NC */ extern void g_queue_reverse (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:81:NC */ extern GQueue *g_queue_copy (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:82:NC */ extern void g_queue_foreach (GQueue *, GFunc, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:85:NC */ extern GList *g_queue_find (GQueue *, gconstpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:87:NC */ extern GList *g_queue_find_custom (GQueue *, gconstpointer, GCompareFunc);
/* /usr/include/glib-2.0/glib/gqueue.h:90:NC */ extern void g_queue_sort (GQueue *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:94:NC */ extern void g_queue_push_head (GQueue *, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:96:NC */ extern void g_queue_push_tail (GQueue *, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:98:NC */ extern void g_queue_push_nth (GQueue *, gpointer, gint);
/* /usr/include/glib-2.0/glib/gqueue.h:101:NC */ extern gpointer g_queue_pop_head (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:102:NC */ extern gpointer g_queue_pop_tail (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:103:NC */ extern gpointer g_queue_pop_nth (GQueue *, guint);
/* /usr/include/glib-2.0/glib/gqueue.h:105:NC */ extern gpointer g_queue_peek_head (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:106:NC */ extern gpointer g_queue_peek_tail (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:107:NC */ extern gpointer g_queue_peek_nth (GQueue *, guint);
/* /usr/include/glib-2.0/glib/gqueue.h:109:NC */ extern gint g_queue_index (GQueue *, gconstpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:111:NC */ extern gboolean g_queue_remove (GQueue *, gconstpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:113:NC */ extern guint g_queue_remove_all (GQueue *, gconstpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:115:NC */ extern void g_queue_insert_before (GQueue *, GList *, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:118:NC */ extern void g_queue_insert_after (GQueue *, GList *, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:121:NC */ extern void g_queue_insert_sorted (GQueue *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gqueue.h:126:NC */ extern void g_queue_push_head_link (GQueue *, GList *);
/* /usr/include/glib-2.0/glib/gqueue.h:128:NC */ extern void g_queue_push_tail_link (GQueue *, GList *);
/* /usr/include/glib-2.0/glib/gqueue.h:130:NC */ extern void g_queue_push_nth_link (GQueue *, gint, GList *);
/* /usr/include/glib-2.0/glib/gqueue.h:133:NC */ extern GList *g_queue_pop_head_link (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:134:NC */ extern GList *g_queue_pop_tail_link (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:135:NC */ extern GList *g_queue_pop_nth_link (GQueue *, guint);
/* /usr/include/glib-2.0/glib/gqueue.h:137:NC */ extern GList *g_queue_peek_head_link (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:138:NC */ extern GList *g_queue_peek_tail_link (GQueue *);
/* /usr/include/glib-2.0/glib/gqueue.h:139:NC */ extern GList *g_queue_peek_nth_link (GQueue *, guint);
/* /usr/include/glib-2.0/glib/gqueue.h:141:NC */ extern gint g_queue_link_index (GQueue *, GList *);
/* /usr/include/glib-2.0/glib/gqueue.h:143:NC */ extern void g_queue_unlink (GQueue *, GList *);
/* /usr/include/glib-2.0/glib/gqueue.h:145:NC */ extern void g_queue_delete_link (GQueue *, GList *);
/* /usr/include/glib-2.0/glib/grand.h:49:NC */ extern GRand *g_rand_new_with_seed (guint32);
/* /usr/include/glib-2.0/glib/grand.h:50:NC */ extern GRand *g_rand_new_with_seed_array (const guint32 *, guint);
/* /usr/include/glib-2.0/glib/grand.h:52:NC */ extern GRand *g_rand_new (void);
/* /usr/include/glib-2.0/glib/grand.h:53:NC */ extern void g_rand_free (GRand *);
/* /usr/include/glib-2.0/glib/grand.h:54:NC */ extern GRand *g_rand_copy (GRand *);
/* /usr/include/glib-2.0/glib/grand.h:55:NC */ extern void g_rand_set_seed (GRand *, guint32);
/* /usr/include/glib-2.0/glib/grand.h:57:NC */ extern void g_rand_set_seed_array (GRand *, const guint32 *, guint);
/* /usr/include/glib-2.0/glib/grand.h:63:NC */ extern guint32 g_rand_int (GRand *);
/* /usr/include/glib-2.0/glib/grand.h:64:NC */ extern gint32 g_rand_int_range (GRand *, gint32, gint32);
/* /usr/include/glib-2.0/glib/grand.h:67:NC */ extern gdouble g_rand_double (GRand *);
/* /usr/include/glib-2.0/glib/grand.h:68:NC */ extern gdouble g_rand_double_range (GRand *, gdouble, gdouble);
/* /usr/include/glib-2.0/glib/grand.h:71:NC */ extern void g_random_set_seed (guint32);
/* /usr/include/glib-2.0/glib/grand.h:75:NC */ extern guint32 g_random_int (void);
/* /usr/include/glib-2.0/glib/grand.h:76:NC */ extern gint32 g_random_int_range (gint32, gint32);
/* /usr/include/glib-2.0/glib/grand.h:78:NC */ extern gdouble g_random_double (void);
/* /usr/include/glib-2.0/glib/grand.h:79:NC */ extern gdouble g_random_double_range (gdouble, gdouble);
/* /usr/include/glib-2.0/glib/grel.h:71:NC */ extern GRelation *g_relation_new (gint);
/* /usr/include/glib-2.0/glib/grel.h:72:NC */ extern void g_relation_destroy (GRelation *);
/* /usr/include/glib-2.0/glib/grel.h:73:NC */ extern void g_relation_index (GRelation *, gint, GHashFunc, GEqualFunc);
/* /usr/include/glib-2.0/glib/grel.h:77:NC */ extern void g_relation_insert (GRelation *, ...);
/* /usr/include/glib-2.0/glib/grel.h:79:NC */ extern gint g_relation_delete (GRelation *, gconstpointer, gint);
/* /usr/include/glib-2.0/glib/grel.h:82:NC */ extern GTuples *g_relation_select (GRelation *, gconstpointer, gint);
/* /usr/include/glib-2.0/glib/grel.h:85:NC */ extern gint g_relation_count (GRelation *, gconstpointer, gint);
/* /usr/include/glib-2.0/glib/grel.h:88:NC */ extern gboolean g_relation_exists (GRelation *, ...);
/* /usr/include/glib-2.0/glib/grel.h:90:NC */ extern void g_relation_print (GRelation *);
/* /usr/include/glib-2.0/glib/grel.h:92:NC */ extern void g_tuples_destroy (GTuples *);
/* /usr/include/glib-2.0/glib/grel.h:93:NC */ extern gpointer g_tuples_index (GTuples *, gint, gint);
/* /usr/include/glib-2.0/glib/gregex.h:176:NC */ extern GQuark g_regex_error_quark (void);
/* /usr/include/glib-2.0/glib/gregex.h:354:NC */ extern GRegex *g_regex_new (const gchar *, GRegexCompileFlags, GRegexMatchFlags, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:358:NC */ extern GRegex *g_regex_ref (GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:359:NC */ extern void g_regex_unref (GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:360:NC */ extern const gchar *g_regex_get_pattern (const GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:361:NC */ extern gint g_regex_get_max_backref (const GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:362:NC */ extern gint g_regex_get_capture_count (const GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:363:NC */ extern gint g_regex_get_string_number (const GRegex *, const gchar *);
/* /usr/include/glib-2.0/glib/gregex.h:365:NC */ extern gchar *g_regex_escape_string (const gchar *, gint);
/* /usr/include/glib-2.0/glib/gregex.h:367:NC */ extern gchar *g_regex_escape_nul (const gchar *, gint);
/* /usr/include/glib-2.0/glib/gregex.h:370:NC */ extern GRegexCompileFlags g_regex_get_compile_flags (const GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:371:NC */ extern GRegexMatchFlags g_regex_get_match_flags (const GRegex *);
/* /usr/include/glib-2.0/glib/gregex.h:374:NC */ extern gboolean g_regex_match_simple (const gchar *, const gchar *, GRegexCompileFlags, GRegexMatchFlags);
/* /usr/include/glib-2.0/glib/gregex.h:378:NC */ extern gboolean g_regex_match (const GRegex *, const gchar *, GRegexMatchFlags, GMatchInfo **);
/* /usr/include/glib-2.0/glib/gregex.h:382:NC */ extern gboolean g_regex_match_full (const GRegex *, const gchar *, gssize, gint, GRegexMatchFlags, GMatchInfo **, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:389:NC */ extern gboolean g_regex_match_all (const GRegex *, const gchar *, GRegexMatchFlags, GMatchInfo **);
/* /usr/include/glib-2.0/glib/gregex.h:393:NC */ extern gboolean g_regex_match_all_full (const GRegex *, const gchar *, gssize, gint, GRegexMatchFlags, GMatchInfo **, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:402:NC */ extern gchar **g_regex_split_simple (const gchar *, const gchar *, GRegexCompileFlags, GRegexMatchFlags);
/* /usr/include/glib-2.0/glib/gregex.h:406:NC */ extern gchar **g_regex_split (const GRegex *, const gchar *, GRegexMatchFlags);
/* /usr/include/glib-2.0/glib/gregex.h:409:NC */ extern gchar **g_regex_split_full (const GRegex *, const gchar *, gssize, gint, GRegexMatchFlags, gint, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:418:NC */ extern gchar *g_regex_replace (const GRegex *, const gchar *, gssize, gint, const gchar *, GRegexMatchFlags, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:425:NC */ extern gchar *g_regex_replace_literal (const GRegex *, const gchar *, gssize, gint, const gchar *, GRegexMatchFlags, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:432:NC */ extern gchar *g_regex_replace_eval (const GRegex *, const gchar *, gssize, gint, GRegexMatchFlags, GRegexEvalCallback, gpointer, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:440:NC */ extern gboolean g_regex_check_replacement (const gchar *, gboolean *, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:445:NC */ extern GRegex *g_match_info_get_regex (const GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:446:NC */ extern const gchar *g_match_info_get_string (const GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:448:NC */ extern GMatchInfo *g_match_info_ref (GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:449:NC */ extern void g_match_info_unref (GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:450:NC */ extern void g_match_info_free (GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:451:NC */ extern gboolean g_match_info_next (GMatchInfo *, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:453:NC */ extern gboolean g_match_info_matches (const GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:454:NC */ extern gint g_match_info_get_match_count (const GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:455:NC */ extern gboolean g_match_info_is_partial_match (const GMatchInfo *);
/* /usr/include/glib-2.0/glib/gregex.h:456:NC */ extern gchar *g_match_info_expand_references (const GMatchInfo *, const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gregex.h:459:NC */ extern gchar *g_match_info_fetch (const GMatchInfo *, gint);
/* /usr/include/glib-2.0/glib/gregex.h:461:NC */ extern gboolean g_match_info_fetch_pos (const GMatchInfo *, gint, gint *, gint *);
/* /usr/include/glib-2.0/glib/gregex.h:465:NC */ extern gchar *g_match_info_fetch_named (const GMatchInfo *, const gchar *);
/* /usr/include/glib-2.0/glib/gregex.h:467:NC */ extern gboolean g_match_info_fetch_named_pos (const GMatchInfo *, const gchar *, gint *, gint *);
/* /usr/include/glib-2.0/glib/gregex.h:471:NC */ extern gchar **g_match_info_fetch_all (const GMatchInfo *);
/* /usr/include/glib-2.0/glib/gscanner.h:209:NC */ extern GScanner *g_scanner_new (const GScannerConfig *);
/* /usr/include/glib-2.0/glib/gscanner.h:210:NC */ extern void g_scanner_destroy (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:211:NC */ extern void g_scanner_input_file (GScanner *, gint);
/* /usr/include/glib-2.0/glib/gscanner.h:213:NC */ extern void g_scanner_sync_file_offset (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:214:NC */ extern void g_scanner_input_text (GScanner *, const gchar *, guint);
/* /usr/include/glib-2.0/glib/gscanner.h:217:NC */ extern GTokenType g_scanner_get_next_token (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:218:NC */ extern GTokenType g_scanner_peek_next_token (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:219:NC */ extern GTokenType g_scanner_cur_token (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:220:NC */ extern GTokenValue g_scanner_cur_value (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:221:NC */ extern guint g_scanner_cur_line (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:222:NC */ extern guint g_scanner_cur_position (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:223:NC */ extern gboolean g_scanner_eof (GScanner *);
/* /usr/include/glib-2.0/glib/gscanner.h:224:NC */ extern guint g_scanner_set_scope (GScanner *, guint);
/* /usr/include/glib-2.0/glib/gscanner.h:226:NC */ extern void g_scanner_scope_add_symbol (GScanner *, guint, const gchar *, gpointer);
/* /usr/include/glib-2.0/glib/gscanner.h:230:NC */ extern void g_scanner_scope_remove_symbol (GScanner *, guint, const gchar *);
/* /usr/include/glib-2.0/glib/gscanner.h:233:NC */ extern gpointer g_scanner_scope_lookup_symbol (GScanner *, guint, const gchar *);
/* /usr/include/glib-2.0/glib/gscanner.h:236:NC */ extern void g_scanner_scope_foreach_symbol (GScanner *, guint, GHFunc, gpointer);
/* /usr/include/glib-2.0/glib/gscanner.h:240:NC */ extern gpointer g_scanner_lookup_symbol (GScanner *, const gchar *);
/* /usr/include/glib-2.0/glib/gscanner.h:242:NC */ extern void g_scanner_unexp_token (GScanner *, GTokenType, const gchar *, const gchar *, const gchar *, const gchar *, gint);
/* /usr/include/glib-2.0/glib/gscanner.h:249:NC */ extern void g_scanner_error (GScanner *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gscanner.h:252:NC */ extern void g_scanner_warn (GScanner *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gsequence.h:41:NC */ extern GSequence *g_sequence_new (GDestroyNotify);
/* /usr/include/glib-2.0/glib/gsequence.h:42:NC */ extern void g_sequence_free (GSequence *);
/* /usr/include/glib-2.0/glib/gsequence.h:43:NC */ extern gint g_sequence_get_length (GSequence *);
/* /usr/include/glib-2.0/glib/gsequence.h:44:NC */ extern void g_sequence_foreach (GSequence *, GFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:47:NC */ extern void g_sequence_foreach_range (GSequenceIter *, GSequenceIter *, GFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:51:NC */ extern void g_sequence_sort (GSequence *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:54:NC */ extern void g_sequence_sort_iter (GSequence *, GSequenceIterCompareFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:60:NC */ extern GSequenceIter *g_sequence_get_begin_iter (GSequence *);
/* /usr/include/glib-2.0/glib/gsequence.h:61:NC */ extern GSequenceIter *g_sequence_get_end_iter (GSequence *);
/* /usr/include/glib-2.0/glib/gsequence.h:62:NC */ extern GSequenceIter *g_sequence_get_iter_at_pos (GSequence *, gint);
/* /usr/include/glib-2.0/glib/gsequence.h:64:NC */ extern GSequenceIter *g_sequence_append (GSequence *, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:66:NC */ extern GSequenceIter *g_sequence_prepend (GSequence *, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:68:NC */ extern GSequenceIter *g_sequence_insert_before (GSequenceIter *, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:70:NC */ extern void g_sequence_move (GSequenceIter *, GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:72:NC */ extern void g_sequence_swap (GSequenceIter *, GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:74:NC */ extern GSequenceIter *g_sequence_insert_sorted (GSequence *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:78:NC */ extern GSequenceIter *g_sequence_insert_sorted_iter (GSequence *, gpointer, GSequenceIterCompareFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:82:NC */ extern void g_sequence_sort_changed (GSequenceIter *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:85:NC */ extern void g_sequence_sort_changed_iter (GSequenceIter *, GSequenceIterCompareFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:88:NC */ extern void g_sequence_remove (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:89:NC */ extern void g_sequence_remove_range (GSequenceIter *, GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:91:NC */ extern void g_sequence_move_range (GSequenceIter *, GSequenceIter *, GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:94:NC */ extern GSequenceIter *g_sequence_search (GSequence *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:98:NC */ extern GSequenceIter *g_sequence_search_iter (GSequence *, gpointer, GSequenceIterCompareFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:102:NC */ extern GSequenceIter *g_sequence_lookup (GSequence *, gpointer, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:106:NC */ extern GSequenceIter *g_sequence_lookup_iter (GSequence *, gpointer, GSequenceIterCompareFunc, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:113:NC */ extern gpointer g_sequence_get (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:114:NC */ extern void g_sequence_set (GSequenceIter *, gpointer);
/* /usr/include/glib-2.0/glib/gsequence.h:118:NC */ extern gboolean g_sequence_iter_is_begin (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:119:NC */ extern gboolean g_sequence_iter_is_end (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:120:NC */ extern GSequenceIter *g_sequence_iter_next (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:121:NC */ extern GSequenceIter *g_sequence_iter_prev (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:122:NC */ extern gint g_sequence_iter_get_position (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:123:NC */ extern GSequenceIter *g_sequence_iter_move (GSequenceIter *, gint);
/* /usr/include/glib-2.0/glib/gsequence.h:125:NC */ extern GSequence *g_sequence_iter_get_sequence (GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:129:NC */ extern gint g_sequence_iter_compare (GSequenceIter *, GSequenceIter *);
/* /usr/include/glib-2.0/glib/gsequence.h:131:NC */ extern GSequenceIter *g_sequence_range_get_midpoint (GSequenceIter *, GSequenceIter *);
/* /usr/include/glib-2.0/glib/gshell.h:43:NC */ extern GQuark g_shell_error_quark (void);
/* /usr/include/glib-2.0/glib/gshell.h:45:NC */ extern gchar *g_shell_quote (const gchar *);
/* /usr/include/glib-2.0/glib/gshell.h:46:NC */ extern gchar *g_shell_unquote (const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gshell.h:48:NC */ extern gboolean g_shell_parse_argv (const gchar *, gint *, gchar ***, GError **);
/* /usr/include/glib-2.0/glib/gspawn.h:158:NC */ extern GQuark g_spawn_error_quark (void);
/* /usr/include/glib-2.0/glib/gspawn.h:170:NC */ extern gboolean g_spawn_async (const gchar *, gchar **, gchar **, GSpawnFlags, GSpawnChildSetupFunc, gpointer, GPid *, GError **);
/* /usr/include/glib-2.0/glib/gspawn.h:183:NC */ extern gboolean g_spawn_async_with_pipes (const gchar *, gchar **, gchar **, GSpawnFlags, GSpawnChildSetupFunc, gpointer, GPid *, gint *, gint *, gint *, GError **);
/* /usr/include/glib-2.0/glib/gspawn.h:200:NC */ extern gboolean g_spawn_sync (const gchar *, gchar **, gchar **, GSpawnFlags, GSpawnChildSetupFunc, gpointer, gchar **, gchar **, gint *, GError **);
/* /usr/include/glib-2.0/glib/gspawn.h:211:NC */ extern gboolean g_spawn_command_line_sync (const gchar *, gchar **, gchar **, gint *, GError **);
/* /usr/include/glib-2.0/glib/gspawn.h:216:NC */ extern gboolean g_spawn_command_line_async (const gchar *, GError **);
/* /usr/include/glib-2.0/glib/gspawn.h:219:NC */ extern void g_spawn_close_pid (GPid);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:90:NC */ extern gchar g_ascii_tolower (gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:91:NC */ extern gchar g_ascii_toupper (gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:93:NC */ extern gint g_ascii_digit_value (gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:94:NC */ extern gint g_ascii_xdigit_value (gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:100:NC */ extern gchar *g_strdelimit (gchar *, const gchar *, gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:103:NC */ extern gchar *g_strcanon (gchar *, const gchar *, gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:106:NC */ extern const gchar *g_strerror (gint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:107:NC */ extern const gchar *g_strsignal (gint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:108:NC */ extern gchar *g_strreverse (gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:109:NC */ extern gsize g_strlcpy (gchar *, const gchar *, gsize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:112:NC */ extern gsize g_strlcat (gchar *, const gchar *, gsize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:115:NC */ extern gchar *g_strstr_len (const gchar *, gssize, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:118:NC */ extern gchar *g_strrstr (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:120:NC */ extern gchar *g_strrstr_len (const gchar *, gssize, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:124:NC */ extern gboolean g_str_has_suffix (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:126:NC */ extern gboolean g_str_has_prefix (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:131:NC */ extern gdouble g_strtod (const gchar *, gchar **);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:133:NC */ extern gdouble g_ascii_strtod (const gchar *, gchar **);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:135:NC */ extern guint64 g_ascii_strtoull (const gchar *, gchar **, guint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:138:NC */ extern gint64 g_ascii_strtoll (const gchar *, gchar **, guint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:145:NC */ extern gchar *g_ascii_dtostr (gchar *, gint, gdouble);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:148:NC */ extern gchar *g_ascii_formatd (gchar *, gint, const gchar *, gdouble);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:154:NC */ extern gchar *g_strchug (gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:156:NC */ extern gchar *g_strchomp (gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:160:NC */ extern gint g_ascii_strcasecmp (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:162:NC */ extern gint g_ascii_strncasecmp (const gchar *, const gchar *, gsize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:165:NC */ extern gchar *g_ascii_strdown (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:167:NC */ extern gchar *g_ascii_strup (const gchar *, gssize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:177:NC */ extern gint g_strcasecmp (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:179:NC */ extern gint g_strncasecmp (const gchar *, const gchar *, guint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:182:NC */ extern gchar *g_strdown (gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:183:NC */ extern gchar *g_strup (gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:190:NC */ extern gchar *g_strdup (const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:191:NC */ extern gchar *g_strdup_printf (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:193:NC */ extern gchar *g_strdup_vprintf (const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:195:NC */ extern gchar *g_strndup (const gchar *, gsize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:197:NC */ extern gchar *g_strnfill (gsize, gchar);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:199:NC */ extern gchar *g_strconcat (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:201:NC */ extern gchar *g_strjoin (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:208:NC */ extern gchar *g_strcompress (const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:218:NC */ extern gchar *g_strescape (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:221:NC */ extern gpointer g_memdup (gconstpointer, guint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:233:NC */ extern gchar **g_strsplit (const gchar *, const gchar *, gint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:236:NC */ extern gchar **g_strsplit_set (const gchar *, const gchar *, gint);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:239:NC */ extern gchar *g_strjoinv (const gchar *, gchar **);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:241:NC */ extern void g_strfreev (gchar **);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:242:NC */ extern gchar **g_strdupv (gchar **);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:243:NC */ extern guint g_strv_length (gchar **);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:245:NC */ extern gchar *g_stpcpy (gchar *, const char *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:248:NC */ extern const gchar *g_strip_context (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:251:NC */ extern const gchar *g_dgettext (const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:253:NC */ extern const gchar *g_dcgettext (const gchar *, const gchar *, int);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:256:NC */ extern const gchar *g_dngettext (const gchar *, const gchar *, const gchar *, gulong);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:260:NC */ extern const gchar *g_dpgettext (const gchar *, const gchar *, gsize);
/* /usr/include/glib-2.0/glib/gstrfuncs.h:263:NC */ extern const gchar *g_dpgettext2 (const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/glib/gtestutils.h:79:NC */ extern int g_strcmp0 (const char *, const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:83:NC */ extern void g_test_minimized_result (double, const char *, ...);
/* /usr/include/glib-2.0/glib/gtestutils.h:86:NC */ extern void g_test_maximized_result (double, const char *, ...);
/* /usr/include/glib-2.0/glib/gtestutils.h:91:NC */ extern void g_test_init (int *, char ***, ...);
/* /usr/include/glib-2.0/glib/gtestutils.h:102:NC */ extern int g_test_run (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:104:NC */ extern void g_test_add_func (const char *, GTestFunc);
/* /usr/include/glib-2.0/glib/gtestutils.h:107:NC */ extern void g_test_add_data_func (const char *, gconstpointer, GTestDataFunc);
/* /usr/include/glib-2.0/glib/gtestutils.h:111:NC */ extern void g_test_fail (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:127:NC */ extern void g_test_message (const char *, ...);
/* /usr/include/glib-2.0/glib/gtestutils.h:129:NC */ extern void g_test_bug_base (const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:130:NC */ extern void g_test_bug (const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:132:NC */ extern void g_test_timer_start (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:133:NC */ extern double g_test_timer_elapsed (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:134:NC */ extern double g_test_timer_last (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:137:NC */ extern void g_test_queue_free (gpointer);
/* /usr/include/glib-2.0/glib/gtestutils.h:138:NC */ extern void g_test_queue_destroy (GDestroyNotify, gpointer);
/* /usr/include/glib-2.0/glib/gtestutils.h:148:NC */ extern gboolean g_test_trap_fork (guint64, GTestTrapFlags);
/* /usr/include/glib-2.0/glib/gtestutils.h:150:NC */ extern gboolean g_test_trap_has_passed (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:151:NC */ extern gboolean g_test_trap_reached_timeout (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:161:NC */ extern gint32 g_test_rand_int (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:162:NC */ extern gint32 g_test_rand_int_range (gint32, gint32);
/* /usr/include/glib-2.0/glib/gtestutils.h:164:NC */ extern double g_test_rand_double (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:165:NC */ extern double g_test_rand_double_range (double, double);
/* /usr/include/glib-2.0/glib/gtestutils.h:169:NC */ extern GTestCase *g_test_create_case (const char *, gsize, gconstpointer, GTestFixtureFunc, GTestFixtureFunc, GTestFixtureFunc);
/* /usr/include/glib-2.0/glib/gtestutils.h:175:NC */ extern GTestSuite *g_test_create_suite (const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:176:NC */ extern GTestSuite *g_test_get_root (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:177:NC */ extern void g_test_suite_add (GTestSuite *, GTestCase *);
/* /usr/include/glib-2.0/glib/gtestutils.h:179:NC */ extern void g_test_suite_add_suite (GTestSuite *, GTestSuite *);
/* /usr/include/glib-2.0/glib/gtestutils.h:181:NC */ extern int g_test_run_suite (GTestSuite *);
/* /usr/include/glib-2.0/glib/gtestutils.h:184:NC */ extern void g_test_trap_assertions (const char *, const char *, int, const char *, guint64, const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:190:NC */ extern void g_assertion_message (const char *, const char *, int, const char *, const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:195:NC */ extern void g_assertion_message_expr (const char *, const char *, int, const char *, const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:200:NC */ extern void g_assertion_message_cmpstr (const char *, const char *, int, const char *, const char *, const char *, const char *, const char *);
/* /usr/include/glib-2.0/glib/gtestutils.h:208:NC */ extern void g_assertion_message_cmpnum (const char *, const char *, int, const char *, const char *, long double, const char *, long double, char);
/* /usr/include/glib-2.0/glib/gtestutils.h:217:NC */ extern void g_assertion_message_error (const char *, const char *, int, const char *, const char *, const GError *, GQuark, int);
/* /usr/include/glib-2.0/glib/gtestutils.h:225:NC */ extern void g_test_add_vtable (const char *, gsize, gconstpointer, GTestFixtureFunc, GTestFixtureFunc, GTestFixtureFunc);
/* /usr/include/glib-2.0/glib/gtestutils.h:267:NC */ extern const char *g_test_log_type_name (GTestLogType);
/* /usr/include/glib-2.0/glib/gtestutils.h:268:NC */ extern GTestLogBuffer *g_test_log_buffer_new (void);
/* /usr/include/glib-2.0/glib/gtestutils.h:269:NC */ extern void g_test_log_buffer_free (GTestLogBuffer *);
/* /usr/include/glib-2.0/glib/gtestutils.h:270:NC */ extern void g_test_log_buffer_push (GTestLogBuffer *, guint, const guint8 *);
/* /usr/include/glib-2.0/glib/gtestutils.h:273:NC */ extern GTestLogMsg *g_test_log_buffer_pop (GTestLogBuffer *);
/* /usr/include/glib-2.0/glib/gtestutils.h:274:NC */ extern void g_test_log_msg_free (GTestLogMsg *);
/* /usr/include/glib-2.0/glib/gtestutils.h:294:NC */ extern void g_test_log_set_fatal_handler (GTestLogFatalFunc, gpointer);
/* /usr/include/glib-2.0/glib/gthreadpool.h:50:NC */ extern GThreadPool *g_thread_pool_new (GFunc, gpointer, gint, gboolean, GError **);
/* /usr/include/glib-2.0/glib/gthreadpool.h:55:NC */ extern void g_thread_pool_push (GThreadPool *, gpointer, GError **);
/* /usr/include/glib-2.0/glib/gthreadpool.h:58:NC */ extern void g_thread_pool_set_max_threads (GThreadPool *, gint, GError **);
/* /usr/include/glib-2.0/glib/gthreadpool.h:61:NC */ extern gint g_thread_pool_get_max_threads (GThreadPool *);
/* /usr/include/glib-2.0/glib/gthreadpool.h:62:NC */ extern guint g_thread_pool_get_num_threads (GThreadPool *);
/* /usr/include/glib-2.0/glib/gthreadpool.h:63:NC */ extern guint g_thread_pool_unprocessed (GThreadPool *);
/* /usr/include/glib-2.0/glib/gthreadpool.h:64:NC */ extern void g_thread_pool_free (GThreadPool *, gboolean, gboolean);
/* /usr/include/glib-2.0/glib/gthreadpool.h:67:NC */ extern void g_thread_pool_set_max_unused_threads (gint);
/* /usr/include/glib-2.0/glib/gthreadpool.h:68:NC */ extern gint g_thread_pool_get_max_unused_threads (void);
/* /usr/include/glib-2.0/glib/gthreadpool.h:69:NC */ extern guint g_thread_pool_get_num_unused_threads (void);
/* /usr/include/glib-2.0/glib/gthreadpool.h:70:NC */ extern void g_thread_pool_stop_unused_threads (void);
/* /usr/include/glib-2.0/glib/gthreadpool.h:71:NC */ extern void g_thread_pool_set_sort_function (GThreadPool *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gthreadpool.h:74:NC */ extern void g_thread_pool_set_max_idle_time (guint);
/* /usr/include/glib-2.0/glib/gthreadpool.h:75:NC */ extern guint g_thread_pool_get_max_idle_time (void);
/* /usr/include/glib-2.0/glib/gtimer.h:46:NC */ extern GTimer *g_timer_new (void);
/* /usr/include/glib-2.0/glib/gtimer.h:47:NC */ extern void g_timer_destroy (GTimer *);
/* /usr/include/glib-2.0/glib/gtimer.h:48:NC */ extern void g_timer_start (GTimer *);
/* /usr/include/glib-2.0/glib/gtimer.h:49:NC */ extern void g_timer_stop (GTimer *);
/* /usr/include/glib-2.0/glib/gtimer.h:50:NC */ extern void g_timer_reset (GTimer *);
/* /usr/include/glib-2.0/glib/gtimer.h:51:NC */ extern void g_timer_continue (GTimer *);
/* /usr/include/glib-2.0/glib/gtimer.h:52:NC */ extern gdouble g_timer_elapsed (GTimer *, gulong *);
/* /usr/include/glib-2.0/glib/gtimer.h:55:NC */ extern void g_usleep (gulong);
/* /usr/include/glib-2.0/glib/gtimer.h:57:NC */ extern void g_time_val_add (GTimeVal *, glong);
/* /usr/include/glib-2.0/glib/gtimer.h:59:NC */ extern gboolean g_time_val_from_iso8601 (const gchar *, GTimeVal *);
/* /usr/include/glib-2.0/glib/gtimer.h:61:NC */ extern gchar *g_time_val_to_iso8601 (GTimeVal *);
/* /usr/include/glib-2.0/glib/gtree.h:46:NC */ extern GTree *g_tree_new (GCompareFunc);
/* /usr/include/glib-2.0/glib/gtree.h:47:NC */ extern GTree *g_tree_new_with_data (GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/glib/gtree.h:49:NC */ extern GTree *g_tree_new_full (GCompareDataFunc, gpointer, GDestroyNotify, GDestroyNotify);
/* /usr/include/glib-2.0/glib/gtree.h:53:NC */ extern GTree *g_tree_ref (GTree *);
/* /usr/include/glib-2.0/glib/gtree.h:54:NC */ extern void g_tree_unref (GTree *);
/* /usr/include/glib-2.0/glib/gtree.h:55:NC */ extern void g_tree_destroy (GTree *);
/* /usr/include/glib-2.0/glib/gtree.h:56:NC */ extern void g_tree_insert (GTree *, gpointer, gpointer);
/* /usr/include/glib-2.0/glib/gtree.h:59:NC */ extern void g_tree_replace (GTree *, gpointer, gpointer);
/* /usr/include/glib-2.0/glib/gtree.h:62:NC */ extern gboolean g_tree_remove (GTree *, gconstpointer);
/* /usr/include/glib-2.0/glib/gtree.h:64:NC */ extern gboolean g_tree_steal (GTree *, gconstpointer);
/* /usr/include/glib-2.0/glib/gtree.h:66:NC */ extern gpointer g_tree_lookup (GTree *, gconstpointer);
/* /usr/include/glib-2.0/glib/gtree.h:68:NC */ extern gboolean g_tree_lookup_extended (GTree *, gconstpointer, gpointer *, gpointer *);
/* /usr/include/glib-2.0/glib/gtree.h:72:NC */ extern void g_tree_foreach (GTree *, GTraverseFunc, gpointer);
/* /usr/include/glib-2.0/glib/gtree.h:77:NC */ extern void g_tree_traverse (GTree *, GTraverseFunc, GTraverseType, gpointer);
/* /usr/include/glib-2.0/glib/gtree.h:83:NC */ extern gpointer g_tree_search (GTree *, GCompareFunc, gconstpointer);
/* /usr/include/glib-2.0/glib/gtree.h:86:NC */ extern gint g_tree_height (GTree *);
/* /usr/include/glib-2.0/glib/gtree.h:87:NC */ extern gint g_tree_nnodes (GTree *);
/* /usr/include/glib-2.0/glib/gurifuncs.h:69:NC */ extern char *g_uri_unescape_string (const char *, const char *);
/* /usr/include/glib-2.0/glib/gurifuncs.h:71:NC */ extern char *g_uri_unescape_segment (const char *, const char *, const char *);
/* /usr/include/glib-2.0/glib/gurifuncs.h:74:NC */ extern char *g_uri_parse_scheme (const char *);
/* /usr/include/glib-2.0/glib/gurifuncs.h:75:NC */ extern char *g_uri_escape_string (const char *, const char *, gboolean);
/* /usr/include/glib-2.0/glib/gvarianttype.h:296:NC */ extern gboolean g_variant_type_string_is_valid (const gchar *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:297:NC */ extern gboolean g_variant_type_string_scan (const gchar *, const gchar *, const gchar **);
/* /usr/include/glib-2.0/glib/gvarianttype.h:302:NC */ extern void g_variant_type_free (GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:303:NC */ extern GVariantType *g_variant_type_copy (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:304:NC */ extern GVariantType *g_variant_type_new (const gchar *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:307:NC */ extern gsize g_variant_type_get_string_length (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:308:NC */ extern const gchar *g_variant_type_peek_string (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:309:NC */ extern gchar *g_variant_type_dup_string (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:312:NC */ extern gboolean g_variant_type_is_definite (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:313:NC */ extern gboolean g_variant_type_is_container (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:314:NC */ extern gboolean g_variant_type_is_basic (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:315:NC */ extern gboolean g_variant_type_is_maybe (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:316:NC */ extern gboolean g_variant_type_is_array (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:317:NC */ extern gboolean g_variant_type_is_tuple (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:318:NC */ extern gboolean g_variant_type_is_dict_entry (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:319:NC */ extern gboolean g_variant_type_is_variant (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:322:NC */ extern guint g_variant_type_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/gvarianttype.h:323:NC */ extern gboolean g_variant_type_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/gvarianttype.h:327:NC */ extern gboolean g_variant_type_is_subtype_of (const GVariantType *, const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:331:NC */ extern const GVariantType *g_variant_type_element (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:332:NC */ extern const GVariantType *g_variant_type_first (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:333:NC */ extern const GVariantType *g_variant_type_next (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:334:NC */ extern gsize g_variant_type_n_items (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:335:NC */ extern const GVariantType *g_variant_type_key (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:336:NC */ extern const GVariantType *g_variant_type_value (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:339:NC */ extern GVariantType *g_variant_type_new_array (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:340:NC */ extern GVariantType *g_variant_type_new_maybe (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:341:NC */ extern GVariantType *g_variant_type_new_tuple (const GVariantType *const *, gint);
/* /usr/include/glib-2.0/glib/gvarianttype.h:343:NC */ extern GVariantType *g_variant_type_new_dict_entry (const GVariantType *, const GVariantType *);
/* /usr/include/glib-2.0/glib/gvarianttype.h:347:NC */ extern const GVariantType *g_variant_type_checked_ (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:59:NC */ extern void g_variant_unref (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:60:NC */ extern GVariant *g_variant_ref (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:61:NC */ extern GVariant *g_variant_ref_sink (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:62:NC */ extern gboolean g_variant_is_floating (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:63:NC */ extern GVariant *g_variant_take_ref (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:65:NC */ extern const GVariantType *g_variant_get_type (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:66:NC */ extern const gchar *g_variant_get_type_string (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:67:NC */ extern gboolean g_variant_is_of_type (GVariant *, const GVariantType *);
/* /usr/include/glib-2.0/glib/gvariant.h:69:NC */ extern gboolean g_variant_is_container (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:70:NC */ extern GVariantClass g_variant_classify (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:71:NC */ extern GVariant *g_variant_new_boolean (gboolean);
/* /usr/include/glib-2.0/glib/gvariant.h:72:NC */ extern GVariant *g_variant_new_byte (guchar);
/* /usr/include/glib-2.0/glib/gvariant.h:73:NC */ extern GVariant *g_variant_new_int16 (gint16);
/* /usr/include/glib-2.0/glib/gvariant.h:74:NC */ extern GVariant *g_variant_new_uint16 (guint16);
/* /usr/include/glib-2.0/glib/gvariant.h:75:NC */ extern GVariant *g_variant_new_int32 (gint32);
/* /usr/include/glib-2.0/glib/gvariant.h:76:NC */ extern GVariant *g_variant_new_uint32 (guint32);
/* /usr/include/glib-2.0/glib/gvariant.h:77:NC */ extern GVariant *g_variant_new_int64 (gint64);
/* /usr/include/glib-2.0/glib/gvariant.h:78:NC */ extern GVariant *g_variant_new_uint64 (guint64);
/* /usr/include/glib-2.0/glib/gvariant.h:79:NC */ extern GVariant *g_variant_new_handle (gint32);
/* /usr/include/glib-2.0/glib/gvariant.h:80:NC */ extern GVariant *g_variant_new_double (gdouble);
/* /usr/include/glib-2.0/glib/gvariant.h:81:NC */ extern GVariant *g_variant_new_string (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:82:NC */ extern GVariant *g_variant_new_object_path (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:83:NC */ extern gboolean g_variant_is_object_path (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:84:NC */ extern GVariant *g_variant_new_signature (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:85:NC */ extern gboolean g_variant_is_signature (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:86:NC */ extern GVariant *g_variant_new_variant (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:87:NC */ extern GVariant *g_variant_new_strv (const gchar *const *, gssize);
/* /usr/include/glib-2.0/glib/gvariant.h:89:NC */ extern GVariant *g_variant_new_objv (const gchar *const *, gssize);
/* /usr/include/glib-2.0/glib/gvariant.h:91:NC */ extern GVariant *g_variant_new_bytestring (const gchar *);
/* /usr/include/glib-2.0/glib/gvariant.h:92:NC */ extern GVariant *g_variant_new_bytestring_array (const gchar *const *, gssize);
/* /usr/include/glib-2.0/glib/gvariant.h:95:NC */ extern gboolean g_variant_get_boolean (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:96:NC */ extern guchar g_variant_get_byte (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:97:NC */ extern gint16 g_variant_get_int16 (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:98:NC */ extern guint16 g_variant_get_uint16 (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:99:NC */ extern gint32 g_variant_get_int32 (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:100:NC */ extern guint32 g_variant_get_uint32 (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:101:NC */ extern gint64 g_variant_get_int64 (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:102:NC */ extern guint64 g_variant_get_uint64 (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:103:NC */ extern gint32 g_variant_get_handle (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:104:NC */ extern gdouble g_variant_get_double (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:105:NC */ extern GVariant *g_variant_get_variant (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:106:NC */ extern const gchar *g_variant_get_string (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:108:NC */ extern gchar *g_variant_dup_string (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:110:NC */ extern const gchar **g_variant_get_strv (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:112:NC */ extern gchar **g_variant_dup_strv (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:114:NC */ extern const gchar **g_variant_get_objv (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:116:NC */ extern gchar **g_variant_dup_objv (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:118:NC */ extern const gchar *g_variant_get_bytestring (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:119:NC */ extern gchar *g_variant_dup_bytestring (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:121:NC */ extern const gchar **g_variant_get_bytestring_array (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:123:NC */ extern gchar **g_variant_dup_bytestring_array (GVariant *, gsize *);
/* /usr/include/glib-2.0/glib/gvariant.h:126:NC */ extern GVariant *g_variant_new_maybe (const GVariantType *, GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:128:NC */ extern GVariant *g_variant_new_array (const GVariantType *, GVariant *const *, gsize);
/* /usr/include/glib-2.0/glib/gvariant.h:131:NC */ extern GVariant *g_variant_new_tuple (GVariant *const *, gsize);
/* /usr/include/glib-2.0/glib/gvariant.h:133:NC */ extern GVariant *g_variant_new_dict_entry (GVariant *, GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:136:NC */ extern GVariant *g_variant_get_maybe (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:137:NC */ extern gsize g_variant_n_children (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:138:NC */ extern void g_variant_get_child (GVariant *, gsize, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:142:NC */ extern GVariant *g_variant_get_child_value (GVariant *, gsize);
/* /usr/include/glib-2.0/glib/gvariant.h:144:NC */ extern gboolean g_variant_lookup (GVariant *, const gchar *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:148:NC */ extern GVariant *g_variant_lookup_value (GVariant *, const gchar *, const GVariantType *);
/* /usr/include/glib-2.0/glib/gvariant.h:151:NC */ extern gconstpointer g_variant_get_fixed_array (GVariant *, gsize *, gsize);
/* /usr/include/glib-2.0/glib/gvariant.h:155:NC */ extern gsize g_variant_get_size (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:156:NC */ extern gconstpointer g_variant_get_data (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:157:NC */ extern void g_variant_store (GVariant *, gpointer);
/* /usr/include/glib-2.0/glib/gvariant.h:160:NC */ extern gchar *g_variant_print (GVariant *, gboolean);
/* /usr/include/glib-2.0/glib/gvariant.h:162:NC */ extern GString *g_variant_print_string (GVariant *, GString *, gboolean);
/* /usr/include/glib-2.0/glib/gvariant.h:166:NC */ extern guint g_variant_hash (gconstpointer);
/* /usr/include/glib-2.0/glib/gvariant.h:167:NC */ extern gboolean g_variant_equal (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/glib/gvariant.h:170:NC */ extern GVariant *g_variant_get_normal_form (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:171:NC */ extern gboolean g_variant_is_normal_form (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:172:NC */ extern GVariant *g_variant_byteswap (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:173:NC */ extern GVariant *g_variant_new_from_data (const GVariantType *, gconstpointer, gsize, gboolean, GDestroyNotify, gpointer);
/* /usr/include/glib-2.0/glib/gvariant.h:186:NC */ extern GVariantIter *g_variant_iter_new (GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:187:NC */ extern gsize g_variant_iter_init (GVariantIter *, GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:189:NC */ extern GVariantIter *g_variant_iter_copy (GVariantIter *);
/* /usr/include/glib-2.0/glib/gvariant.h:190:NC */ extern gsize g_variant_iter_n_children (GVariantIter *);
/* /usr/include/glib-2.0/glib/gvariant.h:191:NC */ extern void g_variant_iter_free (GVariantIter *);
/* /usr/include/glib-2.0/glib/gvariant.h:192:NC */ extern GVariant *g_variant_iter_next_value (GVariantIter *);
/* /usr/include/glib-2.0/glib/gvariant.h:193:NC */ extern gboolean g_variant_iter_next (GVariantIter *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:196:NC */ extern gboolean g_variant_iter_loop (GVariantIter *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:230:NC */ extern GQuark g_variant_parser_get_error_quark (void);
/* /usr/include/glib-2.0/glib/gvariant.h:232:NC */ extern GVariantBuilder *g_variant_builder_new (const GVariantType *);
/* /usr/include/glib-2.0/glib/gvariant.h:233:NC */ extern void g_variant_builder_unref (GVariantBuilder *);
/* /usr/include/glib-2.0/glib/gvariant.h:234:NC */ extern GVariantBuilder *g_variant_builder_ref (GVariantBuilder *);
/* /usr/include/glib-2.0/glib/gvariant.h:235:NC */ extern void g_variant_builder_init (GVariantBuilder *, const GVariantType *);
/* /usr/include/glib-2.0/glib/gvariant.h:237:NC */ extern GVariant *g_variant_builder_end (GVariantBuilder *);
/* /usr/include/glib-2.0/glib/gvariant.h:238:NC */ extern void g_variant_builder_clear (GVariantBuilder *);
/* /usr/include/glib-2.0/glib/gvariant.h:239:NC */ extern void g_variant_builder_open (GVariantBuilder *, const GVariantType *);
/* /usr/include/glib-2.0/glib/gvariant.h:241:NC */ extern void g_variant_builder_close (GVariantBuilder *);
/* /usr/include/glib-2.0/glib/gvariant.h:242:NC */ extern void g_variant_builder_add_value (GVariantBuilder *, GVariant *);
/* /usr/include/glib-2.0/glib/gvariant.h:244:NC */ extern void g_variant_builder_add (GVariantBuilder *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:247:NC */ extern void g_variant_builder_add_parsed (GVariantBuilder *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:251:NC */ extern GVariant *g_variant_new (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:253:NC */ extern void g_variant_get (GVariant *, const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:256:NC */ extern GVariant *g_variant_new_va (const gchar *, const gchar **, va_list (*));
/* /usr/include/glib-2.0/glib/gvariant.h:259:NC */ extern void g_variant_get_va (GVariant *, const gchar *, const gchar **, va_list (*));
/* /usr/include/glib-2.0/glib/gvariant.h:265:NC */ extern GVariant *g_variant_parse (const GVariantType *, const gchar *, const gchar *, const gchar **, GError **);
/* /usr/include/glib-2.0/glib/gvariant.h:270:NC */ extern GVariant *g_variant_new_parsed (const gchar *, ...);
/* /usr/include/glib-2.0/glib/gvariant.h:272:NC */ extern GVariant *g_variant_new_parsed_va (const gchar *, va_list (*));
/* /usr/include/glib-2.0/glib/gvariant.h:275:NC */ extern gint g_variant_compare (gconstpointer, gconstpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:667:NC */ extern void g_type_init (void);
/* /usr/include/glib-2.0/gobject/gtype.h:668:NC */ extern void g_type_init_with_debug_flags (GTypeDebugFlags);
/* /usr/include/glib-2.0/gobject/gtype.h:669:NC */ extern const gchar *g_type_name (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:670:NC */ extern GQuark g_type_qname (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:671:NC */ extern GType g_type_from_name (const gchar *);
/* /usr/include/glib-2.0/gobject/gtype.h:672:NC */ extern GType g_type_parent (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:673:NC */ extern guint g_type_depth (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:674:NC */ extern GType g_type_next_base (GType, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:676:NC */ extern gboolean g_type_is_a (GType, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:678:NC */ extern gpointer g_type_class_ref (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:679:NC */ extern gpointer g_type_class_peek (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:680:NC */ extern gpointer g_type_class_peek_static (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:681:NC */ extern void g_type_class_unref (gpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:682:NC */ extern gpointer g_type_class_peek_parent (gpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:683:NC */ extern gpointer g_type_interface_peek (gpointer, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:685:NC */ extern gpointer g_type_interface_peek_parent (gpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:687:NC */ extern gpointer g_type_default_interface_ref (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:688:NC */ extern gpointer g_type_default_interface_peek (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:689:NC */ extern void g_type_default_interface_unref (gpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:692:NC */ extern GType *g_type_children (GType, guint *);
/* /usr/include/glib-2.0/gobject/gtype.h:694:NC */ extern GType *g_type_interfaces (GType, guint *);
/* /usr/include/glib-2.0/gobject/gtype.h:698:NC */ extern void g_type_set_qdata (GType, GQuark, gpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:701:NC */ extern gpointer g_type_get_qdata (GType, GQuark);
/* /usr/include/glib-2.0/gobject/gtype.h:703:NC */ extern void g_type_query (GType, GTypeQuery *);
/* /usr/include/glib-2.0/gobject/gtype.h:1220:NC */ extern GType g_type_register_static (GType, const gchar *, const GTypeInfo *, GTypeFlags);
/* /usr/include/glib-2.0/gobject/gtype.h:1224:NC */ extern GType g_type_register_static_simple (GType, const gchar *, guint, GClassInitFunc, guint, GInstanceInitFunc, GTypeFlags);
/* /usr/include/glib-2.0/gobject/gtype.h:1232:NC */ extern GType g_type_register_dynamic (GType, const gchar *, GTypePlugin *, GTypeFlags);
/* /usr/include/glib-2.0/gobject/gtype.h:1236:NC */ extern GType g_type_register_fundamental (GType, const gchar *, const GTypeInfo *, const GTypeFundamentalInfo *, GTypeFlags);
/* /usr/include/glib-2.0/gobject/gtype.h:1241:NC */ extern void g_type_add_interface_static (GType, GType, const GInterfaceInfo *);
/* /usr/include/glib-2.0/gobject/gtype.h:1244:NC */ extern void g_type_add_interface_dynamic (GType, GType, GTypePlugin *);
/* /usr/include/glib-2.0/gobject/gtype.h:1247:NC */ extern void g_type_interface_add_prerequisite (GType, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1249:NC */ extern GType *g_type_interface_prerequisites (GType, guint *);
/* /usr/include/glib-2.0/gobject/gtype.h:1251:NC */ extern void g_type_class_add_private (gpointer, gsize);
/* /usr/include/glib-2.0/gobject/gtype.h:1253:NC */ extern gpointer g_type_instance_get_private (GTypeInstance *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1256:NC */ extern void g_type_add_class_private (GType, gsize);
/* /usr/include/glib-2.0/gobject/gtype.h:1258:NC */ extern gpointer g_type_class_get_private (GTypeClass *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1620:NC */ extern GTypePlugin *g_type_get_plugin (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1621:NC */ extern GTypePlugin *g_type_interface_get_plugin (GType, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1623:NC */ extern GType g_type_fundamental_next (void);
/* /usr/include/glib-2.0/gobject/gtype.h:1624:NC */ extern GType g_type_fundamental (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1625:NC */ extern GTypeInstance *g_type_create_instance (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1626:NC */ extern void g_type_free_instance (GTypeInstance *);
/* /usr/include/glib-2.0/gobject/gtype.h:1628:NC */ extern void g_type_add_class_cache_func (gpointer, GTypeClassCacheFunc);
/* /usr/include/glib-2.0/gobject/gtype.h:1630:NC */ extern void g_type_remove_class_cache_func (gpointer, GTypeClassCacheFunc);
/* /usr/include/glib-2.0/gobject/gtype.h:1632:NC */ extern void g_type_class_unref_uncached (gpointer);
/* /usr/include/glib-2.0/gobject/gtype.h:1634:NC */ extern void g_type_add_interface_check (gpointer, GTypeInterfaceCheckFunc);
/* /usr/include/glib-2.0/gobject/gtype.h:1636:NC */ extern void g_type_remove_interface_check (gpointer, GTypeInterfaceCheckFunc);
/* /usr/include/glib-2.0/gobject/gtype.h:1639:NC */ extern GTypeValueTable *g_type_value_table_peek (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1643:NC */ extern gboolean g_type_check_instance (GTypeInstance *);
/* /usr/include/glib-2.0/gobject/gtype.h:1644:NC */ extern GTypeInstance *g_type_check_instance_cast (GTypeInstance *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1646:NC */ extern gboolean g_type_check_instance_is_a (GTypeInstance *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1648:NC */ extern GTypeClass *g_type_check_class_cast (GTypeClass *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1650:NC */ extern gboolean g_type_check_class_is_a (GTypeClass *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1652:NC */ extern gboolean g_type_check_is_value_type (GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1653:NC */ extern gboolean g_type_check_value (GValue *);
/* /usr/include/glib-2.0/gobject/gtype.h:1654:NC */ extern gboolean g_type_check_value_holds (GValue *, GType);
/* /usr/include/glib-2.0/gobject/gtype.h:1656:NC */ extern gboolean g_type_test_flags (GType, guint);
/* /usr/include/glib-2.0/gobject/gtype.h:1661:NC */ extern const gchar *g_type_name_from_instance (GTypeInstance *);
/* /usr/include/glib-2.0/gobject/gtype.h:1662:NC */ extern const gchar *g_type_name_from_class (GTypeClass *);
/* /usr/include/glib-2.0/gobject/gvalue.h:129:NC */ extern GValue *g_value_init (GValue *, GType);
/* /usr/include/glib-2.0/gobject/gvalue.h:131:NC */ extern void g_value_copy (const GValue *, GValue *);
/* /usr/include/glib-2.0/gobject/gvalue.h:133:NC */ extern GValue *g_value_reset (GValue *);
/* /usr/include/glib-2.0/gobject/gvalue.h:134:NC */ extern void g_value_unset (GValue *);
/* /usr/include/glib-2.0/gobject/gvalue.h:135:NC */ extern void g_value_set_instance (GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gvalue.h:140:NC */ extern gboolean g_value_fits_pointer (const GValue *);
/* /usr/include/glib-2.0/gobject/gvalue.h:141:NC */ extern gpointer g_value_peek_pointer (const GValue *);
/* /usr/include/glib-2.0/gobject/gvalue.h:145:NC */ extern gboolean g_value_type_compatible (GType, GType);
/* /usr/include/glib-2.0/gobject/gvalue.h:147:NC */ extern gboolean g_value_type_transformable (GType, GType);
/* /usr/include/glib-2.0/gobject/gvalue.h:149:NC */ extern gboolean g_value_transform (const GValue *, GValue *);
/* /usr/include/glib-2.0/gobject/gvalue.h:151:NC */ extern void g_value_register_transform_func (GType, GType, GValueTransform);
/* /usr/include/glib-2.0/gobject/gparam.h:274:NC */ extern GParamSpec *g_param_spec_ref (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:275:NC */ extern void g_param_spec_unref (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:276:NC */ extern void g_param_spec_sink (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:277:NC */ extern GParamSpec *g_param_spec_ref_sink (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:278:NC */ extern gpointer g_param_spec_get_qdata (GParamSpec *, GQuark);
/* /usr/include/glib-2.0/gobject/gparam.h:280:NC */ extern void g_param_spec_set_qdata (GParamSpec *, GQuark, gpointer);
/* /usr/include/glib-2.0/gobject/gparam.h:283:NC */ extern void g_param_spec_set_qdata_full (GParamSpec *, GQuark, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gobject/gparam.h:287:NC */ extern gpointer g_param_spec_steal_qdata (GParamSpec *, GQuark);
/* /usr/include/glib-2.0/gobject/gparam.h:289:NC */ extern GParamSpec *g_param_spec_get_redirect_target (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:291:NC */ extern void g_param_value_set_default (GParamSpec *, GValue *);
/* /usr/include/glib-2.0/gobject/gparam.h:293:NC */ extern gboolean g_param_value_defaults (GParamSpec *, GValue *);
/* /usr/include/glib-2.0/gobject/gparam.h:295:NC */ extern gboolean g_param_value_validate (GParamSpec *, GValue *);
/* /usr/include/glib-2.0/gobject/gparam.h:297:NC */ extern gboolean g_param_value_convert (GParamSpec *, const GValue *, GValue *, gboolean);
/* /usr/include/glib-2.0/gobject/gparam.h:301:NC */ extern gint g_param_values_cmp (GParamSpec *, const GValue *, const GValue *);
/* /usr/include/glib-2.0/gobject/gparam.h:304:NC */ extern const gchar *g_param_spec_get_name (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:305:NC */ extern const gchar *g_param_spec_get_nick (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:306:NC */ extern const gchar *g_param_spec_get_blurb (GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:307:NC */ extern void g_value_set_param (GValue *, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:309:NC */ extern GParamSpec *g_value_get_param (const GValue *);
/* /usr/include/glib-2.0/gobject/gparam.h:310:NC */ extern GParamSpec *g_value_dup_param (const GValue *);
/* /usr/include/glib-2.0/gobject/gparam.h:313:NC */ extern void g_value_take_param (GValue *, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:316:NC */ extern void g_value_set_param_take_ownership (GValue *, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:364:NC */ extern GType g_param_type_register_static (const gchar *, const GParamSpecTypeInfo *);
/* /usr/include/glib-2.0/gobject/gparam.h:368:NC */ extern GType _g_param_type_register_static_constant (const gchar *, const GParamSpecTypeInfo *, GType);
/* /usr/include/glib-2.0/gobject/gparam.h:374:NC */ extern gpointer g_param_spec_internal (GType, const gchar *, const gchar *, const gchar *, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparam.h:379:NC */ extern GParamSpecPool *g_param_spec_pool_new (gboolean);
/* /usr/include/glib-2.0/gobject/gparam.h:380:NC */ extern void g_param_spec_pool_insert (GParamSpecPool *, GParamSpec *, GType);
/* /usr/include/glib-2.0/gobject/gparam.h:383:NC */ extern void g_param_spec_pool_remove (GParamSpecPool *, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparam.h:385:NC */ extern GParamSpec *g_param_spec_pool_lookup (GParamSpecPool *, const gchar *, GType, gboolean);
/* /usr/include/glib-2.0/gobject/gparam.h:389:NC */ extern GList *g_param_spec_pool_list_owned (GParamSpecPool *, GType);
/* /usr/include/glib-2.0/gobject/gparam.h:391:NC */ extern GParamSpec **g_param_spec_pool_list (GParamSpecPool *, GType, guint *);
/* /usr/include/glib-2.0/gobject/gclosure.h:195:NC */ extern GClosure *g_cclosure_new (GCallback, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:198:NC */ extern GClosure *g_cclosure_new_swap (GCallback, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:201:NC */ extern GClosure *g_signal_type_cclosure_new (GType, guint);
/* /usr/include/glib-2.0/gobject/gclosure.h:206:NC */ extern GClosure *g_closure_ref (GClosure *);
/* /usr/include/glib-2.0/gobject/gclosure.h:207:NC */ extern void g_closure_sink (GClosure *);
/* /usr/include/glib-2.0/gobject/gclosure.h:208:NC */ extern void g_closure_unref (GClosure *);
/* /usr/include/glib-2.0/gobject/gclosure.h:210:NC */ extern GClosure *g_closure_new_simple (guint, gpointer);
/* /usr/include/glib-2.0/gobject/gclosure.h:212:NC */ extern void g_closure_add_finalize_notifier (GClosure *, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:215:NC */ extern void g_closure_remove_finalize_notifier (GClosure *, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:218:NC */ extern void g_closure_add_invalidate_notifier (GClosure *, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:221:NC */ extern void g_closure_remove_invalidate_notifier (GClosure *, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:224:NC */ extern void g_closure_add_marshal_guards (GClosure *, gpointer, GClosureNotify, gpointer, GClosureNotify);
/* /usr/include/glib-2.0/gobject/gclosure.h:229:NC */ extern void g_closure_set_marshal (GClosure *, GClosureMarshal);
/* /usr/include/glib-2.0/gobject/gclosure.h:231:NC */ extern void g_closure_set_meta_marshal (GClosure *, gpointer, GClosureMarshal);
/* /usr/include/glib-2.0/gobject/gclosure.h:234:NC */ extern void g_closure_invalidate (GClosure *);
/* /usr/include/glib-2.0/gobject/gclosure.h:235:NC */ extern void g_closure_invoke (GClosure *, GValue *, guint, const GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gclosure.h:252:NC */ extern void g_cclosure_marshal_generic (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:8:NC */ extern void g_cclosure_marshal_VOID__VOID (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:16:NC */ extern void g_cclosure_marshal_VOID__BOOLEAN (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:24:NC */ extern void g_cclosure_marshal_VOID__CHAR (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:32:NC */ extern void g_cclosure_marshal_VOID__UCHAR (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:40:NC */ extern void g_cclosure_marshal_VOID__INT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:48:NC */ extern void g_cclosure_marshal_VOID__UINT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:56:NC */ extern void g_cclosure_marshal_VOID__LONG (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:64:NC */ extern void g_cclosure_marshal_VOID__ULONG (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:72:NC */ extern void g_cclosure_marshal_VOID__ENUM (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:80:NC */ extern void g_cclosure_marshal_VOID__FLAGS (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:88:NC */ extern void g_cclosure_marshal_VOID__FLOAT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:96:NC */ extern void g_cclosure_marshal_VOID__DOUBLE (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:104:NC */ extern void g_cclosure_marshal_VOID__STRING (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:112:NC */ extern void g_cclosure_marshal_VOID__PARAM (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:120:NC */ extern void g_cclosure_marshal_VOID__BOXED (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:128:NC */ extern void g_cclosure_marshal_VOID__POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:136:NC */ extern void g_cclosure_marshal_VOID__OBJECT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:144:NC */ extern void g_cclosure_marshal_VOID__VARIANT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:152:NC */ extern void g_cclosure_marshal_VOID__UINT_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:160:NC */ extern void g_cclosure_marshal_BOOLEAN__FLAGS (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:169:NC */ extern void g_cclosure_marshal_STRING__OBJECT_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gmarshal.h:177:NC */ extern void g_cclosure_marshal_BOOLEAN__BOXED_BOXED (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:253:NC */ extern guint g_signal_newv (const gchar *, GType, GSignalFlags, GClosure *, GSignalAccumulator, gpointer, GSignalCMarshaller, GType, guint, GType *);
/* /usr/include/glib-2.0/gobject/gsignal.h:263:NC */ extern guint g_signal_new_valist (const gchar *, GType, GSignalFlags, GClosure *, GSignalAccumulator, gpointer, GSignalCMarshaller, GType, guint, __va_list_tag *);
/* /usr/include/glib-2.0/gobject/gsignal.h:273:NC */ extern guint g_signal_new (const gchar *, GType, GSignalFlags, guint, GSignalAccumulator, gpointer, GSignalCMarshaller, GType, guint, ...);
/* /usr/include/glib-2.0/gobject/gsignal.h:283:NC */ extern guint g_signal_new_class_handler (const gchar *, GType, GSignalFlags, GCallback, GSignalAccumulator, gpointer, GSignalCMarshaller, GType, guint, ...);
/* /usr/include/glib-2.0/gobject/gsignal.h:294:NC */ extern void g_signal_emitv (const GValue *, guint, GQuark, GValue *);
/* /usr/include/glib-2.0/gobject/gsignal.h:298:NC */ extern void g_signal_emit_valist (gpointer, guint, GQuark, __va_list_tag *);
/* /usr/include/glib-2.0/gobject/gsignal.h:302:NC */ extern void g_signal_emit (gpointer, guint, GQuark, ...);
/* /usr/include/glib-2.0/gobject/gsignal.h:306:NC */ extern void g_signal_emit_by_name (gpointer, const gchar *, ...);
/* /usr/include/glib-2.0/gobject/gsignal.h:309:NC */ extern guint g_signal_lookup (const gchar *, GType);
/* /usr/include/glib-2.0/gobject/gsignal.h:311:NC */ extern const gchar *g_signal_name (guint);
/* /usr/include/glib-2.0/gobject/gsignal.h:312:NC */ extern void g_signal_query (guint, GSignalQuery *);
/* /usr/include/glib-2.0/gobject/gsignal.h:314:NC */ extern guint *g_signal_list_ids (GType, guint *);
/* /usr/include/glib-2.0/gobject/gsignal.h:316:NC */ extern gboolean g_signal_parse_name (const gchar *, GType, guint *, GQuark *, gboolean);
/* /usr/include/glib-2.0/gobject/gsignal.h:321:NC */ extern GSignalInvocationHint *g_signal_get_invocation_hint (gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:325:NC */ extern void g_signal_stop_emission (gpointer, guint, GQuark);
/* /usr/include/glib-2.0/gobject/gsignal.h:328:NC */ extern void g_signal_stop_emission_by_name (gpointer, const gchar *);
/* /usr/include/glib-2.0/gobject/gsignal.h:330:NC */ extern gulong g_signal_add_emission_hook (guint, GQuark, GSignalEmissionHook, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gobject/gsignal.h:335:NC */ extern void g_signal_remove_emission_hook (guint, gulong);
/* /usr/include/glib-2.0/gobject/gsignal.h:340:NC */ extern gboolean g_signal_has_handler_pending (gpointer, guint, GQuark, gboolean);
/* /usr/include/glib-2.0/gobject/gsignal.h:344:NC */ extern gulong g_signal_connect_closure_by_id (gpointer, guint, GQuark, GClosure *, gboolean);
/* /usr/include/glib-2.0/gobject/gsignal.h:349:NC */ extern gulong g_signal_connect_closure (gpointer, const gchar *, GClosure *, gboolean);
/* /usr/include/glib-2.0/gobject/gsignal.h:353:NC */ extern gulong g_signal_connect_data (gpointer, const gchar *, GCallback, gpointer, GClosureNotify, GConnectFlags);
/* /usr/include/glib-2.0/gobject/gsignal.h:359:NC */ extern void g_signal_handler_block (gpointer, gulong);
/* /usr/include/glib-2.0/gobject/gsignal.h:361:NC */ extern void g_signal_handler_unblock (gpointer, gulong);
/* /usr/include/glib-2.0/gobject/gsignal.h:363:NC */ extern void g_signal_handler_disconnect (gpointer, gulong);
/* /usr/include/glib-2.0/gobject/gsignal.h:365:NC */ extern gboolean g_signal_handler_is_connected (gpointer, gulong);
/* /usr/include/glib-2.0/gobject/gsignal.h:367:NC */ extern gulong g_signal_handler_find (gpointer, GSignalMatchType, guint, GQuark, GClosure *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:374:NC */ extern guint g_signal_handlers_block_matched (gpointer, GSignalMatchType, guint, GQuark, GClosure *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:381:NC */ extern guint g_signal_handlers_unblock_matched (gpointer, GSignalMatchType, guint, GQuark, GClosure *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:388:NC */ extern guint g_signal_handlers_disconnect_matched (gpointer, GSignalMatchType, guint, GQuark, GClosure *, gpointer, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:398:NC */ extern void g_signal_override_class_closure (guint, GType, GClosure *);
/* /usr/include/glib-2.0/gobject/gsignal.h:401:NC */ extern void g_signal_override_class_handler (const gchar *, GType, GCallback);
/* /usr/include/glib-2.0/gobject/gsignal.h:404:NC */ extern void g_signal_chain_from_overridden (const GValue *, GValue *);
/* /usr/include/glib-2.0/gobject/gsignal.h:406:NC */ extern void g_signal_chain_from_overridden_handler (gpointer, ...);
/* /usr/include/glib-2.0/gobject/gsignal.h:501:NC */ extern gboolean g_signal_accumulator_true_handled (GSignalInvocationHint *, GValue *, const GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:506:NC */ extern gboolean g_signal_accumulator_first_wins (GSignalInvocationHint *, GValue *, const GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:512:NC */ extern void g_signal_handlers_destroy (gpointer);
/* /usr/include/glib-2.0/gobject/gsignal.h:513:NC */ extern void _g_signals_destroy (GType);
/* /usr/include/glib-2.0/gobject/gobject.h:382:NC */ extern GType g_initially_unowned_get_type (void);
/* /usr/include/glib-2.0/gobject/gobject.h:383:NC */ extern void g_object_class_install_property (GObjectClass *, guint, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gobject.h:386:NC */ extern GParamSpec *g_object_class_find_property (GObjectClass *, const gchar *);
/* /usr/include/glib-2.0/gobject/gobject.h:388:NC */ extern GParamSpec **g_object_class_list_properties (GObjectClass *, guint *);
/* /usr/include/glib-2.0/gobject/gobject.h:390:NC */ extern void g_object_class_override_property (GObjectClass *, guint, const gchar *);
/* /usr/include/glib-2.0/gobject/gobject.h:393:NC */ extern void g_object_class_install_properties (GObjectClass *, guint, GParamSpec **);
/* /usr/include/glib-2.0/gobject/gobject.h:397:NC */ extern void g_object_interface_install_property (gpointer, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gobject.h:399:NC */ extern GParamSpec *g_object_interface_find_property (gpointer, const gchar *);
/* /usr/include/glib-2.0/gobject/gobject.h:401:NC */ extern GParamSpec **g_object_interface_list_properties (gpointer, guint *);
/* /usr/include/glib-2.0/gobject/gobject.h:404:NC */ extern GType g_object_get_type (void);
/* /usr/include/glib-2.0/gobject/gobject.h:405:NC */ extern gpointer g_object_new (GType, const gchar *, ...);
/* /usr/include/glib-2.0/gobject/gobject.h:408:NC */ extern gpointer g_object_newv (GType, guint, GParameter *);
/* /usr/include/glib-2.0/gobject/gobject.h:411:NC */ extern GObject *g_object_new_valist (GType, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/gobject/gobject.h:414:NC */ extern void g_object_set (gpointer, const gchar *, ...);
/* /usr/include/glib-2.0/gobject/gobject.h:417:NC */ extern void g_object_get (gpointer, const gchar *, ...);
/* /usr/include/glib-2.0/gobject/gobject.h:420:NC */ extern gpointer g_object_connect (gpointer, const gchar *, ...);
/* /usr/include/glib-2.0/gobject/gobject.h:423:NC */ extern void g_object_disconnect (gpointer, const gchar *, ...);
/* /usr/include/glib-2.0/gobject/gobject.h:426:NC */ extern void g_object_set_valist (GObject *, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/gobject/gobject.h:429:NC */ extern void g_object_get_valist (GObject *, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/gobject/gobject.h:432:NC */ extern void g_object_set_property (GObject *, const gchar *, const GValue *);
/* /usr/include/glib-2.0/gobject/gobject.h:435:NC */ extern void g_object_get_property (GObject *, const gchar *, GValue *);
/* /usr/include/glib-2.0/gobject/gobject.h:438:NC */ extern void g_object_freeze_notify (GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:439:NC */ extern void g_object_notify (GObject *, const gchar *);
/* /usr/include/glib-2.0/gobject/gobject.h:441:NC */ extern void g_object_notify_by_pspec (GObject *, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gobject.h:443:NC */ extern void g_object_thaw_notify (GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:444:NC */ extern gboolean g_object_is_floating (gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:445:NC */ extern gpointer g_object_ref_sink (gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:446:NC */ extern gpointer g_object_ref (gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:447:NC */ extern void g_object_unref (gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:448:NC */ extern void g_object_weak_ref (GObject *, GWeakNotify, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:451:NC */ extern void g_object_weak_unref (GObject *, GWeakNotify, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:454:NC */ extern void g_object_add_weak_pointer (GObject *, gpointer *);
/* /usr/include/glib-2.0/gobject/gobject.h:456:NC */ extern void g_object_remove_weak_pointer (GObject *, gpointer *);
/* /usr/include/glib-2.0/gobject/gobject.h:475:NC */ extern void g_object_add_toggle_ref (GObject *, GToggleNotify, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:478:NC */ extern void g_object_remove_toggle_ref (GObject *, GToggleNotify, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:482:NC */ extern gpointer g_object_get_qdata (GObject *, GQuark);
/* /usr/include/glib-2.0/gobject/gobject.h:484:NC */ extern void g_object_set_qdata (GObject *, GQuark, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:487:NC */ extern void g_object_set_qdata_full (GObject *, GQuark, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gobject/gobject.h:491:NC */ extern gpointer g_object_steal_qdata (GObject *, GQuark);
/* /usr/include/glib-2.0/gobject/gobject.h:493:NC */ extern gpointer g_object_get_data (GObject *, const gchar *);
/* /usr/include/glib-2.0/gobject/gobject.h:495:NC */ extern void g_object_set_data (GObject *, const gchar *, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:498:NC */ extern void g_object_set_data_full (GObject *, const gchar *, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gobject/gobject.h:502:NC */ extern gpointer g_object_steal_data (GObject *, const gchar *);
/* /usr/include/glib-2.0/gobject/gobject.h:504:NC */ extern void g_object_watch_closure (GObject *, GClosure *);
/* /usr/include/glib-2.0/gobject/gobject.h:506:NC */ extern GClosure *g_cclosure_new_object (GCallback, GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:508:NC */ extern GClosure *g_cclosure_new_object_swap (GCallback, GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:510:NC */ extern GClosure *g_closure_new_object (guint, GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:512:NC */ extern void g_value_set_object (GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:514:NC */ extern gpointer g_value_get_object (const GValue *);
/* /usr/include/glib-2.0/gobject/gobject.h:515:NC */ extern gpointer g_value_dup_object (const GValue *);
/* /usr/include/glib-2.0/gobject/gobject.h:516:NC */ extern gulong g_signal_connect_object (gpointer, const gchar *, GCallback, gpointer, GConnectFlags);
/* /usr/include/glib-2.0/gobject/gobject.h:523:NC */ extern void g_object_force_floating (GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:524:NC */ extern void g_object_run_dispose (GObject *);
/* /usr/include/glib-2.0/gobject/gobject.h:527:NC */ extern void g_value_take_object (GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:530:NC */ extern void g_value_set_object_take_ownership (GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:535:NC */ extern gsize g_object_compat_control (gsize, gpointer);
/* /usr/include/glib-2.0/gobject/gobject.h:565:NC */ extern void g_clear_object (volatile GObject **);
/* /usr/include/glib-2.0/gobject/gbinding.h:103:NC */ extern GType g_binding_flags_get_type (void);
/* /usr/include/glib-2.0/gobject/gbinding.h:104:NC */ extern GType g_binding_get_type (void);
/* /usr/include/glib-2.0/gobject/gbinding.h:106:NC */ extern GBindingFlags g_binding_get_flags (GBinding *);
/* /usr/include/glib-2.0/gobject/gbinding.h:107:NC */ extern GObject *g_binding_get_source (GBinding *);
/* /usr/include/glib-2.0/gobject/gbinding.h:108:NC */ extern GObject *g_binding_get_target (GBinding *);
/* /usr/include/glib-2.0/gobject/gbinding.h:109:NC */ extern const gchar *g_binding_get_source_property (GBinding *);
/* /usr/include/glib-2.0/gobject/gbinding.h:110:NC */ extern const gchar *g_binding_get_target_property (GBinding *);
/* /usr/include/glib-2.0/gobject/gbinding.h:112:NC */ extern GBinding *g_object_bind_property (gpointer, const gchar *, gpointer, const gchar *, GBindingFlags);
/* /usr/include/glib-2.0/gobject/gbinding.h:117:NC */ extern GBinding *g_object_bind_property_full (gpointer, const gchar *, gpointer, const gchar *, GBindingFlags, GBindingTransformFunc, GBindingTransformFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gobject/gbinding.h:126:NC */ extern GBinding *g_object_bind_property_with_closures (gpointer, const gchar *, gpointer, const gchar *, GBindingFlags, GClosure *, GClosure *);
/* /usr/include/glib-2.0/gobject/glib-types.h:212:NC */ extern GType g_date_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:213:NC */ extern GType g_strv_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:214:NC */ extern GType g_gstring_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:215:NC */ extern GType g_hash_table_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:216:NC */ extern GType g_array_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:217:NC */ extern GType g_byte_array_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:218:NC */ extern GType g_ptr_array_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:219:NC */ extern GType g_variant_type_get_gtype (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:220:NC */ extern GType g_regex_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:221:NC */ extern GType g_match_info_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:222:NC */ extern GType g_error_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:223:NC */ extern GType g_date_time_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:224:NC */ extern GType g_io_channel_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:225:NC */ extern GType g_io_condition_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:226:NC */ extern GType g_variant_builder_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:227:NC */ extern GType g_main_loop_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:228:NC */ extern GType g_main_context_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:229:NC */ extern GType g_source_get_type (void);
/* /usr/include/glib-2.0/gobject/glib-types.h:232:NC */ extern GType g_variant_get_gtype (void);
/* /usr/include/glib-2.0/gobject/gboxed.h:71:NC */ extern gpointer g_boxed_copy (GType, gconstpointer);
/* /usr/include/glib-2.0/gobject/gboxed.h:73:NC */ extern void g_boxed_free (GType, gpointer);
/* /usr/include/glib-2.0/gobject/gboxed.h:75:NC */ extern void g_value_set_boxed (GValue *, gconstpointer);
/* /usr/include/glib-2.0/gobject/gboxed.h:77:NC */ extern void g_value_set_static_boxed (GValue *, gconstpointer);
/* /usr/include/glib-2.0/gobject/gboxed.h:79:NC */ extern void g_value_take_boxed (GValue *, gconstpointer);
/* /usr/include/glib-2.0/gobject/gboxed.h:82:NC */ extern void g_value_set_boxed_take_ownership (GValue *, gconstpointer);
/* /usr/include/glib-2.0/gobject/gboxed.h:85:NC */ extern gpointer g_value_get_boxed (const GValue *);
/* /usr/include/glib-2.0/gobject/gboxed.h:86:NC */ extern gpointer g_value_dup_boxed (const GValue *);
/* /usr/include/glib-2.0/gobject/gboxed.h:90:NC */ extern GType g_boxed_type_register_static (const gchar *, GBoxedCopyFunc, GBoxedFreeFunc);
/* /usr/include/glib-2.0/gobject/gboxed.h:118:NC */ extern GType g_closure_get_type (void);
/* /usr/include/glib-2.0/gobject/gboxed.h:119:NC */ extern GType g_value_get_type (void);
/* /usr/include/glib-2.0/gobject/gboxed.h:120:NC */ extern GType g_value_array_get_type (void);
/* /usr/include/glib-2.0/gobject/genums.h:220:NC */ extern GEnumValue *g_enum_get_value (GEnumClass *, gint);
/* /usr/include/glib-2.0/gobject/genums.h:222:NC */ extern GEnumValue *g_enum_get_value_by_name (GEnumClass *, const gchar *);
/* /usr/include/glib-2.0/gobject/genums.h:224:NC */ extern GEnumValue *g_enum_get_value_by_nick (GEnumClass *, const gchar *);
/* /usr/include/glib-2.0/gobject/genums.h:226:NC */ extern GFlagsValue *g_flags_get_first_value (GFlagsClass *, guint);
/* /usr/include/glib-2.0/gobject/genums.h:228:NC */ extern GFlagsValue *g_flags_get_value_by_name (GFlagsClass *, const gchar *);
/* /usr/include/glib-2.0/gobject/genums.h:230:NC */ extern GFlagsValue *g_flags_get_value_by_nick (GFlagsClass *, const gchar *);
/* /usr/include/glib-2.0/gobject/genums.h:232:NC */ extern void g_value_set_enum (GValue *, gint);
/* /usr/include/glib-2.0/gobject/genums.h:234:NC */ extern gint g_value_get_enum (const GValue *);
/* /usr/include/glib-2.0/gobject/genums.h:235:NC */ extern void g_value_set_flags (GValue *, guint);
/* /usr/include/glib-2.0/gobject/genums.h:237:NC */ extern guint g_value_get_flags (const GValue *);
/* /usr/include/glib-2.0/gobject/genums.h:245:NC */ extern GType g_enum_register_static (const gchar *, const GEnumValue *);
/* /usr/include/glib-2.0/gobject/genums.h:247:NC */ extern GType g_flags_register_static (const gchar *, const GFlagsValue *);
/* /usr/include/glib-2.0/gobject/genums.h:252:NC */ extern void g_enum_complete_type_info (GType, GTypeInfo *, const GEnumValue *);
/* /usr/include/glib-2.0/gobject/genums.h:255:NC */ extern void g_flags_complete_type_info (GType, GTypeInfo *, const GFlagsValue *);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:974:NC */ extern GParamSpec *g_param_spec_char (const gchar *, const gchar *, const gchar *, gint8, gint8, gint8, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:981:NC */ extern GParamSpec *g_param_spec_uchar (const gchar *, const gchar *, const gchar *, guint8, guint8, guint8, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:988:NC */ extern GParamSpec *g_param_spec_boolean (const gchar *, const gchar *, const gchar *, gboolean, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:993:NC */ extern GParamSpec *g_param_spec_int (const gchar *, const gchar *, const gchar *, gint, gint, gint, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1000:NC */ extern GParamSpec *g_param_spec_uint (const gchar *, const gchar *, const gchar *, guint, guint, guint, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1007:NC */ extern GParamSpec *g_param_spec_long (const gchar *, const gchar *, const gchar *, glong, glong, glong, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1014:NC */ extern GParamSpec *g_param_spec_ulong (const gchar *, const gchar *, const gchar *, gulong, gulong, gulong, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1021:NC */ extern GParamSpec *g_param_spec_int64 (const gchar *, const gchar *, const gchar *, gint64, gint64, gint64, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1028:NC */ extern GParamSpec *g_param_spec_uint64 (const gchar *, const gchar *, const gchar *, guint64, guint64, guint64, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1035:NC */ extern GParamSpec *g_param_spec_unichar (const gchar *, const gchar *, const gchar *, gunichar, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1040:NC */ extern GParamSpec *g_param_spec_enum (const gchar *, const gchar *, const gchar *, GType, gint, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1046:NC */ extern GParamSpec *g_param_spec_flags (const gchar *, const gchar *, const gchar *, GType, guint, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1052:NC */ extern GParamSpec *g_param_spec_float (const gchar *, const gchar *, const gchar *, gfloat, gfloat, gfloat, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1059:NC */ extern GParamSpec *g_param_spec_double (const gchar *, const gchar *, const gchar *, gdouble, gdouble, gdouble, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1066:NC */ extern GParamSpec *g_param_spec_string (const gchar *, const gchar *, const gchar *, const gchar *, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1071:NC */ extern GParamSpec *g_param_spec_param (const gchar *, const gchar *, const gchar *, GType, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1076:NC */ extern GParamSpec *g_param_spec_boxed (const gchar *, const gchar *, const gchar *, GType, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1081:NC */ extern GParamSpec *g_param_spec_pointer (const gchar *, const gchar *, const gchar *, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1085:NC */ extern GParamSpec *g_param_spec_value_array (const gchar *, const gchar *, const gchar *, GParamSpec *, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1090:NC */ extern GParamSpec *g_param_spec_object (const gchar *, const gchar *, const gchar *, GType, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1095:NC */ extern GParamSpec *g_param_spec_override (const gchar *, GParamSpec *);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1097:NC */ extern GParamSpec *g_param_spec_gtype (const gchar *, const gchar *, const gchar *, GType, GParamFlags);
/* /usr/include/glib-2.0/gobject/gparamspecs.h:1102:NC */ extern GParamSpec *g_param_spec_variant (const gchar *, const gchar *, const gchar *, const GVariantType *, GVariant *, GParamFlags);
/* /usr/include/glib-2.0/gobject/gsourceclosure.h:31:NC */ extern void g_source_set_closure (GSource *, GClosure *);
/* /usr/include/glib-2.0/gobject/gsourceclosure.h:34:NC */ extern void g_source_set_dummy_callback (GSource *);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:240:NC */ extern GType g_type_module_get_type (void);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:241:NC */ extern gboolean g_type_module_use (GTypeModule *);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:242:NC */ extern void g_type_module_unuse (GTypeModule *);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:243:NC */ extern void g_type_module_set_name (GTypeModule *, const gchar *);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:245:NC */ extern GType g_type_module_register_type (GTypeModule *, GType, const gchar *, const GTypeInfo *, GTypeFlags);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:250:NC */ extern void g_type_module_add_interface (GTypeModule *, GType, GType, const GInterfaceInfo *);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:254:NC */ extern GType g_type_module_register_enum (GTypeModule *, const gchar *, const GEnumValue *);
/* /usr/include/glib-2.0/gobject/gtypemodule.h:257:NC */ extern GType g_type_module_register_flags (GTypeModule *, const gchar *, const GFlagsValue *);
/* /usr/include/glib-2.0/gobject/gtypeplugin.h:120:NC */ extern GType g_type_plugin_get_type (void);
/* /usr/include/glib-2.0/gobject/gtypeplugin.h:121:NC */ extern void g_type_plugin_use (GTypePlugin *);
/* /usr/include/glib-2.0/gobject/gtypeplugin.h:122:NC */ extern void g_type_plugin_unuse (GTypePlugin *);
/* /usr/include/glib-2.0/gobject/gtypeplugin.h:123:NC */ extern void g_type_plugin_complete_type_info (GTypePlugin *, GType, GTypeInfo *, GTypeValueTable *);
/* /usr/include/glib-2.0/gobject/gtypeplugin.h:127:NC */ extern void g_type_plugin_complete_interface_info (GTypePlugin *, GType, GType, GInterfaceInfo *);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:54:NC */ extern GValue *g_value_array_get_nth (GValueArray *, guint);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:56:NC */ extern GValueArray *g_value_array_new (guint);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:57:NC */ extern void g_value_array_free (GValueArray *);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:58:NC */ extern GValueArray *g_value_array_copy (const GValueArray *);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:59:NC */ extern GValueArray *g_value_array_prepend (GValueArray *, const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:61:NC */ extern GValueArray *g_value_array_append (GValueArray *, const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:63:NC */ extern GValueArray *g_value_array_insert (GValueArray *, guint, const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:66:NC */ extern GValueArray *g_value_array_remove (GValueArray *, guint);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:68:NC */ extern GValueArray *g_value_array_sort (GValueArray *, GCompareFunc);
/* /usr/include/glib-2.0/gobject/gvaluearray.h:70:NC */ extern GValueArray *g_value_array_sort_with_data (GValueArray *, GCompareDataFunc, gpointer);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:180:NC */ extern void g_value_set_char (GValue *, gchar);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:182:NC */ extern gchar g_value_get_char (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:183:NC */ extern void g_value_set_uchar (GValue *, guchar);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:185:NC */ extern guchar g_value_get_uchar (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:186:NC */ extern void g_value_set_boolean (GValue *, gboolean);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:188:NC */ extern gboolean g_value_get_boolean (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:189:NC */ extern void g_value_set_int (GValue *, gint);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:191:NC */ extern gint g_value_get_int (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:192:NC */ extern void g_value_set_uint (GValue *, guint);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:194:NC */ extern guint g_value_get_uint (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:195:NC */ extern void g_value_set_long (GValue *, glong);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:197:NC */ extern glong g_value_get_long (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:198:NC */ extern void g_value_set_ulong (GValue *, gulong);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:200:NC */ extern gulong g_value_get_ulong (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:201:NC */ extern void g_value_set_int64 (GValue *, gint64);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:203:NC */ extern gint64 g_value_get_int64 (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:204:NC */ extern void g_value_set_uint64 (GValue *, guint64);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:206:NC */ extern guint64 g_value_get_uint64 (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:207:NC */ extern void g_value_set_float (GValue *, gfloat);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:209:NC */ extern gfloat g_value_get_float (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:210:NC */ extern void g_value_set_double (GValue *, gdouble);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:212:NC */ extern gdouble g_value_get_double (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:213:NC */ extern void g_value_set_string (GValue *, const gchar *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:215:NC */ extern void g_value_set_static_string (GValue *, const gchar *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:217:NC */ extern const gchar *g_value_get_string (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:218:NC */ extern gchar *g_value_dup_string (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:219:NC */ extern void g_value_set_pointer (GValue *, gpointer);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:221:NC */ extern gpointer g_value_get_pointer (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:222:NC */ extern GType g_gtype_get_type (void);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:223:NC */ extern void g_value_set_gtype (GValue *, GType);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:225:NC */ extern GType g_value_get_gtype (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:226:NC */ extern void g_value_set_variant (GValue *, GVariant *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:228:NC */ extern void g_value_take_variant (GValue *, GVariant *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:230:NC */ extern GVariant *g_value_get_variant (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:231:NC */ extern GVariant *g_value_dup_variant (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:235:NC */ extern GType g_pointer_type_register_static (const gchar *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:238:NC */ extern gchar *g_strdup_value_contents (const GValue *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:241:NC */ extern void g_value_take_string (GValue *, gchar *);
/* /usr/include/glib-2.0/gobject/gvaluetypes.h:244:NC */ extern void g_value_set_string_take_ownership (GValue *, gchar *);
/* /usr/include/glib-2.0/gio/gappinfo.h:137:NC */ extern GType g_app_info_get_type (void);
/* /usr/include/glib-2.0/gio/gappinfo.h:138:NC */ extern GAppInfo *g_app_info_create_from_commandline (const char *, const char *, GAppInfoCreateFlags, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:142:NC */ extern GAppInfo *g_app_info_dup (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:143:NC */ extern gboolean g_app_info_equal (GAppInfo *, GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:145:NC */ extern const char *g_app_info_get_id (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:146:NC */ extern const char *g_app_info_get_name (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:147:NC */ extern const char *g_app_info_get_display_name (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:148:NC */ extern const char *g_app_info_get_description (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:149:NC */ extern const char *g_app_info_get_executable (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:150:NC */ extern const char *g_app_info_get_commandline (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:151:NC */ extern GIcon *g_app_info_get_icon (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:152:NC */ extern gboolean g_app_info_launch (GAppInfo *, GList *, GAppLaunchContext *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:156:NC */ extern gboolean g_app_info_supports_uris (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:157:NC */ extern gboolean g_app_info_supports_files (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:158:NC */ extern gboolean g_app_info_launch_uris (GAppInfo *, GList *, GAppLaunchContext *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:162:NC */ extern gboolean g_app_info_should_show (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:164:NC */ extern gboolean g_app_info_set_as_default_for_type (GAppInfo *, const char *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:167:NC */ extern gboolean g_app_info_set_as_default_for_extension (GAppInfo *, const char *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:170:NC */ extern gboolean g_app_info_add_supports_type (GAppInfo *, const char *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:173:NC */ extern gboolean g_app_info_can_remove_supports_type (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:174:NC */ extern gboolean g_app_info_remove_supports_type (GAppInfo *, const char *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:177:NC */ extern gboolean g_app_info_can_delete (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:178:NC */ extern gboolean g_app_info_delete (GAppInfo *);
/* /usr/include/glib-2.0/gio/gappinfo.h:180:NC */ extern gboolean g_app_info_set_as_last_used_for_type (GAppInfo *, const char *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:184:NC */ extern GList *g_app_info_get_all (void);
/* /usr/include/glib-2.0/gio/gappinfo.h:185:NC */ extern GList *g_app_info_get_all_for_type (const char *);
/* /usr/include/glib-2.0/gio/gappinfo.h:186:NC */ extern GList *g_app_info_get_recommended_for_type (const gchar *);
/* /usr/include/glib-2.0/gio/gappinfo.h:187:NC */ extern GList *g_app_info_get_fallback_for_type (const gchar *);
/* /usr/include/glib-2.0/gio/gappinfo.h:189:NC */ extern void g_app_info_reset_type_associations (const char *);
/* /usr/include/glib-2.0/gio/gappinfo.h:190:NC */ extern GAppInfo *g_app_info_get_default_for_type (const char *, gboolean);
/* /usr/include/glib-2.0/gio/gappinfo.h:192:NC */ extern GAppInfo *g_app_info_get_default_for_uri_scheme (const char *);
/* /usr/include/glib-2.0/gio/gappinfo.h:194:NC */ extern gboolean g_app_info_launch_default_for_uri (const char *, GAppLaunchContext *, GError **);
/* /usr/include/glib-2.0/gio/gappinfo.h:234:NC */ extern GType g_app_launch_context_get_type (void);
/* /usr/include/glib-2.0/gio/gappinfo.h:235:NC */ extern GAppLaunchContext *g_app_launch_context_new (void);
/* /usr/include/glib-2.0/gio/gappinfo.h:236:NC */ extern char *g_app_launch_context_get_display (GAppLaunchContext *, GAppInfo *, GList *);
/* /usr/include/glib-2.0/gio/gappinfo.h:239:NC */ extern char *g_app_launch_context_get_startup_notify_id (GAppLaunchContext *, GAppInfo *, GList *);
/* /usr/include/glib-2.0/gio/gappinfo.h:242:NC */ extern void g_app_launch_context_launch_failed (GAppLaunchContext *, const char *);
/* /usr/include/glib-2.0/gio/gaction.h:75:NC */ extern GType g_action_get_type (void);
/* /usr/include/glib-2.0/gio/gaction.h:77:NC */ extern const gchar *g_action_get_name (GAction *);
/* /usr/include/glib-2.0/gio/gaction.h:78:NC */ extern const GVariantType *g_action_get_parameter_type (GAction *);
/* /usr/include/glib-2.0/gio/gaction.h:79:NC */ extern const GVariantType *g_action_get_state_type (GAction *);
/* /usr/include/glib-2.0/gio/gaction.h:80:NC */ extern GVariant *g_action_get_state_hint (GAction *);
/* /usr/include/glib-2.0/gio/gaction.h:82:NC */ extern gboolean g_action_get_enabled (GAction *);
/* /usr/include/glib-2.0/gio/gaction.h:83:NC */ extern GVariant *g_action_get_state (GAction *);
/* /usr/include/glib-2.0/gio/gaction.h:85:NC */ extern void g_action_change_state (GAction *, GVariant *);
/* /usr/include/glib-2.0/gio/gaction.h:87:NC */ extern void g_action_activate (GAction *, GVariant *);
/* /usr/include/glib-2.0/gio/gsimpleaction.h:39:NC */ extern GType g_simple_action_get_type (void);
/* /usr/include/glib-2.0/gio/gsimpleaction.h:41:NC */ extern GSimpleAction *g_simple_action_new (const gchar *, const GVariantType *);
/* /usr/include/glib-2.0/gio/gsimpleaction.h:44:NC */ extern GSimpleAction *g_simple_action_new_stateful (const gchar *, const GVariantType *, GVariant *);
/* /usr/include/glib-2.0/gio/gsimpleaction.h:48:NC */ extern void g_simple_action_set_enabled (GSimpleAction *, gboolean);
/* /usr/include/glib-2.0/gio/gsimpleaction.h:51:NC */ extern void g_simple_action_set_state (GSimpleAction *, GVariant *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:110:NC */ extern GType g_action_group_get_type (void);
/* /usr/include/glib-2.0/gio/gactiongroup.h:112:NC */ extern gboolean g_action_group_has_action (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:114:NC */ extern gchar **g_action_group_list_actions (GActionGroup *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:116:NC */ extern const GVariantType *g_action_group_get_action_parameter_type (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:118:NC */ extern const GVariantType *g_action_group_get_action_state_type (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:120:NC */ extern GVariant *g_action_group_get_action_state_hint (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:123:NC */ extern gboolean g_action_group_get_action_enabled (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:126:NC */ extern GVariant *g_action_group_get_action_state (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:128:NC */ extern void g_action_group_change_action_state (GActionGroup *, const gchar *, GVariant *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:132:NC */ extern void g_action_group_activate_action (GActionGroup *, const gchar *, GVariant *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:137:NC */ extern void g_action_group_action_added (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:139:NC */ extern void g_action_group_action_removed (GActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gactiongroup.h:141:NC */ extern void g_action_group_action_enabled_changed (GActionGroup *, const gchar *, gboolean);
/* /usr/include/glib-2.0/gio/gactiongroup.h:145:NC */ extern void g_action_group_action_state_changed (GActionGroup *, const gchar *, GVariant *);
/* /usr/include/glib-2.0/gio/gsimpleactiongroup.h:74:NC */ extern GType g_simple_action_group_get_type (void);
/* /usr/include/glib-2.0/gio/gsimpleactiongroup.h:76:NC */ extern GSimpleActionGroup *g_simple_action_group_new (void);
/* /usr/include/glib-2.0/gio/gsimpleactiongroup.h:78:NC */ extern GAction *g_simple_action_group_lookup (GSimpleActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gsimpleactiongroup.h:81:NC */ extern void g_simple_action_group_insert (GSimpleActionGroup *, GAction *);
/* /usr/include/glib-2.0/gio/gsimpleactiongroup.h:84:NC */ extern void g_simple_action_group_remove (GSimpleActionGroup *, const gchar *);
/* /usr/include/glib-2.0/gio/gsimpleactiongroup.h:107:NC */ extern void g_simple_action_group_add_entries (GSimpleActionGroup *, const GActionEntry *, gint, gpointer);
/* /usr/include/glib-2.0/gio/gapplication.h:126:NC */ extern GType g_application_get_type (void);
/* /usr/include/glib-2.0/gio/gapplication.h:128:NC */ extern gboolean g_application_id_is_valid (const gchar *);
/* /usr/include/glib-2.0/gio/gapplication.h:130:NC */ extern GApplication *g_application_new (const gchar *, GApplicationFlags);
/* /usr/include/glib-2.0/gio/gapplication.h:133:NC */ extern const gchar *g_application_get_application_id (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:134:NC */ extern void g_application_set_application_id (GApplication *, const gchar *);
/* /usr/include/glib-2.0/gio/gapplication.h:137:NC */ extern guint g_application_get_inactivity_timeout (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:138:NC */ extern void g_application_set_inactivity_timeout (GApplication *, guint);
/* /usr/include/glib-2.0/gio/gapplication.h:141:NC */ extern GApplicationFlags g_application_get_flags (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:142:NC */ extern void g_application_set_flags (GApplication *, GApplicationFlags);
/* /usr/include/glib-2.0/gio/gapplication.h:145:NC */ extern void g_application_set_action_group (GApplication *, GActionGroup *);
/* /usr/include/glib-2.0/gio/gapplication.h:148:NC */ extern gboolean g_application_get_is_registered (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:149:NC */ extern gboolean g_application_get_is_remote (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:151:NC */ extern gboolean g_application_register (GApplication *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gapplication.h:155:NC */ extern void g_application_hold (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:156:NC */ extern void g_application_release (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:158:NC */ extern void g_application_activate (GApplication *);
/* /usr/include/glib-2.0/gio/gapplication.h:160:NC */ extern void g_application_open (GApplication *, GFile **, gint, const gchar *);
/* /usr/include/glib-2.0/gio/gapplication.h:165:NC */ extern int g_application_run (GApplication *, int, char **);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:89:NC */ extern GType g_application_command_line_get_type (void);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:91:NC */ extern gchar **g_application_command_line_get_arguments (GApplicationCommandLine *, int *);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:94:NC */ extern const gchar *const *g_application_command_line_get_environ (GApplicationCommandLine *);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:96:NC */ extern const gchar *g_application_command_line_getenv (GApplicationCommandLine *, const gchar *);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:99:NC */ extern const gchar *g_application_command_line_get_cwd (GApplicationCommandLine *);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:101:NC */ extern gboolean g_application_command_line_get_is_remote (GApplicationCommandLine *);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:103:NC */ extern void g_application_command_line_print (GApplicationCommandLine *, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:106:NC */ extern void g_application_command_line_printerr (GApplicationCommandLine *, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:110:NC */ extern int g_application_command_line_get_exit_status (GApplicationCommandLine *);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:111:NC */ extern void g_application_command_line_set_exit_status (GApplicationCommandLine *, int);
/* /usr/include/glib-2.0/gio/gapplicationcommandline.h:114:NC */ extern GVariant *g_application_command_line_get_platform_data (GApplicationCommandLine *);
/* /usr/include/glib-2.0/gio/ginitable.h:71:NC */ extern GType g_initable_get_type (void);
/* /usr/include/glib-2.0/gio/ginitable.h:73:NC */ extern gboolean g_initable_init (GInitable *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/ginitable.h:77:NC */ extern gpointer g_initable_new (GType, GCancellable *, GError **, const gchar *, ...);
/* /usr/include/glib-2.0/gio/ginitable.h:82:NC */ extern gpointer g_initable_newv (GType, guint, GParameter *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/ginitable.h:87:NC */ extern GObject *g_initable_new_valist (GType, const gchar *, __va_list_tag *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:77:NC */ extern GType g_async_initable_get_type (void);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:80:NC */ extern void g_async_initable_init_async (GAsyncInitable *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:85:NC */ extern gboolean g_async_initable_init_finish (GAsyncInitable *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:89:NC */ extern void g_async_initable_new_async (GType, int, GCancellable *, GAsyncReadyCallback, gpointer, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:96:NC */ extern void g_async_initable_newv_async (GType, guint, GParameter *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:103:NC */ extern void g_async_initable_new_valist_async (GType, const gchar *, __va_list_tag *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gasyncinitable.h:110:NC */ extern GObject *g_async_initable_new_finish (GAsyncInitable *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gasyncresult.h:66:NC */ extern GType g_async_result_get_type (void);
/* /usr/include/glib-2.0/gio/gasyncresult.h:68:NC */ extern gpointer g_async_result_get_user_data (GAsyncResult *);
/* /usr/include/glib-2.0/gio/gasyncresult.h:69:NC */ extern GObject *g_async_result_get_source_object (GAsyncResult *);
/* /usr/include/glib-2.0/gio/ginputstream.h:114:NC */ extern GType g_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/ginputstream.h:116:NC */ extern gssize g_input_stream_read (GInputStream *, void *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:121:NC */ extern gboolean g_input_stream_read_all (GInputStream *, void *, gsize, gsize *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:127:NC */ extern gssize g_input_stream_skip (GInputStream *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:131:NC */ extern gboolean g_input_stream_close (GInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:134:NC */ extern void g_input_stream_read_async (GInputStream *, void *, gsize, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/ginputstream.h:141:NC */ extern gssize g_input_stream_read_finish (GInputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:144:NC */ extern void g_input_stream_skip_async (GInputStream *, gsize, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/ginputstream.h:150:NC */ extern gssize g_input_stream_skip_finish (GInputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:153:NC */ extern void g_input_stream_close_async (GInputStream *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/ginputstream.h:158:NC */ extern gboolean g_input_stream_close_finish (GInputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:164:NC */ extern gboolean g_input_stream_is_closed (GInputStream *);
/* /usr/include/glib-2.0/gio/ginputstream.h:165:NC */ extern gboolean g_input_stream_has_pending (GInputStream *);
/* /usr/include/glib-2.0/gio/ginputstream.h:166:NC */ extern gboolean g_input_stream_set_pending (GInputStream *, GError **);
/* /usr/include/glib-2.0/gio/ginputstream.h:168:NC */ extern void g_input_stream_clear_pending (GInputStream *);
/* /usr/include/glib-2.0/gio/gfilterinputstream.h:68:NC */ extern GType g_filter_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gfilterinputstream.h:69:NC */ extern GInputStream *g_filter_input_stream_get_base_stream (GFilterInputStream *);
/* /usr/include/glib-2.0/gio/gfilterinputstream.h:70:NC */ extern gboolean g_filter_input_stream_get_close_base_stream (GFilterInputStream *);
/* /usr/include/glib-2.0/gio/gfilterinputstream.h:71:NC */ extern void g_filter_input_stream_set_close_base_stream (GFilterInputStream *, gboolean);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:87:NC */ extern GType g_buffered_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:88:NC */ extern GInputStream *g_buffered_input_stream_new (GInputStream *);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:89:NC */ extern GInputStream *g_buffered_input_stream_new_sized (GInputStream *, gsize);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:92:NC */ extern gsize g_buffered_input_stream_get_buffer_size (GBufferedInputStream *);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:93:NC */ extern void g_buffered_input_stream_set_buffer_size (GBufferedInputStream *, gsize);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:95:NC */ extern gsize g_buffered_input_stream_get_available (GBufferedInputStream *);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:96:NC */ extern gsize g_buffered_input_stream_peek (GBufferedInputStream *, void *, gsize, gsize);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:100:NC */ extern const void *g_buffered_input_stream_peek_buffer (GBufferedInputStream *, gsize *);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:103:NC */ extern gssize g_buffered_input_stream_fill (GBufferedInputStream *, gssize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:107:NC */ extern void g_buffered_input_stream_fill_async (GBufferedInputStream *, gssize, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:113:NC */ extern gssize g_buffered_input_stream_fill_finish (GBufferedInputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gbufferedinputstream.h:117:NC */ extern int g_buffered_input_stream_read_byte (GBufferedInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:136:NC */ extern GType g_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/goutputstream.h:138:NC */ extern gssize g_output_stream_write (GOutputStream *, const void *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:143:NC */ extern gboolean g_output_stream_write_all (GOutputStream *, const void *, gsize, gsize *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:149:NC */ extern gssize g_output_stream_splice (GOutputStream *, GInputStream *, GOutputStreamSpliceFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:154:NC */ extern gboolean g_output_stream_flush (GOutputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:157:NC */ extern gboolean g_output_stream_close (GOutputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:160:NC */ extern void g_output_stream_write_async (GOutputStream *, const void *, gsize, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/goutputstream.h:167:NC */ extern gssize g_output_stream_write_finish (GOutputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:170:NC */ extern void g_output_stream_splice_async (GOutputStream *, GInputStream *, GOutputStreamSpliceFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/goutputstream.h:177:NC */ extern gssize g_output_stream_splice_finish (GOutputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:180:NC */ extern void g_output_stream_flush_async (GOutputStream *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/goutputstream.h:185:NC */ extern gboolean g_output_stream_flush_finish (GOutputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:188:NC */ extern void g_output_stream_close_async (GOutputStream *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/goutputstream.h:193:NC */ extern gboolean g_output_stream_close_finish (GOutputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:197:NC */ extern gboolean g_output_stream_is_closed (GOutputStream *);
/* /usr/include/glib-2.0/gio/goutputstream.h:198:NC */ extern gboolean g_output_stream_is_closing (GOutputStream *);
/* /usr/include/glib-2.0/gio/goutputstream.h:199:NC */ extern gboolean g_output_stream_has_pending (GOutputStream *);
/* /usr/include/glib-2.0/gio/goutputstream.h:200:NC */ extern gboolean g_output_stream_set_pending (GOutputStream *, GError **);
/* /usr/include/glib-2.0/gio/goutputstream.h:202:NC */ extern void g_output_stream_clear_pending (GOutputStream *);
/* /usr/include/glib-2.0/gio/gfilteroutputstream.h:68:NC */ extern GType g_filter_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gfilteroutputstream.h:69:NC */ extern GOutputStream *g_filter_output_stream_get_base_stream (GFilterOutputStream *);
/* /usr/include/glib-2.0/gio/gfilteroutputstream.h:70:NC */ extern gboolean g_filter_output_stream_get_close_base_stream (GFilterOutputStream *);
/* /usr/include/glib-2.0/gio/gfilteroutputstream.h:71:NC */ extern void g_filter_output_stream_set_close_base_stream (GFilterOutputStream *, gboolean);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:68:NC */ extern GType g_buffered_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:69:NC */ extern GOutputStream *g_buffered_output_stream_new (GOutputStream *);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:70:NC */ extern GOutputStream *g_buffered_output_stream_new_sized (GOutputStream *, gsize);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:72:NC */ extern gsize g_buffered_output_stream_get_buffer_size (GBufferedOutputStream *);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:73:NC */ extern void g_buffered_output_stream_set_buffer_size (GBufferedOutputStream *, gsize);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:75:NC */ extern gboolean g_buffered_output_stream_get_auto_grow (GBufferedOutputStream *);
/* /usr/include/glib-2.0/gio/gbufferedoutputstream.h:76:NC */ extern void g_buffered_output_stream_set_auto_grow (GBufferedOutputStream *, gboolean);
/* /usr/include/glib-2.0/gio/gcancellable.h:72:NC */ extern GType g_cancellable_get_type (void);
/* /usr/include/glib-2.0/gio/gcancellable.h:74:NC */ extern GCancellable *g_cancellable_new (void);
/* /usr/include/glib-2.0/gio/gcancellable.h:77:NC */ extern gboolean g_cancellable_is_cancelled (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:78:NC */ extern gboolean g_cancellable_set_error_if_cancelled (GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gcancellable.h:81:NC */ extern int g_cancellable_get_fd (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:82:NC */ extern gboolean g_cancellable_make_pollfd (GCancellable *, GPollFD *);
/* /usr/include/glib-2.0/gio/gcancellable.h:84:NC */ extern void g_cancellable_release_fd (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:86:NC */ extern GSource *g_cancellable_source_new (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:88:NC */ extern GCancellable *g_cancellable_get_current (void);
/* /usr/include/glib-2.0/gio/gcancellable.h:89:NC */ extern void g_cancellable_push_current (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:90:NC */ extern void g_cancellable_pop_current (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:91:NC */ extern void g_cancellable_reset (GCancellable *);
/* /usr/include/glib-2.0/gio/gcancellable.h:92:NC */ extern gulong g_cancellable_connect (GCancellable *, GCallback, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gcancellable.h:96:NC */ extern void g_cancellable_disconnect (GCancellable *, gulong);
/* /usr/include/glib-2.0/gio/gcancellable.h:101:NC */ extern void g_cancellable_cancel (GCancellable *);
/* /usr/include/glib-2.0/gio/gconverter.h:78:NC */ extern GType g_converter_get_type (void);
/* /usr/include/glib-2.0/gio/gconverter.h:80:NC */ extern GConverterResult g_converter_convert (GConverter *, const void *, gsize, void *, gsize, GConverterFlags, gsize *, gsize *, GError **);
/* /usr/include/glib-2.0/gio/gconverter.h:89:NC */ extern void g_converter_reset (GConverter *);
/* /usr/include/glib-2.0/gio/gcharsetconverter.h:48:NC */ extern GType g_charset_converter_get_type (void);
/* /usr/include/glib-2.0/gio/gcharsetconverter.h:50:NC */ extern GCharsetConverter *g_charset_converter_new (const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gcharsetconverter.h:53:NC */ extern void g_charset_converter_set_use_fallback (GCharsetConverter *, gboolean);
/* /usr/include/glib-2.0/gio/gcharsetconverter.h:55:NC */ extern gboolean g_charset_converter_get_use_fallback (GCharsetConverter *);
/* /usr/include/glib-2.0/gio/gcharsetconverter.h:56:NC */ extern guint g_charset_converter_get_num_fallbacks (GCharsetConverter *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:34:NC */ extern gboolean g_content_type_equals (const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:36:NC */ extern gboolean g_content_type_is_a (const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:38:NC */ extern gboolean g_content_type_is_unknown (const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:39:NC */ extern gchar *g_content_type_get_description (const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:40:NC */ extern gchar *g_content_type_get_mime_type (const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:41:NC */ extern GIcon *g_content_type_get_icon (const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:42:NC */ extern gboolean g_content_type_can_be_executable (const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:44:NC */ extern gchar *g_content_type_from_mime_type (const gchar *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:46:NC */ extern gchar *g_content_type_guess (const gchar *, const guchar *, gsize, gboolean *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:51:NC */ extern gchar **g_content_type_guess_for_tree (GFile *);
/* /usr/include/glib-2.0/gio/gcontenttype.h:53:NC */ extern GList *g_content_types_get_registered (void);
/* /usr/include/glib-2.0/gio/gconverterinputstream.h:72:NC */ extern GType g_converter_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gconverterinputstream.h:73:NC */ extern GInputStream *g_converter_input_stream_new (GInputStream *, GConverter *);
/* /usr/include/glib-2.0/gio/gconverterinputstream.h:75:NC */ extern GConverter *g_converter_input_stream_get_converter (GConverterInputStream *);
/* /usr/include/glib-2.0/gio/gconverteroutputstream.h:72:NC */ extern GType g_converter_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gconverteroutputstream.h:73:NC */ extern GOutputStream *g_converter_output_stream_new (GOutputStream *, GConverter *);
/* /usr/include/glib-2.0/gio/gconverteroutputstream.h:75:NC */ extern GConverter *g_converter_output_stream_get_converter (GConverterOutputStream *);
/* /usr/include/glib-2.0/gio/gcredentials.h:49:NC */ extern GType g_credentials_get_type (void);
/* /usr/include/glib-2.0/gio/gcredentials.h:51:NC */ extern GCredentials *g_credentials_new (void);
/* /usr/include/glib-2.0/gio/gcredentials.h:53:NC */ extern gchar *g_credentials_to_string (GCredentials *);
/* /usr/include/glib-2.0/gio/gcredentials.h:55:NC */ extern gpointer g_credentials_get_native (GCredentials *, GCredentialsType);
/* /usr/include/glib-2.0/gio/gcredentials.h:58:NC */ extern void g_credentials_set_native (GCredentials *, GCredentialsType, gpointer);
/* /usr/include/glib-2.0/gio/gcredentials.h:62:NC */ extern gboolean g_credentials_is_same_user (GCredentials *, GCredentials *, GError **);
/* /usr/include/glib-2.0/gio/gcredentials.h:67:NC */ extern uid_t g_credentials_get_unix_user (GCredentials *, GError **);
/* /usr/include/glib-2.0/gio/gcredentials.h:69:NC */ extern gboolean g_credentials_set_unix_user (GCredentials *, uid_t, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:71:NC */ extern GType g_data_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:72:NC */ extern GDataInputStream *g_data_input_stream_new (GInputStream *);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:74:NC */ extern void g_data_input_stream_set_byte_order (GDataInputStream *, GDataStreamByteOrder);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:76:NC */ extern GDataStreamByteOrder g_data_input_stream_get_byte_order (GDataInputStream *);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:77:NC */ extern void g_data_input_stream_set_newline_type (GDataInputStream *, GDataStreamNewlineType);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:79:NC */ extern GDataStreamNewlineType g_data_input_stream_get_newline_type (GDataInputStream *);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:80:NC */ extern guchar g_data_input_stream_read_byte (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:83:NC */ extern gint16 g_data_input_stream_read_int16 (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:86:NC */ extern guint16 g_data_input_stream_read_uint16 (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:89:NC */ extern gint32 g_data_input_stream_read_int32 (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:92:NC */ extern guint32 g_data_input_stream_read_uint32 (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:95:NC */ extern gint64 g_data_input_stream_read_int64 (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:98:NC */ extern guint64 g_data_input_stream_read_uint64 (GDataInputStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:101:NC */ extern char *g_data_input_stream_read_line (GDataInputStream *, gsize *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:105:NC */ extern char *g_data_input_stream_read_line_utf8 (GDataInputStream *, gsize *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:109:NC */ extern void g_data_input_stream_read_line_async (GDataInputStream *, gint, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:114:NC */ extern char *g_data_input_stream_read_line_finish (GDataInputStream *, GAsyncResult *, gsize *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:118:NC */ extern char *g_data_input_stream_read_line_finish_utf8 (GDataInputStream *, GAsyncResult *, gsize *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:122:NC */ extern char *g_data_input_stream_read_until (GDataInputStream *, const gchar *, gsize *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:127:NC */ extern void g_data_input_stream_read_until_async (GDataInputStream *, const gchar *, gint, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:133:NC */ extern char *g_data_input_stream_read_until_finish (GDataInputStream *, GAsyncResult *, gsize *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:138:NC */ extern char *g_data_input_stream_read_upto (GDataInputStream *, const gchar *, gssize, gsize *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:144:NC */ extern void g_data_input_stream_read_upto_async (GDataInputStream *, const gchar *, gssize, gint, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdatainputstream.h:151:NC */ extern char *g_data_input_stream_read_upto_finish (GDataInputStream *, GAsyncResult *, gsize *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:73:NC */ extern GType g_data_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:74:NC */ extern GDataOutputStream *g_data_output_stream_new (GOutputStream *);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:76:NC */ extern void g_data_output_stream_set_byte_order (GDataOutputStream *, GDataStreamByteOrder);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:78:NC */ extern GDataStreamByteOrder g_data_output_stream_get_byte_order (GDataOutputStream *);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:80:NC */ extern gboolean g_data_output_stream_put_byte (GDataOutputStream *, guchar, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:84:NC */ extern gboolean g_data_output_stream_put_int16 (GDataOutputStream *, gint16, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:88:NC */ extern gboolean g_data_output_stream_put_uint16 (GDataOutputStream *, guint16, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:92:NC */ extern gboolean g_data_output_stream_put_int32 (GDataOutputStream *, gint32, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:96:NC */ extern gboolean g_data_output_stream_put_uint32 (GDataOutputStream *, guint32, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:100:NC */ extern gboolean g_data_output_stream_put_int64 (GDataOutputStream *, gint64, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:104:NC */ extern gboolean g_data_output_stream_put_uint64 (GDataOutputStream *, guint64, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdataoutputstream.h:108:NC */ extern gboolean g_data_output_stream_put_string (GDataOutputStream *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusaddress.h:34:NC */ extern gboolean g_dbus_is_address (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusaddress.h:35:NC */ extern gboolean g_dbus_is_supported_address (const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gdbusaddress.h:38:NC */ extern void g_dbus_address_get_stream (const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusaddress.h:43:NC */ extern GIOStream *g_dbus_address_get_stream_finish (GAsyncResult *, gchar **, GError **);
/* /usr/include/glib-2.0/gio/gdbusaddress.h:47:NC */ extern GIOStream *g_dbus_address_get_stream_sync (const gchar *, gchar **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusaddress.h:52:NC */ extern gchar *g_dbus_address_get_for_bus_sync (GBusType, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusauthobserver.h:38:NC */ extern GType g_dbus_auth_observer_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusauthobserver.h:39:NC */ extern GDBusAuthObserver *g_dbus_auth_observer_new (void);
/* /usr/include/glib-2.0/gio/gdbusauthobserver.h:40:NC */ extern gboolean g_dbus_auth_observer_authorize_authenticated_peer (GDBusAuthObserver *, GIOStream *, GCredentials *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:38:NC */ extern GType g_dbus_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:42:NC */ extern void g_bus_get (GBusType, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:46:NC */ extern GDBusConnection *g_bus_get_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:48:NC */ extern GDBusConnection *g_bus_get_sync (GBusType, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:54:NC */ extern void g_dbus_connection_new (GIOStream *, const gchar *, GDBusConnectionFlags, GDBusAuthObserver *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:61:NC */ extern GDBusConnection *g_dbus_connection_new_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:63:NC */ extern GDBusConnection *g_dbus_connection_new_sync (GIOStream *, const gchar *, GDBusConnectionFlags, GDBusAuthObserver *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:70:NC */ extern void g_dbus_connection_new_for_address (const gchar *, GDBusConnectionFlags, GDBusAuthObserver *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:76:NC */ extern GDBusConnection *g_dbus_connection_new_for_address_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:78:NC */ extern GDBusConnection *g_dbus_connection_new_for_address_sync (const gchar *, GDBusConnectionFlags, GDBusAuthObserver *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:86:NC */ extern void g_dbus_connection_start_message_processing (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:87:NC */ extern gboolean g_dbus_connection_is_closed (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:88:NC */ extern GIOStream *g_dbus_connection_get_stream (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:89:NC */ extern const gchar *g_dbus_connection_get_guid (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:90:NC */ extern const gchar *g_dbus_connection_get_unique_name (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:91:NC */ extern GCredentials *g_dbus_connection_get_peer_credentials (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:92:NC */ extern gboolean g_dbus_connection_get_exit_on_close (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:93:NC */ extern void g_dbus_connection_set_exit_on_close (GDBusConnection *, gboolean);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:95:NC */ extern GDBusCapabilityFlags g_dbus_connection_get_capabilities (GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:99:NC */ extern void g_dbus_connection_close (GDBusConnection *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:103:NC */ extern gboolean g_dbus_connection_close_finish (GDBusConnection *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:106:NC */ extern gboolean g_dbus_connection_close_sync (GDBusConnection *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:112:NC */ extern void g_dbus_connection_flush (GDBusConnection *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:116:NC */ extern gboolean g_dbus_connection_flush_finish (GDBusConnection *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:119:NC */ extern gboolean g_dbus_connection_flush_sync (GDBusConnection *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:125:NC */ extern gboolean g_dbus_connection_send_message (GDBusConnection *, GDBusMessage *, GDBusSendMessageFlags, volatile guint32 *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:130:NC */ extern void g_dbus_connection_send_message_with_reply (GDBusConnection *, GDBusMessage *, GDBusSendMessageFlags, gint, volatile guint32 *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:138:NC */ extern GDBusMessage *g_dbus_connection_send_message_with_reply_finish (GDBusConnection *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:141:NC */ extern GDBusMessage *g_dbus_connection_send_message_with_reply_sync (GDBusConnection *, GDBusMessage *, GDBusSendMessageFlags, gint, volatile guint32 *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:151:NC */ extern gboolean g_dbus_connection_emit_signal (GDBusConnection *, const gchar *, const gchar *, const gchar *, const gchar *, GVariant *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:158:NC */ extern void g_dbus_connection_call (GDBusConnection *, const gchar *, const gchar *, const gchar *, const gchar *, GVariant *, const GVariantType *, GDBusCallFlags, gint, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:170:NC */ extern GVariant *g_dbus_connection_call_finish (GDBusConnection *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:173:NC */ extern GVariant *g_dbus_connection_call_sync (GDBusConnection *, const gchar *, const gchar *, const gchar *, const gchar *, GVariant *, const GVariantType *, GDBusCallFlags, gint, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:184:NC */ extern void g_dbus_connection_call_with_unix_fd_list (GDBusConnection *, const gchar *, const gchar *, const gchar *, const gchar *, GVariant *, const GVariantType *, GDBusCallFlags, gint, GUnixFDList *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:197:NC */ extern GVariant *g_dbus_connection_call_with_unix_fd_list_finish (GDBusConnection *, GUnixFDList **, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:201:NC */ extern GVariant *g_dbus_connection_call_with_unix_fd_list_sync (GDBusConnection *, const gchar *, const gchar *, const gchar *, const gchar *, GVariant *, const GVariantType *, GDBusCallFlags, gint, GUnixFDList *, GUnixFDList **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:323:NC */ extern guint g_dbus_connection_register_object (GDBusConnection *, const gchar *, GDBusInterfaceInfo *, const GDBusInterfaceVTable *, gpointer, GDestroyNotify, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:330:NC */ extern gboolean g_dbus_connection_unregister_object (GDBusConnection *, guint);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:451:NC */ extern guint g_dbus_connection_register_subtree (GDBusConnection *, const gchar *, const GDBusSubtreeVTable *, GDBusSubtreeFlags, gpointer, GDestroyNotify, GError **);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:458:NC */ extern gboolean g_dbus_connection_unregister_subtree (GDBusConnection *, guint);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:485:NC */ extern guint g_dbus_connection_signal_subscribe (GDBusConnection *, const gchar *, const gchar *, const gchar *, const gchar *, const gchar *, GDBusSignalFlags, GDBusSignalCallback, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:495:NC */ extern void g_dbus_connection_signal_unsubscribe (GDBusConnection *, guint);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:579:NC */ extern guint g_dbus_connection_add_filter (GDBusConnection *, GDBusMessageFilterFunction, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gdbusconnection.h:584:NC */ extern void g_dbus_connection_remove_filter (GDBusConnection *, guint);
/* /usr/include/glib-2.0/gio/gdbuserror.h:50:NC */ extern GQuark g_dbus_error_quark (void);
/* /usr/include/glib-2.0/gio/gdbuserror.h:53:NC */ extern gboolean g_dbus_error_is_remote_error (const GError *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:54:NC */ extern gchar *g_dbus_error_get_remote_error (const GError *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:55:NC */ extern gboolean g_dbus_error_strip_remote_error (GError *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:72:NC */ extern gboolean g_dbus_error_register_error (GQuark, gint, const gchar *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:75:NC */ extern gboolean g_dbus_error_unregister_error (GQuark, gint, const gchar *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:78:NC */ extern void g_dbus_error_register_error_domain (const gchar *, volatile gsize *, const GDBusErrorEntry *, guint);
/* /usr/include/glib-2.0/gio/gdbuserror.h:84:NC */ extern GError *g_dbus_error_new_for_dbus_error (const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:86:NC */ extern void g_dbus_error_set_dbus_error (GError **, const gchar *, const gchar *, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gdbuserror.h:91:NC */ extern void g_dbus_error_set_dbus_error_valist (GError **, const gchar *, const gchar *, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/gio/gdbuserror.h:96:NC */ extern gchar *g_dbus_error_encode_gerror (const GError *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:184:NC */ extern const gchar *g_dbus_annotation_info_lookup (GDBusAnnotationInfo **, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:186:NC */ extern GDBusMethodInfo *g_dbus_interface_info_lookup_method (GDBusInterfaceInfo *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:188:NC */ extern GDBusSignalInfo *g_dbus_interface_info_lookup_signal (GDBusInterfaceInfo *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:190:NC */ extern GDBusPropertyInfo *g_dbus_interface_info_lookup_property (GDBusInterfaceInfo *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:192:NC */ extern void g_dbus_interface_info_cache_build (GDBusInterfaceInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:193:NC */ extern void g_dbus_interface_info_cache_release (GDBusInterfaceInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:195:NC */ extern void g_dbus_interface_info_generate_xml (GDBusInterfaceInfo *, guint, GString *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:199:NC */ extern GDBusNodeInfo *g_dbus_node_info_new_for_xml (const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:201:NC */ extern GDBusInterfaceInfo *g_dbus_node_info_lookup_interface (GDBusNodeInfo *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:203:NC */ extern void g_dbus_node_info_generate_xml (GDBusNodeInfo *, guint, GString *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:207:NC */ extern GDBusNodeInfo *g_dbus_node_info_ref (GDBusNodeInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:208:NC */ extern GDBusInterfaceInfo *g_dbus_interface_info_ref (GDBusInterfaceInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:209:NC */ extern GDBusMethodInfo *g_dbus_method_info_ref (GDBusMethodInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:210:NC */ extern GDBusSignalInfo *g_dbus_signal_info_ref (GDBusSignalInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:211:NC */ extern GDBusPropertyInfo *g_dbus_property_info_ref (GDBusPropertyInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:212:NC */ extern GDBusArgInfo *g_dbus_arg_info_ref (GDBusArgInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:213:NC */ extern GDBusAnnotationInfo *g_dbus_annotation_info_ref (GDBusAnnotationInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:215:NC */ extern void g_dbus_node_info_unref (GDBusNodeInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:216:NC */ extern void g_dbus_interface_info_unref (GDBusInterfaceInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:217:NC */ extern void g_dbus_method_info_unref (GDBusMethodInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:218:NC */ extern void g_dbus_signal_info_unref (GDBusSignalInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:219:NC */ extern void g_dbus_property_info_unref (GDBusPropertyInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:220:NC */ extern void g_dbus_arg_info_unref (GDBusArgInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:221:NC */ extern void g_dbus_annotation_info_unref (GDBusAnnotationInfo *);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:286:NC */ extern GType g_dbus_node_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:287:NC */ extern GType g_dbus_interface_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:288:NC */ extern GType g_dbus_method_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:289:NC */ extern GType g_dbus_signal_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:290:NC */ extern GType g_dbus_property_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:291:NC */ extern GType g_dbus_arg_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusintrospection.h:292:NC */ extern GType g_dbus_annotation_info_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:38:NC */ extern GType g_dbus_message_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:39:NC */ extern GDBusMessage *g_dbus_message_new (void);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:40:NC */ extern GDBusMessage *g_dbus_message_new_signal (const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:43:NC */ extern GDBusMessage *g_dbus_message_new_method_call (const gchar *, const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:47:NC */ extern GDBusMessage *g_dbus_message_new_method_reply (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:48:NC */ extern GDBusMessage *g_dbus_message_new_method_error (GDBusMessage *, const gchar *, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:52:NC */ extern GDBusMessage *g_dbus_message_new_method_error_valist (GDBusMessage *, const gchar *, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:56:NC */ extern GDBusMessage *g_dbus_message_new_method_error_literal (GDBusMessage *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:59:NC */ extern gchar *g_dbus_message_print (GDBusMessage *, guint);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:61:NC */ extern gboolean g_dbus_message_get_locked (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:62:NC */ extern void g_dbus_message_lock (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:63:NC */ extern GDBusMessage *g_dbus_message_copy (GDBusMessage *, GError **);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:65:NC */ extern GDBusMessageByteOrder g_dbus_message_get_byte_order (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:66:NC */ extern void g_dbus_message_set_byte_order (GDBusMessage *, GDBusMessageByteOrder);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:69:NC */ extern GDBusMessageType g_dbus_message_get_message_type (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:70:NC */ extern void g_dbus_message_set_message_type (GDBusMessage *, GDBusMessageType);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:72:NC */ extern GDBusMessageFlags g_dbus_message_get_flags (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:73:NC */ extern void g_dbus_message_set_flags (GDBusMessage *, GDBusMessageFlags);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:75:NC */ extern guint32 g_dbus_message_get_serial (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:76:NC */ extern void g_dbus_message_set_serial (GDBusMessage *, guint32);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:78:NC */ extern GVariant *g_dbus_message_get_header (GDBusMessage *, GDBusMessageHeaderField);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:80:NC */ extern void g_dbus_message_set_header (GDBusMessage *, GDBusMessageHeaderField, GVariant *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:83:NC */ extern guchar *g_dbus_message_get_header_fields (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:84:NC */ extern GVariant *g_dbus_message_get_body (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:85:NC */ extern void g_dbus_message_set_body (GDBusMessage *, GVariant *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:87:NC */ extern GUnixFDList *g_dbus_message_get_unix_fd_list (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:88:NC */ extern void g_dbus_message_set_unix_fd_list (GDBusMessage *, GUnixFDList *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:91:NC */ extern guint32 g_dbus_message_get_reply_serial (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:92:NC */ extern void g_dbus_message_set_reply_serial (GDBusMessage *, guint32);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:95:NC */ extern const gchar *g_dbus_message_get_interface (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:96:NC */ extern void g_dbus_message_set_interface (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:99:NC */ extern const gchar *g_dbus_message_get_member (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:100:NC */ extern void g_dbus_message_set_member (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:103:NC */ extern const gchar *g_dbus_message_get_path (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:104:NC */ extern void g_dbus_message_set_path (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:107:NC */ extern const gchar *g_dbus_message_get_sender (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:108:NC */ extern void g_dbus_message_set_sender (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:111:NC */ extern const gchar *g_dbus_message_get_destination (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:112:NC */ extern void g_dbus_message_set_destination (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:115:NC */ extern const gchar *g_dbus_message_get_error_name (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:116:NC */ extern void g_dbus_message_set_error_name (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:119:NC */ extern const gchar *g_dbus_message_get_signature (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:120:NC */ extern void g_dbus_message_set_signature (GDBusMessage *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:123:NC */ extern guint32 g_dbus_message_get_num_unix_fds (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:124:NC */ extern void g_dbus_message_set_num_unix_fds (GDBusMessage *, guint32);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:127:NC */ extern const gchar *g_dbus_message_get_arg0 (GDBusMessage *);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:130:NC */ extern GDBusMessage *g_dbus_message_new_from_blob (guchar *, gsize, GDBusCapabilityFlags, GError **);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:135:NC */ extern gssize g_dbus_message_bytes_needed (guchar *, gsize, GError **);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:139:NC */ extern guchar *g_dbus_message_to_blob (GDBusMessage *, gsize *, GDBusCapabilityFlags, GError **);
/* /usr/include/glib-2.0/gio/gdbusmessage.h:144:NC */ extern gboolean g_dbus_message_to_gerror (GDBusMessage *, GError **);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:38:NC */ extern GType g_dbus_method_invocation_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:39:NC */ extern const gchar *g_dbus_method_invocation_get_sender (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:40:NC */ extern const gchar *g_dbus_method_invocation_get_object_path (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:41:NC */ extern const gchar *g_dbus_method_invocation_get_interface_name (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:42:NC */ extern const gchar *g_dbus_method_invocation_get_method_name (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:43:NC */ extern const GDBusMethodInfo *g_dbus_method_invocation_get_method_info (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:44:NC */ extern GDBusConnection *g_dbus_method_invocation_get_connection (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:45:NC */ extern GDBusMessage *g_dbus_method_invocation_get_message (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:46:NC */ extern GVariant *g_dbus_method_invocation_get_parameters (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:47:NC */ extern gpointer g_dbus_method_invocation_get_user_data (GDBusMethodInvocation *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:49:NC */ extern void g_dbus_method_invocation_return_value (GDBusMethodInvocation *, GVariant *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:51:NC */ extern void g_dbus_method_invocation_return_value_with_unix_fd_list (GDBusMethodInvocation *, GVariant *, GUnixFDList *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:54:NC */ extern void g_dbus_method_invocation_return_error (GDBusMethodInvocation *, GQuark, gint, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:59:NC */ extern void g_dbus_method_invocation_return_error_valist (GDBusMethodInvocation *, GQuark, gint, const gchar *, __va_list_tag *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:64:NC */ extern void g_dbus_method_invocation_return_error_literal (GDBusMethodInvocation *, GQuark, gint, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:68:NC */ extern void g_dbus_method_invocation_return_gerror (GDBusMethodInvocation *, const GError *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:70:NC */ extern void g_dbus_method_invocation_take_error (GDBusMethodInvocation *, GError *);
/* /usr/include/glib-2.0/gio/gdbusmethodinvocation.h:72:NC */ extern void g_dbus_method_invocation_return_dbus_error (GDBusMethodInvocation *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusnameowning.h:77:NC */ extern guint g_bus_own_name (GBusType, const gchar *, GBusNameOwnerFlags, GBusAcquiredCallback, GBusNameAcquiredCallback, GBusNameLostCallback, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gdbusnameowning.h:86:NC */ extern guint g_bus_own_name_on_connection (GDBusConnection *, const gchar *, GBusNameOwnerFlags, GBusNameAcquiredCallback, GBusNameLostCallback, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gdbusnameowning.h:94:NC */ extern guint g_bus_own_name_with_closures (GBusType, const gchar *, GBusNameOwnerFlags, GClosure *, GClosure *, GClosure *);
/* /usr/include/glib-2.0/gio/gdbusnameowning.h:101:NC */ extern guint g_bus_own_name_on_connection_with_closures (GDBusConnection *, const gchar *, GBusNameOwnerFlags, GClosure *, GClosure *);
/* /usr/include/glib-2.0/gio/gdbusnameowning.h:108:NC */ extern void g_bus_unown_name (guint);
/* /usr/include/glib-2.0/gio/gdbusnamewatching.h:65:NC */ extern guint g_bus_watch_name (GBusType, const gchar *, GBusNameWatcherFlags, GBusNameAppearedCallback, GBusNameVanishedCallback, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gdbusnamewatching.h:72:NC */ extern guint g_bus_watch_name_on_connection (GDBusConnection *, const gchar *, GBusNameWatcherFlags, GBusNameAppearedCallback, GBusNameVanishedCallback, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gdbusnamewatching.h:79:NC */ extern guint g_bus_watch_name_with_closures (GBusType, const gchar *, GBusNameWatcherFlags, GClosure *, GClosure *);
/* /usr/include/glib-2.0/gio/gdbusnamewatching.h:84:NC */ extern guint g_bus_watch_name_on_connection_with_closures (GDBusConnection *, const gchar *, GBusNameWatcherFlags, GClosure *, GClosure *);
/* /usr/include/glib-2.0/gio/gdbusnamewatching.h:90:NC */ extern void g_bus_unwatch_name (guint);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:89:NC */ extern GType g_dbus_proxy_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:90:NC */ extern void g_dbus_proxy_new (GDBusConnection *, GDBusProxyFlags, GDBusInterfaceInfo *, const gchar *, const gchar *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:99:NC */ extern GDBusProxy *g_dbus_proxy_new_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:101:NC */ extern GDBusProxy *g_dbus_proxy_new_sync (GDBusConnection *, GDBusProxyFlags, GDBusInterfaceInfo *, const gchar *, const gchar *, const gchar *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:109:NC */ extern void g_dbus_proxy_new_for_bus (GBusType, GDBusProxyFlags, GDBusInterfaceInfo *, const gchar *, const gchar *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:118:NC */ extern GDBusProxy *g_dbus_proxy_new_for_bus_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:120:NC */ extern GDBusProxy *g_dbus_proxy_new_for_bus_sync (GBusType, GDBusProxyFlags, GDBusInterfaceInfo *, const gchar *, const gchar *, const gchar *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:128:NC */ extern GDBusConnection *g_dbus_proxy_get_connection (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:129:NC */ extern GDBusProxyFlags g_dbus_proxy_get_flags (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:130:NC */ extern const gchar *g_dbus_proxy_get_name (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:131:NC */ extern gchar *g_dbus_proxy_get_name_owner (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:132:NC */ extern const gchar *g_dbus_proxy_get_object_path (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:133:NC */ extern const gchar *g_dbus_proxy_get_interface_name (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:134:NC */ extern gint g_dbus_proxy_get_default_timeout (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:135:NC */ extern void g_dbus_proxy_set_default_timeout (GDBusProxy *, gint);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:137:NC */ extern GDBusInterfaceInfo *g_dbus_proxy_get_interface_info (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:138:NC */ extern void g_dbus_proxy_set_interface_info (GDBusProxy *, GDBusInterfaceInfo *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:140:NC */ extern GVariant *g_dbus_proxy_get_cached_property (GDBusProxy *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:142:NC */ extern void g_dbus_proxy_set_cached_property (GDBusProxy *, const gchar *, GVariant *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:145:NC */ extern gchar **g_dbus_proxy_get_cached_property_names (GDBusProxy *);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:146:NC */ extern void g_dbus_proxy_call (GDBusProxy *, const gchar *, GVariant *, GDBusCallFlags, gint, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:154:NC */ extern GVariant *g_dbus_proxy_call_finish (GDBusProxy *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:157:NC */ extern GVariant *g_dbus_proxy_call_sync (GDBusProxy *, const gchar *, GVariant *, GDBusCallFlags, gint, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:165:NC */ extern void g_dbus_proxy_call_with_unix_fd_list (GDBusProxy *, const gchar *, GVariant *, GDBusCallFlags, gint, GUnixFDList *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:174:NC */ extern GVariant *g_dbus_proxy_call_with_unix_fd_list_finish (GDBusProxy *, GUnixFDList **, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusproxy.h:178:NC */ extern GVariant *g_dbus_proxy_call_with_unix_fd_list_sync (GDBusProxy *, const gchar *, GVariant *, GDBusCallFlags, gint, GUnixFDList *, GUnixFDList **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusserver.h:38:NC */ extern GType g_dbus_server_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusserver.h:39:NC */ extern GDBusServer *g_dbus_server_new_sync (const gchar *, GDBusServerFlags, const gchar *, GDBusAuthObserver *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusserver.h:45:NC */ extern const gchar *g_dbus_server_get_client_address (GDBusServer *);
/* /usr/include/glib-2.0/gio/gdbusserver.h:46:NC */ extern const gchar *g_dbus_server_get_guid (GDBusServer *);
/* /usr/include/glib-2.0/gio/gdbusserver.h:47:NC */ extern GDBusServerFlags g_dbus_server_get_flags (GDBusServer *);
/* /usr/include/glib-2.0/gio/gdbusserver.h:48:NC */ extern void g_dbus_server_start (GDBusServer *);
/* /usr/include/glib-2.0/gio/gdbusserver.h:49:NC */ extern void g_dbus_server_stop (GDBusServer *);
/* /usr/include/glib-2.0/gio/gdbusserver.h:50:NC */ extern gboolean g_dbus_server_is_active (GDBusServer *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:34:NC */ extern gboolean g_dbus_is_guid (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:35:NC */ extern gchar *g_dbus_generate_guid (void);
/* /usr/include/glib-2.0/gio/gdbusutils.h:37:NC */ extern gboolean g_dbus_is_name (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:38:NC */ extern gboolean g_dbus_is_unique_name (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:39:NC */ extern gboolean g_dbus_is_member_name (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:40:NC */ extern gboolean g_dbus_is_interface_name (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:42:NC */ extern void g_dbus_gvariant_to_gvalue (GVariant *, GValue *);
/* /usr/include/glib-2.0/gio/gdbusutils.h:44:NC */ extern GVariant *g_dbus_gvalue_to_gvariant (const GValue *, const GVariantType *);
/* /usr/include/glib-2.0/gio/gdrive.h:156:NC */ extern GType g_drive_get_type (void);
/* /usr/include/glib-2.0/gio/gdrive.h:158:NC */ extern char *g_drive_get_name (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:159:NC */ extern GIcon *g_drive_get_icon (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:160:NC */ extern gboolean g_drive_has_volumes (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:161:NC */ extern GList *g_drive_get_volumes (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:162:NC */ extern gboolean g_drive_is_media_removable (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:163:NC */ extern gboolean g_drive_has_media (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:164:NC */ extern gboolean g_drive_is_media_check_automatic (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:165:NC */ extern gboolean g_drive_can_poll_for_media (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:166:NC */ extern gboolean g_drive_can_eject (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:168:NC */ extern void g_drive_eject (GDrive *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdrive.h:173:NC */ extern gboolean g_drive_eject_finish (GDrive *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdrive.h:177:NC */ extern void g_drive_poll_for_media (GDrive *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdrive.h:181:NC */ extern gboolean g_drive_poll_for_media_finish (GDrive *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdrive.h:184:NC */ extern char *g_drive_get_identifier (GDrive *, const char *);
/* /usr/include/glib-2.0/gio/gdrive.h:186:NC */ extern char **g_drive_enumerate_identifiers (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:188:NC */ extern GDriveStartStopType g_drive_get_start_stop_type (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:190:NC */ extern gboolean g_drive_can_start (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:191:NC */ extern gboolean g_drive_can_start_degraded (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:192:NC */ extern void g_drive_start (GDrive *, GDriveStartFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdrive.h:198:NC */ extern gboolean g_drive_start_finish (GDrive *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdrive.h:202:NC */ extern gboolean g_drive_can_stop (GDrive *);
/* /usr/include/glib-2.0/gio/gdrive.h:203:NC */ extern void g_drive_stop (GDrive *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdrive.h:209:NC */ extern gboolean g_drive_stop_finish (GDrive *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdrive.h:213:NC */ extern void g_drive_eject_with_operation (GDrive *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdrive.h:219:NC */ extern gboolean g_drive_eject_with_operation_finish (GDrive *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gicon.h:80:NC */ extern GType g_icon_get_type (void);
/* /usr/include/glib-2.0/gio/gicon.h:82:NC */ extern guint g_icon_hash (gconstpointer);
/* /usr/include/glib-2.0/gio/gicon.h:83:NC */ extern gboolean g_icon_equal (GIcon *, GIcon *);
/* /usr/include/glib-2.0/gio/gicon.h:85:NC */ extern gchar *g_icon_to_string (GIcon *);
/* /usr/include/glib-2.0/gio/gicon.h:86:NC */ extern GIcon *g_icon_new_for_string (const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gemblem.h:48:NC */ extern GType g_emblem_get_type (void);
/* /usr/include/glib-2.0/gio/gemblem.h:50:NC */ extern GEmblem *g_emblem_new (GIcon *);
/* /usr/include/glib-2.0/gio/gemblem.h:51:NC */ extern GEmblem *g_emblem_new_with_origin (GIcon *, GEmblemOrigin);
/* /usr/include/glib-2.0/gio/gemblem.h:53:NC */ extern GIcon *g_emblem_get_icon (GEmblem *);
/* /usr/include/glib-2.0/gio/gemblem.h:54:NC */ extern GEmblemOrigin g_emblem_get_origin (GEmblem *);
/* /usr/include/glib-2.0/gio/gemblemedicon.h:65:NC */ extern GType g_emblemed_icon_get_type (void);
/* /usr/include/glib-2.0/gio/gemblemedicon.h:67:NC */ extern GIcon *g_emblemed_icon_new (GIcon *, GEmblem *);
/* /usr/include/glib-2.0/gio/gemblemedicon.h:69:NC */ extern GIcon *g_emblemed_icon_get_icon (GEmblemedIcon *);
/* /usr/include/glib-2.0/gio/gemblemedicon.h:70:NC */ extern GList *g_emblemed_icon_get_emblems (GEmblemedIcon *);
/* /usr/include/glib-2.0/gio/gemblemedicon.h:71:NC */ extern void g_emblemed_icon_add_emblem (GEmblemedIcon *, GEmblem *);
/* /usr/include/glib-2.0/gio/gemblemedicon.h:73:NC */ extern void g_emblemed_icon_clear_emblems (GEmblemedIcon *);
/* /usr/include/glib-2.0/gio/gfileattribute.h:63:NC */ extern GType g_file_attribute_info_list_get_type (void);
/* /usr/include/glib-2.0/gio/gfileattribute.h:64:NC */ extern GFileAttributeInfoList *g_file_attribute_info_list_new (void);
/* /usr/include/glib-2.0/gio/gfileattribute.h:65:NC */ extern GFileAttributeInfoList *g_file_attribute_info_list_ref (GFileAttributeInfoList *);
/* /usr/include/glib-2.0/gio/gfileattribute.h:66:NC */ extern void g_file_attribute_info_list_unref (GFileAttributeInfoList *);
/* /usr/include/glib-2.0/gio/gfileattribute.h:67:NC */ extern GFileAttributeInfoList *g_file_attribute_info_list_dup (GFileAttributeInfoList *);
/* /usr/include/glib-2.0/gio/gfileattribute.h:68:NC */ extern const GFileAttributeInfo *g_file_attribute_info_list_lookup (GFileAttributeInfoList *, const char *);
/* /usr/include/glib-2.0/gio/gfileattribute.h:70:NC */ extern void g_file_attribute_info_list_add (GFileAttributeInfoList *, const char *, GFileAttributeType, GFileAttributeInfoFlags);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:99:NC */ extern GType g_file_enumerator_get_type (void);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:101:NC */ extern GFileInfo *g_file_enumerator_next_file (GFileEnumerator *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:104:NC */ extern gboolean g_file_enumerator_close (GFileEnumerator *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:107:NC */ extern void g_file_enumerator_next_files_async (GFileEnumerator *, int, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:113:NC */ extern GList *g_file_enumerator_next_files_finish (GFileEnumerator *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:116:NC */ extern void g_file_enumerator_close_async (GFileEnumerator *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:121:NC */ extern gboolean g_file_enumerator_close_finish (GFileEnumerator *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:124:NC */ extern gboolean g_file_enumerator_is_closed (GFileEnumerator *);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:125:NC */ extern gboolean g_file_enumerator_has_pending (GFileEnumerator *);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:126:NC */ extern void g_file_enumerator_set_pending (GFileEnumerator *, gboolean);
/* /usr/include/glib-2.0/gio/gfileenumerator.h:128:NC */ extern GFile *g_file_enumerator_get_container (GFileEnumerator *);
/* /usr/include/glib-2.0/gio/gfile.h:548:NC */ extern GType g_file_get_type (void);
/* /usr/include/glib-2.0/gio/gfile.h:550:NC */ extern GFile *g_file_new_for_path (const char *);
/* /usr/include/glib-2.0/gio/gfile.h:551:NC */ extern GFile *g_file_new_for_uri (const char *);
/* /usr/include/glib-2.0/gio/gfile.h:552:NC */ extern GFile *g_file_new_for_commandline_arg (const char *);
/* /usr/include/glib-2.0/gio/gfile.h:553:NC */ extern GFile *g_file_parse_name (const char *);
/* /usr/include/glib-2.0/gio/gfile.h:554:NC */ extern GFile *g_file_dup (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:555:NC */ extern guint g_file_hash (gconstpointer);
/* /usr/include/glib-2.0/gio/gfile.h:556:NC */ extern gboolean g_file_equal (GFile *, GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:558:NC */ extern char *g_file_get_basename (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:559:NC */ extern char *g_file_get_path (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:560:NC */ extern char *g_file_get_uri (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:561:NC */ extern char *g_file_get_parse_name (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:562:NC */ extern GFile *g_file_get_parent (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:563:NC */ extern gboolean g_file_has_parent (GFile *, GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:565:NC */ extern GFile *g_file_get_child (GFile *, const char *);
/* /usr/include/glib-2.0/gio/gfile.h:567:NC */ extern GFile *g_file_get_child_for_display_name (GFile *, const char *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:570:NC */ extern gboolean g_file_has_prefix (GFile *, GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:572:NC */ extern char *g_file_get_relative_path (GFile *, GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:574:NC */ extern GFile *g_file_resolve_relative_path (GFile *, const char *);
/* /usr/include/glib-2.0/gio/gfile.h:576:NC */ extern gboolean g_file_is_native (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:577:NC */ extern gboolean g_file_has_uri_scheme (GFile *, const char *);
/* /usr/include/glib-2.0/gio/gfile.h:579:NC */ extern char *g_file_get_uri_scheme (GFile *);
/* /usr/include/glib-2.0/gio/gfile.h:580:NC */ extern GFileInputStream *g_file_read (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:583:NC */ extern void g_file_read_async (GFile *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:588:NC */ extern GFileInputStream *g_file_read_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:591:NC */ extern GFileOutputStream *g_file_append_to (GFile *, GFileCreateFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:595:NC */ extern GFileOutputStream *g_file_create (GFile *, GFileCreateFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:599:NC */ extern GFileOutputStream *g_file_replace (GFile *, const char *, gboolean, GFileCreateFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:605:NC */ extern void g_file_append_to_async (GFile *, GFileCreateFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:611:NC */ extern GFileOutputStream *g_file_append_to_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:614:NC */ extern void g_file_create_async (GFile *, GFileCreateFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:620:NC */ extern GFileOutputStream *g_file_create_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:623:NC */ extern void g_file_replace_async (GFile *, const char *, gboolean, GFileCreateFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:631:NC */ extern GFileOutputStream *g_file_replace_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:634:NC */ extern GFileIOStream *g_file_open_readwrite (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:637:NC */ extern void g_file_open_readwrite_async (GFile *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:642:NC */ extern GFileIOStream *g_file_open_readwrite_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:645:NC */ extern GFileIOStream *g_file_create_readwrite (GFile *, GFileCreateFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:649:NC */ extern void g_file_create_readwrite_async (GFile *, GFileCreateFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:655:NC */ extern GFileIOStream *g_file_create_readwrite_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:658:NC */ extern GFileIOStream *g_file_replace_readwrite (GFile *, const char *, gboolean, GFileCreateFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:664:NC */ extern void g_file_replace_readwrite_async (GFile *, const char *, gboolean, GFileCreateFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:672:NC */ extern GFileIOStream *g_file_replace_readwrite_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:675:NC */ extern gboolean g_file_query_exists (GFile *, GCancellable *);
/* /usr/include/glib-2.0/gio/gfile.h:677:NC */ extern GFileType g_file_query_file_type (GFile *, GFileQueryInfoFlags, GCancellable *);
/* /usr/include/glib-2.0/gio/gfile.h:680:NC */ extern GFileInfo *g_file_query_info (GFile *, const char *, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:685:NC */ extern void g_file_query_info_async (GFile *, const char *, GFileQueryInfoFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:692:NC */ extern GFileInfo *g_file_query_info_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:695:NC */ extern GFileInfo *g_file_query_filesystem_info (GFile *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:699:NC */ extern void g_file_query_filesystem_info_async (GFile *, const char *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:705:NC */ extern GFileInfo *g_file_query_filesystem_info_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:708:NC */ extern GMount *g_file_find_enclosing_mount (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:711:NC */ extern void g_file_find_enclosing_mount_async (GFile *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:716:NC */ extern GMount *g_file_find_enclosing_mount_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:719:NC */ extern GFileEnumerator *g_file_enumerate_children (GFile *, const char *, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:724:NC */ extern void g_file_enumerate_children_async (GFile *, const char *, GFileQueryInfoFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:731:NC */ extern GFileEnumerator *g_file_enumerate_children_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:734:NC */ extern GFile *g_file_set_display_name (GFile *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:738:NC */ extern void g_file_set_display_name_async (GFile *, const char *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:744:NC */ extern GFile *g_file_set_display_name_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:747:NC */ extern gboolean g_file_delete (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:750:NC */ extern gboolean g_file_trash (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:753:NC */ extern gboolean g_file_copy (GFile *, GFile *, GFileCopyFlags, GCancellable *, GFileProgressCallback, gpointer, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:760:NC */ extern void g_file_copy_async (GFile *, GFile *, GFileCopyFlags, int, GCancellable *, GFileProgressCallback, gpointer, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:769:NC */ extern gboolean g_file_copy_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:772:NC */ extern gboolean g_file_move (GFile *, GFile *, GFileCopyFlags, GCancellable *, GFileProgressCallback, gpointer, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:779:NC */ extern gboolean g_file_make_directory (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:782:NC */ extern gboolean g_file_make_directory_with_parents (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:785:NC */ extern gboolean g_file_make_symbolic_link (GFile *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:789:NC */ extern GFileAttributeInfoList *g_file_query_settable_attributes (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:792:NC */ extern GFileAttributeInfoList *g_file_query_writable_namespaces (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:795:NC */ extern gboolean g_file_set_attribute (GFile *, const char *, GFileAttributeType, gpointer, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:802:NC */ extern gboolean g_file_set_attributes_from_info (GFile *, GFileInfo *, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:807:NC */ extern void g_file_set_attributes_async (GFile *, GFileInfo *, GFileQueryInfoFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:814:NC */ extern gboolean g_file_set_attributes_finish (GFile *, GAsyncResult *, GFileInfo **, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:818:NC */ extern gboolean g_file_set_attribute_string (GFile *, const char *, const char *, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:824:NC */ extern gboolean g_file_set_attribute_byte_string (GFile *, const char *, const char *, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:830:NC */ extern gboolean g_file_set_attribute_uint32 (GFile *, const char *, guint32, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:836:NC */ extern gboolean g_file_set_attribute_int32 (GFile *, const char *, gint32, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:842:NC */ extern gboolean g_file_set_attribute_uint64 (GFile *, const char *, guint64, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:848:NC */ extern gboolean g_file_set_attribute_int64 (GFile *, const char *, gint64, GFileQueryInfoFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:854:NC */ extern void g_file_mount_enclosing_volume (GFile *, GMountMountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:860:NC */ extern gboolean g_file_mount_enclosing_volume_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:863:NC */ extern void g_file_mount_mountable (GFile *, GMountMountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:869:NC */ extern GFile *g_file_mount_mountable_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:873:NC */ extern void g_file_unmount_mountable (GFile *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:878:NC */ extern gboolean g_file_unmount_mountable_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:882:NC */ extern void g_file_unmount_mountable_with_operation (GFile *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:888:NC */ extern gboolean g_file_unmount_mountable_with_operation_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:892:NC */ extern void g_file_eject_mountable (GFile *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:897:NC */ extern gboolean g_file_eject_mountable_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:901:NC */ extern void g_file_eject_mountable_with_operation (GFile *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:907:NC */ extern gboolean g_file_eject_mountable_with_operation_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:911:NC */ extern gboolean g_file_copy_attributes (GFile *, GFile *, GFileCopyFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:918:NC */ extern GFileMonitor *g_file_monitor_directory (GFile *, GFileMonitorFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:922:NC */ extern GFileMonitor *g_file_monitor_file (GFile *, GFileMonitorFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:926:NC */ extern GFileMonitor *g_file_monitor (GFile *, GFileMonitorFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:931:NC */ extern void g_file_start_mountable (GFile *, GDriveStartFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:937:NC */ extern gboolean g_file_start_mountable_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:940:NC */ extern void g_file_stop_mountable (GFile *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:946:NC */ extern gboolean g_file_stop_mountable_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:950:NC */ extern void g_file_poll_mountable (GFile *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:954:NC */ extern gboolean g_file_poll_mountable_finish (GFile *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:960:NC */ extern GAppInfo *g_file_query_default_handler (GFile *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:963:NC */ extern gboolean g_file_load_contents (GFile *, GCancellable *, char **, gsize *, char **, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:969:NC */ extern void g_file_load_contents_async (GFile *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:973:NC */ extern gboolean g_file_load_contents_finish (GFile *, GAsyncResult *, char **, gsize *, char **, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:979:NC */ extern void g_file_load_partial_contents_async (GFile *, GCancellable *, GFileReadMoreCallback, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:984:NC */ extern gboolean g_file_load_partial_contents_finish (GFile *, GAsyncResult *, char **, gsize *, char **, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:990:NC */ extern gboolean g_file_replace_contents (GFile *, const char *, gsize, const char *, gboolean, GFileCreateFlags, char **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:999:NC */ extern void g_file_replace_contents_async (GFile *, const char *, gsize, const char *, gboolean, GFileCreateFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfile.h:1008:NC */ extern gboolean g_file_replace_contents_finish (GFile *, GAsyncResult *, char **, GError **);
/* /usr/include/glib-2.0/gio/gfile.h:1013:NC */ extern gboolean g_file_supports_thread_contexts (GFile *);
/* /usr/include/glib-2.0/gio/gfileicon.h:48:NC */ extern GType g_file_icon_get_type (void);
/* /usr/include/glib-2.0/gio/gfileicon.h:50:NC */ extern GIcon *g_file_icon_new (GFile *);
/* /usr/include/glib-2.0/gio/gfileicon.h:52:NC */ extern GFile *g_file_icon_get_file (GFileIcon *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:810:NC */ extern GType g_file_info_get_type (void);
/* /usr/include/glib-2.0/gio/gfileinfo.h:812:NC */ extern GFileInfo *g_file_info_new (void);
/* /usr/include/glib-2.0/gio/gfileinfo.h:813:NC */ extern GFileInfo *g_file_info_dup (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:814:NC */ extern void g_file_info_copy_into (GFileInfo *, GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:816:NC */ extern gboolean g_file_info_has_attribute (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:818:NC */ extern gboolean g_file_info_has_namespace (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:820:NC */ extern char **g_file_info_list_attributes (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:822:NC */ extern gboolean g_file_info_get_attribute_data (GFileInfo *, const char *, GFileAttributeType *, gpointer *, GFileAttributeStatus *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:827:NC */ extern GFileAttributeType g_file_info_get_attribute_type (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:829:NC */ extern void g_file_info_remove_attribute (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:831:NC */ extern GFileAttributeStatus g_file_info_get_attribute_status (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:833:NC */ extern gboolean g_file_info_set_attribute_status (GFileInfo *, const char *, GFileAttributeStatus);
/* /usr/include/glib-2.0/gio/gfileinfo.h:836:NC */ extern char *g_file_info_get_attribute_as_string (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:838:NC */ extern const char *g_file_info_get_attribute_string (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:840:NC */ extern const char *g_file_info_get_attribute_byte_string (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:842:NC */ extern gboolean g_file_info_get_attribute_boolean (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:844:NC */ extern guint32 g_file_info_get_attribute_uint32 (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:846:NC */ extern gint32 g_file_info_get_attribute_int32 (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:848:NC */ extern guint64 g_file_info_get_attribute_uint64 (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:850:NC */ extern gint64 g_file_info_get_attribute_int64 (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:852:NC */ extern GObject *g_file_info_get_attribute_object (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:854:NC */ extern char **g_file_info_get_attribute_stringv (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:857:NC */ extern void g_file_info_set_attribute (GFileInfo *, const char *, GFileAttributeType, gpointer);
/* /usr/include/glib-2.0/gio/gfileinfo.h:861:NC */ extern void g_file_info_set_attribute_string (GFileInfo *, const char *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:864:NC */ extern void g_file_info_set_attribute_byte_string (GFileInfo *, const char *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:867:NC */ extern void g_file_info_set_attribute_boolean (GFileInfo *, const char *, gboolean);
/* /usr/include/glib-2.0/gio/gfileinfo.h:870:NC */ extern void g_file_info_set_attribute_uint32 (GFileInfo *, const char *, guint32);
/* /usr/include/glib-2.0/gio/gfileinfo.h:873:NC */ extern void g_file_info_set_attribute_int32 (GFileInfo *, const char *, gint32);
/* /usr/include/glib-2.0/gio/gfileinfo.h:876:NC */ extern void g_file_info_set_attribute_uint64 (GFileInfo *, const char *, guint64);
/* /usr/include/glib-2.0/gio/gfileinfo.h:879:NC */ extern void g_file_info_set_attribute_int64 (GFileInfo *, const char *, gint64);
/* /usr/include/glib-2.0/gio/gfileinfo.h:882:NC */ extern void g_file_info_set_attribute_object (GFileInfo *, const char *, GObject *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:885:NC */ extern void g_file_info_set_attribute_stringv (GFileInfo *, const char *, char **);
/* /usr/include/glib-2.0/gio/gfileinfo.h:889:NC */ extern void g_file_info_clear_status (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:892:NC */ extern GFileType g_file_info_get_file_type (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:893:NC */ extern gboolean g_file_info_get_is_hidden (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:894:NC */ extern gboolean g_file_info_get_is_backup (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:895:NC */ extern gboolean g_file_info_get_is_symlink (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:896:NC */ extern const char *g_file_info_get_name (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:897:NC */ extern const char *g_file_info_get_display_name (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:898:NC */ extern const char *g_file_info_get_edit_name (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:899:NC */ extern GIcon *g_file_info_get_icon (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:900:NC */ extern const char *g_file_info_get_content_type (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:901:NC */ extern goffset g_file_info_get_size (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:902:NC */ extern void g_file_info_get_modification_time (GFileInfo *, GTimeVal *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:904:NC */ extern const char *g_file_info_get_symlink_target (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:905:NC */ extern const char *g_file_info_get_etag (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:906:NC */ extern gint32 g_file_info_get_sort_order (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:908:NC */ extern void g_file_info_set_attribute_mask (GFileInfo *, GFileAttributeMatcher *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:910:NC */ extern void g_file_info_unset_attribute_mask (GFileInfo *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:913:NC */ extern void g_file_info_set_file_type (GFileInfo *, GFileType);
/* /usr/include/glib-2.0/gio/gfileinfo.h:915:NC */ extern void g_file_info_set_is_hidden (GFileInfo *, gboolean);
/* /usr/include/glib-2.0/gio/gfileinfo.h:917:NC */ extern void g_file_info_set_is_symlink (GFileInfo *, gboolean);
/* /usr/include/glib-2.0/gio/gfileinfo.h:919:NC */ extern void g_file_info_set_name (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:921:NC */ extern void g_file_info_set_display_name (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:923:NC */ extern void g_file_info_set_edit_name (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:925:NC */ extern void g_file_info_set_icon (GFileInfo *, GIcon *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:927:NC */ extern void g_file_info_set_content_type (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:929:NC */ extern void g_file_info_set_size (GFileInfo *, goffset);
/* /usr/include/glib-2.0/gio/gfileinfo.h:931:NC */ extern void g_file_info_set_modification_time (GFileInfo *, GTimeVal *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:933:NC */ extern void g_file_info_set_symlink_target (GFileInfo *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:935:NC */ extern void g_file_info_set_sort_order (GFileInfo *, gint32);
/* /usr/include/glib-2.0/gio/gfileinfo.h:938:NC */ extern GType g_file_attribute_matcher_get_type (void);
/* /usr/include/glib-2.0/gio/gfileinfo.h:939:NC */ extern GFileAttributeMatcher *g_file_attribute_matcher_new (const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:940:NC */ extern GFileAttributeMatcher *g_file_attribute_matcher_ref (GFileAttributeMatcher *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:941:NC */ extern void g_file_attribute_matcher_unref (GFileAttributeMatcher *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:942:NC */ extern gboolean g_file_attribute_matcher_matches (GFileAttributeMatcher *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:944:NC */ extern gboolean g_file_attribute_matcher_matches_only (GFileAttributeMatcher *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:946:NC */ extern gboolean g_file_attribute_matcher_enumerate_namespace (GFileAttributeMatcher *, const char *);
/* /usr/include/glib-2.0/gio/gfileinfo.h:948:NC */ extern const char *g_file_attribute_matcher_enumerate_next (GFileAttributeMatcher *);
/* /usr/include/glib-2.0/gio/gfileinputstream.h:94:NC */ extern GType g_file_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gfileinputstream.h:96:NC */ extern GFileInfo *g_file_input_stream_query_info (GFileInputStream *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfileinputstream.h:100:NC */ extern void g_file_input_stream_query_info_async (GFileInputStream *, const char *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfileinputstream.h:106:NC */ extern GFileInfo *g_file_input_stream_query_info_finish (GFileInputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gioerror.h:43:NC */ extern GQuark g_io_error_quark (void);
/* /usr/include/glib-2.0/gio/gioerror.h:44:NC */ extern GIOErrorEnum g_io_error_from_errno (gint);
/* /usr/include/glib-2.0/gio/giostream.h:86:NC */ extern GType g_io_stream_get_type (void);
/* /usr/include/glib-2.0/gio/giostream.h:88:NC */ extern GInputStream *g_io_stream_get_input_stream (GIOStream *);
/* /usr/include/glib-2.0/gio/giostream.h:89:NC */ extern GOutputStream *g_io_stream_get_output_stream (GIOStream *);
/* /usr/include/glib-2.0/gio/giostream.h:91:NC */ extern void g_io_stream_splice_async (GIOStream *, GIOStream *, GIOStreamSpliceFlags, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/giostream.h:99:NC */ extern gboolean g_io_stream_splice_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/giostream.h:102:NC */ extern gboolean g_io_stream_close (GIOStream *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/giostream.h:106:NC */ extern void g_io_stream_close_async (GIOStream *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/giostream.h:111:NC */ extern gboolean g_io_stream_close_finish (GIOStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/giostream.h:115:NC */ extern gboolean g_io_stream_is_closed (GIOStream *);
/* /usr/include/glib-2.0/gio/giostream.h:116:NC */ extern gboolean g_io_stream_has_pending (GIOStream *);
/* /usr/include/glib-2.0/gio/giostream.h:117:NC */ extern gboolean g_io_stream_set_pending (GIOStream *, GError **);
/* /usr/include/glib-2.0/gio/giostream.h:119:NC */ extern void g_io_stream_clear_pending (GIOStream *);
/* /usr/include/glib-2.0/gio/gfileiostream.h:99:NC */ extern GType g_file_io_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gfileiostream.h:101:NC */ extern GFileInfo *g_file_io_stream_query_info (GFileIOStream *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfileiostream.h:105:NC */ extern void g_file_io_stream_query_info_async (GFileIOStream *, const char *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfileiostream.h:111:NC */ extern GFileInfo *g_file_io_stream_query_info_finish (GFileIOStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfileiostream.h:114:NC */ extern char *g_file_io_stream_get_etag (GFileIOStream *);
/* /usr/include/glib-2.0/gio/gfilemonitor.h:79:NC */ extern GType g_file_monitor_get_type (void);
/* /usr/include/glib-2.0/gio/gfilemonitor.h:81:NC */ extern gboolean g_file_monitor_cancel (GFileMonitor *);
/* /usr/include/glib-2.0/gio/gfilemonitor.h:82:NC */ extern gboolean g_file_monitor_is_cancelled (GFileMonitor *);
/* /usr/include/glib-2.0/gio/gfilemonitor.h:83:NC */ extern void g_file_monitor_set_rate_limit (GFileMonitor *, gint);
/* /usr/include/glib-2.0/gio/gfilemonitor.h:88:NC */ extern void g_file_monitor_emit_event (GFileMonitor *, GFile *, GFile *, GFileMonitorEvent);
/* /usr/include/glib-2.0/gio/gfilenamecompleter.h:63:NC */ extern GType g_filename_completer_get_type (void);
/* /usr/include/glib-2.0/gio/gfilenamecompleter.h:65:NC */ extern GFilenameCompleter *g_filename_completer_new (void);
/* /usr/include/glib-2.0/gio/gfilenamecompleter.h:67:NC */ extern char *g_filename_completer_get_completion_suffix (GFilenameCompleter *, const char *);
/* /usr/include/glib-2.0/gio/gfilenamecompleter.h:69:NC */ extern char **g_filename_completer_get_completions (GFilenameCompleter *, const char *);
/* /usr/include/glib-2.0/gio/gfilenamecompleter.h:71:NC */ extern void g_filename_completer_set_dirs_only (GFilenameCompleter *, gboolean);
/* /usr/include/glib-2.0/gio/gfileoutputstream.h:99:NC */ extern GType g_file_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gfileoutputstream.h:102:NC */ extern GFileInfo *g_file_output_stream_query_info (GFileOutputStream *, const char *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gfileoutputstream.h:106:NC */ extern void g_file_output_stream_query_info_async (GFileOutputStream *, const char *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gfileoutputstream.h:112:NC */ extern GFileInfo *g_file_output_stream_query_info_finish (GFileOutputStream *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gfileoutputstream.h:115:NC */ extern char *g_file_output_stream_get_etag (GFileOutputStream *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:61:NC */ extern GType g_inet_address_get_type (void);
/* /usr/include/glib-2.0/gio/ginetaddress.h:63:NC */ extern GInetAddress *g_inet_address_new_from_string (const gchar *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:65:NC */ extern GInetAddress *g_inet_address_new_from_bytes (const guint8 *, GSocketFamily);
/* /usr/include/glib-2.0/gio/ginetaddress.h:68:NC */ extern GInetAddress *g_inet_address_new_loopback (GSocketFamily);
/* /usr/include/glib-2.0/gio/ginetaddress.h:70:NC */ extern GInetAddress *g_inet_address_new_any (GSocketFamily);
/* /usr/include/glib-2.0/gio/ginetaddress.h:72:NC */ extern gboolean g_inet_address_equal (GInetAddress *, GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:75:NC */ extern gchar *g_inet_address_to_string (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:77:NC */ extern const guint8 *g_inet_address_to_bytes (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:79:NC */ extern gsize g_inet_address_get_native_size (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:81:NC */ extern GSocketFamily g_inet_address_get_family (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:83:NC */ extern gboolean g_inet_address_get_is_any (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:85:NC */ extern gboolean g_inet_address_get_is_loopback (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:87:NC */ extern gboolean g_inet_address_get_is_link_local (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:89:NC */ extern gboolean g_inet_address_get_is_site_local (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:91:NC */ extern gboolean g_inet_address_get_is_multicast (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:93:NC */ extern gboolean g_inet_address_get_is_mc_global (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:95:NC */ extern gboolean g_inet_address_get_is_mc_link_local (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:97:NC */ extern gboolean g_inet_address_get_is_mc_node_local (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:99:NC */ extern gboolean g_inet_address_get_is_mc_org_local (GInetAddress *);
/* /usr/include/glib-2.0/gio/ginetaddress.h:101:NC */ extern gboolean g_inet_address_get_is_mc_site_local (GInetAddress *);
/* /usr/include/glib-2.0/gio/gsocketaddress.h:63:NC */ extern GType g_socket_address_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketaddress.h:65:NC */ extern GSocketFamily g_socket_address_get_family (GSocketAddress *);
/* /usr/include/glib-2.0/gio/gsocketaddress.h:67:NC */ extern GSocketAddress *g_socket_address_new_from_native (gpointer, gsize);
/* /usr/include/glib-2.0/gio/gsocketaddress.h:70:NC */ extern gboolean g_socket_address_to_native (GSocketAddress *, gpointer, gsize, GError **);
/* /usr/include/glib-2.0/gio/gsocketaddress.h:75:NC */ extern gssize g_socket_address_get_native_size (GSocketAddress *);
/* /usr/include/glib-2.0/gio/ginetsocketaddress.h:58:NC */ extern GType g_inet_socket_address_get_type (void);
/* /usr/include/glib-2.0/gio/ginetsocketaddress.h:60:NC */ extern GSocketAddress *g_inet_socket_address_new (GInetAddress *, guint16);
/* /usr/include/glib-2.0/gio/ginetsocketaddress.h:63:NC */ extern GInetAddress *g_inet_socket_address_get_address (GInetSocketAddress *);
/* /usr/include/glib-2.0/gio/ginetsocketaddress.h:65:NC */ extern guint16 g_inet_socket_address_get_port (GInetSocketAddress *);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:12:NC */ extern GType g_app_info_create_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:14:NC */ extern GType g_converter_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:16:NC */ extern GType g_converter_result_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:18:NC */ extern GType g_data_stream_byte_order_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:20:NC */ extern GType g_data_stream_newline_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:22:NC */ extern GType g_file_attribute_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:24:NC */ extern GType g_file_attribute_info_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:26:NC */ extern GType g_file_attribute_status_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:28:NC */ extern GType g_file_query_info_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:30:NC */ extern GType g_file_create_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:32:NC */ extern GType g_mount_mount_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:34:NC */ extern GType g_mount_unmount_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:36:NC */ extern GType g_drive_start_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:38:NC */ extern GType g_drive_start_stop_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:40:NC */ extern GType g_file_copy_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:42:NC */ extern GType g_file_monitor_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:44:NC */ extern GType g_file_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:46:NC */ extern GType g_filesystem_preview_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:48:NC */ extern GType g_file_monitor_event_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:50:NC */ extern GType g_io_error_enum_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:52:NC */ extern GType g_ask_password_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:54:NC */ extern GType g_password_save_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:56:NC */ extern GType g_mount_operation_result_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:58:NC */ extern GType g_output_stream_splice_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:60:NC */ extern GType g_io_stream_splice_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:62:NC */ extern GType g_emblem_origin_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:64:NC */ extern GType g_resolver_error_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:66:NC */ extern GType g_socket_family_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:68:NC */ extern GType g_socket_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:70:NC */ extern GType g_socket_msg_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:72:NC */ extern GType g_socket_protocol_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:74:NC */ extern GType g_zlib_compressor_format_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:76:NC */ extern GType g_unix_socket_address_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:78:NC */ extern GType g_bus_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:80:NC */ extern GType g_bus_name_owner_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:82:NC */ extern GType g_bus_name_watcher_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:84:NC */ extern GType g_dbus_proxy_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:86:NC */ extern GType g_dbus_error_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:88:NC */ extern GType g_dbus_connection_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:90:NC */ extern GType g_dbus_capability_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:92:NC */ extern GType g_dbus_call_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:94:NC */ extern GType g_dbus_message_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:96:NC */ extern GType g_dbus_message_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:98:NC */ extern GType g_dbus_message_header_field_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:100:NC */ extern GType g_dbus_property_info_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:102:NC */ extern GType g_dbus_subtree_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:104:NC */ extern GType g_dbus_server_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:106:NC */ extern GType g_dbus_signal_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:108:NC */ extern GType g_dbus_send_message_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:110:NC */ extern GType g_credentials_type_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:112:NC */ extern GType g_dbus_message_byte_order_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:114:NC */ extern GType g_application_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:116:NC */ extern GType g_tls_error_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:118:NC */ extern GType g_tls_certificate_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:120:NC */ extern GType g_tls_authentication_mode_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:122:NC */ extern GType g_tls_rehandshake_mode_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:124:NC */ extern GType g_tls_password_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:126:NC */ extern GType g_tls_interaction_result_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:128:NC */ extern GType g_dbus_interface_skeleton_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:130:NC */ extern GType g_dbus_object_manager_client_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:132:NC */ extern GType g_tls_database_verify_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:134:NC */ extern GType g_tls_database_lookup_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:136:NC */ extern GType g_io_module_scope_flags_get_type (void);
/* /usr/include/glib-2.0/gio/gioenumtypes.h:140:NC */ extern GType g_settings_bind_flags_get_type (void);
/* /usr/include/glib-2.0/gmodule.h:61:NC */ extern gboolean g_module_supported (void);
/* /usr/include/glib-2.0/gmodule.h:64:NC */ extern GModule *g_module_open (const gchar *, GModuleFlags);
/* /usr/include/glib-2.0/gmodule.h:68:NC */ extern gboolean g_module_close (GModule *);
/* /usr/include/glib-2.0/gmodule.h:71:NC */ extern void g_module_make_resident (GModule *);
/* /usr/include/glib-2.0/gmodule.h:74:NC */ extern const gchar *g_module_error (void);
/* /usr/include/glib-2.0/gmodule.h:77:NC */ extern gboolean g_module_symbol (GModule *, const gchar *, gpointer *);
/* /usr/include/glib-2.0/gmodule.h:82:NC */ extern const gchar *g_module_name (GModule *);
/* /usr/include/glib-2.0/gmodule.h:95:NC */ extern gchar *g_module_build_path (const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/giomodule.h:37:NC */ extern GIOModuleScope *g_io_module_scope_new (GIOModuleScopeFlags);
/* /usr/include/glib-2.0/gio/giomodule.h:38:NC */ extern void g_io_module_scope_free (GIOModuleScope *);
/* /usr/include/glib-2.0/gio/giomodule.h:39:NC */ extern void g_io_module_scope_block (GIOModuleScope *, const gchar *);
/* /usr/include/glib-2.0/gio/giomodule.h:56:NC */ extern GType g_io_module_get_type (void);
/* /usr/include/glib-2.0/gio/giomodule.h:57:NC */ extern GIOModule *g_io_module_new (const gchar *);
/* /usr/include/glib-2.0/gio/giomodule.h:59:NC */ extern void g_io_modules_scan_all_in_directory (const char *);
/* /usr/include/glib-2.0/gio/giomodule.h:60:NC */ extern GList *g_io_modules_load_all_in_directory (const gchar *);
/* /usr/include/glib-2.0/gio/giomodule.h:62:NC */ extern void g_io_modules_scan_all_in_directory_with_scope (const gchar *, GIOModuleScope *);
/* /usr/include/glib-2.0/gio/giomodule.h:64:NC */ extern GList *g_io_modules_load_all_in_directory_with_scope (const gchar *, GIOModuleScope *);
/* /usr/include/glib-2.0/gio/giomodule.h:67:NC */ extern GIOExtensionPoint *g_io_extension_point_register (const char *);
/* /usr/include/glib-2.0/gio/giomodule.h:68:NC */ extern GIOExtensionPoint *g_io_extension_point_lookup (const char *);
/* /usr/include/glib-2.0/gio/giomodule.h:69:NC */ extern void g_io_extension_point_set_required_type (GIOExtensionPoint *, GType);
/* /usr/include/glib-2.0/gio/giomodule.h:71:NC */ extern GType g_io_extension_point_get_required_type (GIOExtensionPoint *);
/* /usr/include/glib-2.0/gio/giomodule.h:72:NC */ extern GList *g_io_extension_point_get_extensions (GIOExtensionPoint *);
/* /usr/include/glib-2.0/gio/giomodule.h:73:NC */ extern GIOExtension *g_io_extension_point_get_extension_by_name (GIOExtensionPoint *, const char *);
/* /usr/include/glib-2.0/gio/giomodule.h:75:NC */ extern GIOExtension *g_io_extension_point_implement (const char *, GType, const char *, gint);
/* /usr/include/glib-2.0/gio/giomodule.h:80:NC */ extern GType g_io_extension_get_type (GIOExtension *);
/* /usr/include/glib-2.0/gio/giomodule.h:81:NC */ extern const char *g_io_extension_get_name (GIOExtension *);
/* /usr/include/glib-2.0/gio/giomodule.h:82:NC */ extern gint g_io_extension_get_priority (GIOExtension *);
/* /usr/include/glib-2.0/gio/giomodule.h:83:NC */ extern GTypeClass *g_io_extension_ref_class (GIOExtension *);
/* /usr/include/glib-2.0/gio/giomodule.h:96:NC */ extern void g_io_module_load (GIOModule *);
/* /usr/include/glib-2.0/gio/giomodule.h:106:NC */ extern void g_io_module_unload (GIOModule *);
/* /usr/include/glib-2.0/gio/giomodule.h:140:NC */ extern char **g_io_module_query (void);
/* /usr/include/glib-2.0/gio/gioscheduler.h:35:NC */ extern void g_io_scheduler_push_job (GIOSchedulerJobFunc, gpointer, GDestroyNotify, gint, GCancellable *);
/* /usr/include/glib-2.0/gio/gioscheduler.h:40:NC */ extern void g_io_scheduler_cancel_all_jobs (void);
/* /usr/include/glib-2.0/gio/gioscheduler.h:41:NC */ extern gboolean g_io_scheduler_job_send_to_mainloop (GIOSchedulerJob *, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gioscheduler.h:45:NC */ extern void g_io_scheduler_job_send_to_mainloop_async (GIOSchedulerJob *, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gloadableicon.h:78:NC */ extern GType g_loadable_icon_get_type (void);
/* /usr/include/glib-2.0/gio/gloadableicon.h:80:NC */ extern GInputStream *g_loadable_icon_load (GLoadableIcon *, int, char **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gloadableicon.h:85:NC */ extern void g_loadable_icon_load_async (GLoadableIcon *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gloadableicon.h:90:NC */ extern GInputStream *g_loadable_icon_load_finish (GLoadableIcon *, GAsyncResult *, char **, GError **);
/* /usr/include/glib-2.0/gio/gmemoryinputstream.h:70:NC */ extern GType g_memory_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gmemoryinputstream.h:71:NC */ extern GInputStream *g_memory_input_stream_new (void);
/* /usr/include/glib-2.0/gio/gmemoryinputstream.h:72:NC */ extern GInputStream *g_memory_input_stream_new_from_data (const void *, gssize, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gmemoryinputstream.h:75:NC */ extern void g_memory_input_stream_add_data (GMemoryInputStream *, const void *, gssize, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gmemoryoutputstream.h:85:NC */ extern GType g_memory_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gmemoryoutputstream.h:87:NC */ extern GOutputStream *g_memory_output_stream_new (gpointer, gsize, GReallocFunc, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gmemoryoutputstream.h:91:NC */ extern gpointer g_memory_output_stream_get_data (GMemoryOutputStream *);
/* /usr/include/glib-2.0/gio/gmemoryoutputstream.h:92:NC */ extern gsize g_memory_output_stream_get_size (GMemoryOutputStream *);
/* /usr/include/glib-2.0/gio/gmemoryoutputstream.h:93:NC */ extern gsize g_memory_output_stream_get_data_size (GMemoryOutputStream *);
/* /usr/include/glib-2.0/gio/gmemoryoutputstream.h:94:NC */ extern gpointer g_memory_output_stream_steal_data (GMemoryOutputStream *);
/* /usr/include/glib-2.0/gio/gmount.h:161:NC */ extern GType g_mount_get_type (void);
/* /usr/include/glib-2.0/gio/gmount.h:163:NC */ extern GFile *g_mount_get_root (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:164:NC */ extern GFile *g_mount_get_default_location (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:165:NC */ extern char *g_mount_get_name (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:166:NC */ extern GIcon *g_mount_get_icon (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:167:NC */ extern char *g_mount_get_uuid (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:168:NC */ extern GVolume *g_mount_get_volume (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:169:NC */ extern GDrive *g_mount_get_drive (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:170:NC */ extern gboolean g_mount_can_unmount (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:171:NC */ extern gboolean g_mount_can_eject (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:174:NC */ extern void g_mount_unmount (GMount *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gmount.h:179:NC */ extern gboolean g_mount_unmount_finish (GMount *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gmount.h:183:NC */ extern void g_mount_eject (GMount *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gmount.h:188:NC */ extern gboolean g_mount_eject_finish (GMount *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gmount.h:193:NC */ extern void g_mount_remount (GMount *, GMountMountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gmount.h:199:NC */ extern gboolean g_mount_remount_finish (GMount *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gmount.h:203:NC */ extern void g_mount_guess_content_type (GMount *, gboolean, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gmount.h:208:NC */ extern gchar **g_mount_guess_content_type_finish (GMount *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gmount.h:211:NC */ extern gchar **g_mount_guess_content_type_sync (GMount *, gboolean, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gmount.h:216:NC */ extern gboolean g_mount_is_shadowed (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:217:NC */ extern void g_mount_shadow (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:218:NC */ extern void g_mount_unshadow (GMount *);
/* /usr/include/glib-2.0/gio/gmount.h:220:NC */ extern void g_mount_unmount_with_operation (GMount *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gmount.h:226:NC */ extern gboolean g_mount_unmount_with_operation_finish (GMount *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gmount.h:230:NC */ extern void g_mount_eject_with_operation (GMount *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gmount.h:236:NC */ extern gboolean g_mount_eject_with_operation_finish (GMount *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gmountoperation.h:97:NC */ extern GType g_mount_operation_get_type (void);
/* /usr/include/glib-2.0/gio/gmountoperation.h:98:NC */ extern GMountOperation *g_mount_operation_new (void);
/* /usr/include/glib-2.0/gio/gmountoperation.h:100:NC */ extern const char *g_mount_operation_get_username (GMountOperation *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:101:NC */ extern void g_mount_operation_set_username (GMountOperation *, const char *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:103:NC */ extern const char *g_mount_operation_get_password (GMountOperation *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:104:NC */ extern void g_mount_operation_set_password (GMountOperation *, const char *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:106:NC */ extern gboolean g_mount_operation_get_anonymous (GMountOperation *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:107:NC */ extern void g_mount_operation_set_anonymous (GMountOperation *, gboolean);
/* /usr/include/glib-2.0/gio/gmountoperation.h:109:NC */ extern const char *g_mount_operation_get_domain (GMountOperation *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:110:NC */ extern void g_mount_operation_set_domain (GMountOperation *, const char *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:112:NC */ extern GPasswordSave g_mount_operation_get_password_save (GMountOperation *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:113:NC */ extern void g_mount_operation_set_password_save (GMountOperation *, GPasswordSave);
/* /usr/include/glib-2.0/gio/gmountoperation.h:115:NC */ extern int g_mount_operation_get_choice (GMountOperation *);
/* /usr/include/glib-2.0/gio/gmountoperation.h:116:NC */ extern void g_mount_operation_set_choice (GMountOperation *, int);
/* /usr/include/glib-2.0/gio/gmountoperation.h:118:NC */ extern void g_mount_operation_reply (GMountOperation *, GMountOperationResult);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:133:NC */ extern GType g_volume_monitor_get_type (void);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:135:NC */ extern GVolumeMonitor *g_volume_monitor_get (void);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:136:NC */ extern GList *g_volume_monitor_get_connected_drives (GVolumeMonitor *);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:137:NC */ extern GList *g_volume_monitor_get_volumes (GVolumeMonitor *);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:138:NC */ extern GList *g_volume_monitor_get_mounts (GVolumeMonitor *);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:139:NC */ extern GVolume *g_volume_monitor_get_volume_for_uuid (GVolumeMonitor *, const char *);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:141:NC */ extern GMount *g_volume_monitor_get_mount_for_uuid (GVolumeMonitor *, const char *);
/* /usr/include/glib-2.0/gio/gvolumemonitor.h:145:NC */ extern GVolume *g_volume_monitor_adopt_orphan_mount (GMount *);
/* /usr/include/glib-2.0/gio/gnativevolumemonitor.h:58:NC */ extern GType g_native_volume_monitor_get_type (void);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:56:NC */ extern GType g_network_address_get_type (void);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:58:NC */ extern GSocketConnectable *g_network_address_new (const gchar *, guint16);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:60:NC */ extern GSocketConnectable *g_network_address_parse (const gchar *, guint16, GError **);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:63:NC */ extern GSocketConnectable *g_network_address_parse_uri (const gchar *, guint16, GError **);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:66:NC */ extern const gchar *g_network_address_get_hostname (GNetworkAddress *);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:67:NC */ extern guint16 g_network_address_get_port (GNetworkAddress *);
/* /usr/include/glib-2.0/gio/gnetworkaddress.h:68:NC */ extern const gchar *g_network_address_get_scheme (GNetworkAddress *);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:56:NC */ extern GType g_network_service_get_type (void);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:58:NC */ extern GSocketConnectable *g_network_service_new (const gchar *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:62:NC */ extern const gchar *g_network_service_get_service (GNetworkService *);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:63:NC */ extern const gchar *g_network_service_get_protocol (GNetworkService *);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:64:NC */ extern const gchar *g_network_service_get_domain (GNetworkService *);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:65:NC */ extern const gchar *g_network_service_get_scheme (GNetworkService *);
/* /usr/include/glib-2.0/gio/gnetworkservice.h:66:NC */ extern void g_network_service_set_scheme (GNetworkService *, const gchar *);
/* /usr/include/glib-2.0/gio/gpermission.h:84:NC */ extern GType g_permission_get_type (void);
/* /usr/include/glib-2.0/gio/gpermission.h:85:NC */ extern gboolean g_permission_acquire (GPermission *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gpermission.h:88:NC */ extern void g_permission_acquire_async (GPermission *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gpermission.h:92:NC */ extern gboolean g_permission_acquire_finish (GPermission *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gpermission.h:96:NC */ extern gboolean g_permission_release (GPermission *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gpermission.h:99:NC */ extern void g_permission_release_async (GPermission *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gpermission.h:103:NC */ extern gboolean g_permission_release_finish (GPermission *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gpermission.h:107:NC */ extern gboolean g_permission_get_allowed (GPermission *);
/* /usr/include/glib-2.0/gio/gpermission.h:108:NC */ extern gboolean g_permission_get_can_acquire (GPermission *);
/* /usr/include/glib-2.0/gio/gpermission.h:109:NC */ extern gboolean g_permission_get_can_release (GPermission *);
/* /usr/include/glib-2.0/gio/gpermission.h:111:NC */ extern void g_permission_impl_update (GPermission *, gboolean, gboolean, gboolean);
/* /usr/include/glib-2.0/gio/gpollableinputstream.h:80:NC */ extern GType g_pollable_input_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gpollableinputstream.h:82:NC */ extern gboolean g_pollable_input_stream_can_poll (GPollableInputStream *);
/* /usr/include/glib-2.0/gio/gpollableinputstream.h:84:NC */ extern gboolean g_pollable_input_stream_is_readable (GPollableInputStream *);
/* /usr/include/glib-2.0/gio/gpollableinputstream.h:85:NC */ extern GSource *g_pollable_input_stream_create_source (GPollableInputStream *, GCancellable *);
/* /usr/include/glib-2.0/gio/gpollableinputstream.h:88:NC */ extern gssize g_pollable_input_stream_read_nonblocking (GPollableInputStream *, void *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gpollableinputstream.h:95:NC */ extern GSource *g_pollable_source_new (GObject *);
/* /usr/include/glib-2.0/gio/gpollableoutputstream.h:80:NC */ extern GType g_pollable_output_stream_get_type (void);
/* /usr/include/glib-2.0/gio/gpollableoutputstream.h:82:NC */ extern gboolean g_pollable_output_stream_can_poll (GPollableOutputStream *);
/* /usr/include/glib-2.0/gio/gpollableoutputstream.h:84:NC */ extern gboolean g_pollable_output_stream_is_writable (GPollableOutputStream *);
/* /usr/include/glib-2.0/gio/gpollableoutputstream.h:85:NC */ extern GSource *g_pollable_output_stream_create_source (GPollableOutputStream *, GCancellable *);
/* /usr/include/glib-2.0/gio/gpollableoutputstream.h:88:NC */ extern gssize g_pollable_output_stream_write_nonblocking (GPollableOutputStream *, const void *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gproxy.h:98:NC */ extern GType g_proxy_get_type (void);
/* /usr/include/glib-2.0/gio/gproxy.h:100:NC */ extern GProxy *g_proxy_get_default_for_protocol (const gchar *);
/* /usr/include/glib-2.0/gio/gproxy.h:102:NC */ extern GIOStream *g_proxy_connect (GProxy *, GIOStream *, GProxyAddress *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gproxy.h:108:NC */ extern void g_proxy_connect_async (GProxy *, GIOStream *, GProxyAddress *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gproxy.h:115:NC */ extern GIOStream *g_proxy_connect_finish (GProxy *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gproxy.h:119:NC */ extern gboolean g_proxy_supports_hostname (GProxy *);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:58:NC */ extern GType g_proxy_address_get_type (void);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:60:NC */ extern GSocketAddress *g_proxy_address_new (GInetAddress *, guint16, const gchar *, const gchar *, guint16, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:68:NC */ extern const gchar *g_proxy_address_get_protocol (GProxyAddress *);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:69:NC */ extern const gchar *g_proxy_address_get_destination_hostname (GProxyAddress *);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:70:NC */ extern guint16 g_proxy_address_get_destination_port (GProxyAddress *);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:71:NC */ extern const gchar *g_proxy_address_get_username (GProxyAddress *);
/* /usr/include/glib-2.0/gio/gproxyaddress.h:72:NC */ extern const gchar *g_proxy_address_get_password (GProxyAddress *);
/* /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:72:NC */ extern GType g_socket_address_enumerator_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:74:NC */ extern GSocketAddress *g_socket_address_enumerator_next (GSocketAddressEnumerator *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:78:NC */ extern void g_socket_address_enumerator_next_async (GSocketAddressEnumerator *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:82:NC */ extern GSocketAddress *g_socket_address_enumerator_next_finish (GSocketAddressEnumerator *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gproxyaddressenumerator.h:71:NC */ extern GType g_proxy_address_enumerator_get_type (void);
/* /usr/include/glib-2.0/gio/gproxyresolver.h:76:NC */ extern GType g_proxy_resolver_get_type (void);
/* /usr/include/glib-2.0/gio/gproxyresolver.h:77:NC */ extern GProxyResolver *g_proxy_resolver_get_default (void);
/* /usr/include/glib-2.0/gio/gproxyresolver.h:79:NC */ extern gboolean g_proxy_resolver_is_supported (GProxyResolver *);
/* /usr/include/glib-2.0/gio/gproxyresolver.h:80:NC */ extern gchar **g_proxy_resolver_lookup (GProxyResolver *, const gchar *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gproxyresolver.h:84:NC */ extern void g_proxy_resolver_lookup_async (GProxyResolver *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gproxyresolver.h:89:NC */ extern gchar **g_proxy_resolver_lookup_finish (GProxyResolver *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:104:NC */ extern GType g_resolver_get_type (void);
/* /usr/include/glib-2.0/gio/gresolver.h:105:NC */ extern GResolver *g_resolver_get_default (void);
/* /usr/include/glib-2.0/gio/gresolver.h:106:NC */ extern void g_resolver_set_default (GResolver *);
/* /usr/include/glib-2.0/gio/gresolver.h:108:NC */ extern GList *g_resolver_lookup_by_name (GResolver *, const gchar *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:112:NC */ extern void g_resolver_lookup_by_name_async (GResolver *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gresolver.h:117:NC */ extern GList *g_resolver_lookup_by_name_finish (GResolver *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:121:NC */ extern void g_resolver_free_addresses (GList *);
/* /usr/include/glib-2.0/gio/gresolver.h:123:NC */ extern gchar *g_resolver_lookup_by_address (GResolver *, GInetAddress *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:127:NC */ extern void g_resolver_lookup_by_address_async (GResolver *, GInetAddress *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gresolver.h:132:NC */ extern gchar *g_resolver_lookup_by_address_finish (GResolver *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:136:NC */ extern GList *g_resolver_lookup_service (GResolver *, const gchar *, const gchar *, const gchar *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:142:NC */ extern void g_resolver_lookup_service_async (GResolver *, const gchar *, const gchar *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gresolver.h:149:NC */ extern GList *g_resolver_lookup_service_finish (GResolver *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gresolver.h:153:NC */ extern void g_resolver_free_targets (GList *);
/* /usr/include/glib-2.0/gio/gresolver.h:163:NC */ extern GQuark g_resolver_error_quark (void);
/* /usr/include/glib-2.0/gio/gseekable.h:81:NC */ extern GType g_seekable_get_type (void);
/* /usr/include/glib-2.0/gio/gseekable.h:83:NC */ extern goffset g_seekable_tell (GSeekable *);
/* /usr/include/glib-2.0/gio/gseekable.h:84:NC */ extern gboolean g_seekable_can_seek (GSeekable *);
/* /usr/include/glib-2.0/gio/gseekable.h:85:NC */ extern gboolean g_seekable_seek (GSeekable *, goffset, GSeekType, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gseekable.h:90:NC */ extern gboolean g_seekable_can_truncate (GSeekable *);
/* /usr/include/glib-2.0/gio/gseekable.h:91:NC */ extern gboolean g_seekable_truncate (GSeekable *, goffset, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsettings.h:71:NC */ extern GType g_settings_get_type (void);
/* /usr/include/glib-2.0/gio/gsettings.h:73:NC */ extern const gchar *const *g_settings_list_schemas (void);
/* /usr/include/glib-2.0/gio/gsettings.h:74:NC */ extern const gchar *const *g_settings_list_relocatable_schemas (void);
/* /usr/include/glib-2.0/gio/gsettings.h:75:NC */ extern GSettings *g_settings_new (const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:76:NC */ extern GSettings *g_settings_new_with_path (const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:78:NC */ extern GSettings *g_settings_new_with_backend (const gchar *, GSettingsBackend *);
/* /usr/include/glib-2.0/gio/gsettings.h:80:NC */ extern GSettings *g_settings_new_with_backend_and_path (const gchar *, GSettingsBackend *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:83:NC */ extern gchar **g_settings_list_children (GSettings *);
/* /usr/include/glib-2.0/gio/gsettings.h:84:NC */ extern gchar **g_settings_list_keys (GSettings *);
/* /usr/include/glib-2.0/gio/gsettings.h:85:NC */ extern GVariant *g_settings_get_range (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:87:NC */ extern gboolean g_settings_range_check (GSettings *, const gchar *, GVariant *);
/* /usr/include/glib-2.0/gio/gsettings.h:91:NC */ extern gboolean g_settings_set_value (GSettings *, const gchar *, GVariant *);
/* /usr/include/glib-2.0/gio/gsettings.h:94:NC */ extern GVariant *g_settings_get_value (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:97:NC */ extern gboolean g_settings_set (GSettings *, const gchar *, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gsettings.h:101:NC */ extern void g_settings_get (GSettings *, const gchar *, const gchar *, ...);
/* /usr/include/glib-2.0/gio/gsettings.h:105:NC */ extern void g_settings_reset (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:108:NC */ extern gint g_settings_get_int (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:110:NC */ extern gboolean g_settings_set_int (GSettings *, const gchar *, gint);
/* /usr/include/glib-2.0/gio/gsettings.h:113:NC */ extern guint g_settings_get_uint (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:115:NC */ extern gboolean g_settings_set_uint (GSettings *, const gchar *, guint);
/* /usr/include/glib-2.0/gio/gsettings.h:118:NC */ extern gchar *g_settings_get_string (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:120:NC */ extern gboolean g_settings_set_string (GSettings *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:123:NC */ extern gboolean g_settings_get_boolean (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:125:NC */ extern gboolean g_settings_set_boolean (GSettings *, const gchar *, gboolean);
/* /usr/include/glib-2.0/gio/gsettings.h:128:NC */ extern gdouble g_settings_get_double (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:130:NC */ extern gboolean g_settings_set_double (GSettings *, const gchar *, gdouble);
/* /usr/include/glib-2.0/gio/gsettings.h:133:NC */ extern gchar **g_settings_get_strv (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:135:NC */ extern gboolean g_settings_set_strv (GSettings *, const gchar *, const gchar *const *);
/* /usr/include/glib-2.0/gio/gsettings.h:138:NC */ extern gint g_settings_get_enum (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:140:NC */ extern gboolean g_settings_set_enum (GSettings *, const gchar *, gint);
/* /usr/include/glib-2.0/gio/gsettings.h:143:NC */ extern guint g_settings_get_flags (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:145:NC */ extern gboolean g_settings_set_flags (GSettings *, const gchar *, guint);
/* /usr/include/glib-2.0/gio/gsettings.h:148:NC */ extern GSettings *g_settings_get_child (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:151:NC */ extern gboolean g_settings_is_writable (GSettings *, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:154:NC */ extern void g_settings_delay (GSettings *);
/* /usr/include/glib-2.0/gio/gsettings.h:155:NC */ extern void g_settings_apply (GSettings *);
/* /usr/include/glib-2.0/gio/gsettings.h:156:NC */ extern void g_settings_revert (GSettings *);
/* /usr/include/glib-2.0/gio/gsettings.h:157:NC */ extern gboolean g_settings_get_has_unapplied (GSettings *);
/* /usr/include/glib-2.0/gio/gsettings.h:158:NC */ extern void g_settings_sync (void);
/* /usr/include/glib-2.0/gio/gsettings.h:241:NC */ extern void g_settings_bind (GSettings *, const gchar *, gpointer, const gchar *, GSettingsBindFlags);
/* /usr/include/glib-2.0/gio/gsettings.h:246:NC */ extern void g_settings_bind_with_mapping (GSettings *, const gchar *, gpointer, const gchar *, GSettingsBindFlags, GSettingsBindGetMapping, GSettingsBindSetMapping, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gsettings.h:255:NC */ extern void g_settings_bind_writable (GSettings *, const gchar *, gpointer, const gchar *, gboolean);
/* /usr/include/glib-2.0/gio/gsettings.h:260:NC */ extern void g_settings_unbind (gpointer, const gchar *);
/* /usr/include/glib-2.0/gio/gsettings.h:263:NC */ extern gpointer g_settings_get_mapped (GSettings *, const gchar *, GSettingsGetMapping, gpointer);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:49:NC */ extern GType g_simple_async_result_get_type (void);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:51:NC */ extern GSimpleAsyncResult *g_simple_async_result_new (GObject *, GAsyncReadyCallback, gpointer, gpointer);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:55:NC */ extern GSimpleAsyncResult *g_simple_async_result_new_error (GObject *, GAsyncReadyCallback, gpointer, GQuark, gint, const char *, ...);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:62:NC */ extern GSimpleAsyncResult *g_simple_async_result_new_from_error (GObject *, GAsyncReadyCallback, gpointer, const GError *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:66:NC */ extern GSimpleAsyncResult *g_simple_async_result_new_take_error (GObject *, GAsyncReadyCallback, gpointer, GError *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:71:NC */ extern void g_simple_async_result_set_op_res_gpointer (GSimpleAsyncResult *, gpointer, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:74:NC */ extern gpointer g_simple_async_result_get_op_res_gpointer (GSimpleAsyncResult *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:76:NC */ extern void g_simple_async_result_set_op_res_gssize (GSimpleAsyncResult *, gssize);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:78:NC */ extern gssize g_simple_async_result_get_op_res_gssize (GSimpleAsyncResult *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:80:NC */ extern void g_simple_async_result_set_op_res_gboolean (GSimpleAsyncResult *, gboolean);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:82:NC */ extern gboolean g_simple_async_result_get_op_res_gboolean (GSimpleAsyncResult *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:86:NC */ extern gpointer g_simple_async_result_get_source_tag (GSimpleAsyncResult *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:87:NC */ extern void g_simple_async_result_set_handle_cancellation (GSimpleAsyncResult *, gboolean);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:89:NC */ extern void g_simple_async_result_complete (GSimpleAsyncResult *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:90:NC */ extern void g_simple_async_result_complete_in_idle (GSimpleAsyncResult *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:91:NC */ extern void g_simple_async_result_run_in_thread (GSimpleAsyncResult *, GSimpleAsyncThreadFunc, int, GCancellable *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:95:NC */ extern void g_simple_async_result_set_from_error (GSimpleAsyncResult *, const GError *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:97:NC */ extern void g_simple_async_result_take_error (GSimpleAsyncResult *, GError *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:99:NC */ extern gboolean g_simple_async_result_propagate_error (GSimpleAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:101:NC */ extern void g_simple_async_result_set_error (GSimpleAsyncResult *, GQuark, gint, const char *, ...);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:106:NC */ extern void g_simple_async_result_set_error_va (GSimpleAsyncResult *, GQuark, gint, const char *, __va_list_tag *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:111:NC */ extern gboolean g_simple_async_result_is_valid (GAsyncResult *, GObject *, gpointer);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:115:NC */ extern void g_simple_async_report_error_in_idle (GObject *, GAsyncReadyCallback, gpointer, GQuark, gint, const char *, ...);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:122:NC */ extern void g_simple_async_report_gerror_in_idle (GObject *, GAsyncReadyCallback, gpointer, const GError *);
/* /usr/include/glib-2.0/gio/gsimpleasyncresult.h:126:NC */ extern void g_simple_async_report_take_gerror_in_idle (GObject *, GAsyncReadyCallback, gpointer, GError *);
/* /usr/include/glib-2.0/gio/gsimplepermission.h:40:NC */ extern GType g_simple_permission_get_type (void);
/* /usr/include/glib-2.0/gio/gsimplepermission.h:41:NC */ extern GPermission *g_simple_permission_new (gboolean);
/* /usr/include/glib-2.0/gio/gsocketclient.h:69:NC */ extern GType g_socket_client_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketclient.h:71:NC */ extern GSocketClient *g_socket_client_new (void);
/* /usr/include/glib-2.0/gio/gsocketclient.h:73:NC */ extern GSocketFamily g_socket_client_get_family (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:74:NC */ extern void g_socket_client_set_family (GSocketClient *, GSocketFamily);
/* /usr/include/glib-2.0/gio/gsocketclient.h:76:NC */ extern GSocketType g_socket_client_get_socket_type (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:77:NC */ extern void g_socket_client_set_socket_type (GSocketClient *, GSocketType);
/* /usr/include/glib-2.0/gio/gsocketclient.h:79:NC */ extern GSocketProtocol g_socket_client_get_protocol (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:80:NC */ extern void g_socket_client_set_protocol (GSocketClient *, GSocketProtocol);
/* /usr/include/glib-2.0/gio/gsocketclient.h:82:NC */ extern GSocketAddress *g_socket_client_get_local_address (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:83:NC */ extern void g_socket_client_set_local_address (GSocketClient *, GSocketAddress *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:85:NC */ extern guint g_socket_client_get_timeout (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:86:NC */ extern void g_socket_client_set_timeout (GSocketClient *, guint);
/* /usr/include/glib-2.0/gio/gsocketclient.h:88:NC */ extern gboolean g_socket_client_get_enable_proxy (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:89:NC */ extern void g_socket_client_set_enable_proxy (GSocketClient *, gboolean);
/* /usr/include/glib-2.0/gio/gsocketclient.h:92:NC */ extern gboolean g_socket_client_get_tls (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:93:NC */ extern void g_socket_client_set_tls (GSocketClient *, gboolean);
/* /usr/include/glib-2.0/gio/gsocketclient.h:95:NC */ extern GTlsCertificateFlags g_socket_client_get_tls_validation_flags (GSocketClient *);
/* /usr/include/glib-2.0/gio/gsocketclient.h:96:NC */ extern void g_socket_client_set_tls_validation_flags (GSocketClient *, GTlsCertificateFlags);
/* /usr/include/glib-2.0/gio/gsocketclient.h:99:NC */ extern GSocketConnection *g_socket_client_connect (GSocketClient *, GSocketConnectable *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:103:NC */ extern GSocketConnection *g_socket_client_connect_to_host (GSocketClient *, const gchar *, guint16, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:108:NC */ extern GSocketConnection *g_socket_client_connect_to_service (GSocketClient *, const gchar *, const gchar *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:113:NC */ extern GSocketConnection *g_socket_client_connect_to_uri (GSocketClient *, const gchar *, guint16, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:118:NC */ extern void g_socket_client_connect_async (GSocketClient *, GSocketConnectable *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketclient.h:123:NC */ extern GSocketConnection *g_socket_client_connect_finish (GSocketClient *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:126:NC */ extern void g_socket_client_connect_to_host_async (GSocketClient *, const gchar *, guint16, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketclient.h:132:NC */ extern GSocketConnection *g_socket_client_connect_to_host_finish (GSocketClient *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:136:NC */ extern void g_socket_client_connect_to_service_async (GSocketClient *, const gchar *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketclient.h:142:NC */ extern GSocketConnection *g_socket_client_connect_to_service_finish (GSocketClient *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:145:NC */ extern void g_socket_client_connect_to_uri_async (GSocketClient *, const gchar *, guint16, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketclient.h:151:NC */ extern GSocketConnection *g_socket_client_connect_to_uri_finish (GSocketClient *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gsocketclient.h:154:NC */ extern void g_socket_client_add_application_proxy (GSocketClient *, const gchar *);
/* /usr/include/glib-2.0/gio/gsocketconnectable.h:65:NC */ extern GType g_socket_connectable_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketconnectable.h:67:NC */ extern GSocketAddressEnumerator *g_socket_connectable_enumerate (GSocketConnectable *);
/* /usr/include/glib-2.0/gio/gsocketconnectable.h:69:NC */ extern GSocketAddressEnumerator *g_socket_connectable_proxy_enumerate (GSocketConnectable *);
/* /usr/include/glib-2.0/gio/gsocket.h:76:NC */ extern GType g_socket_get_type (void);
/* /usr/include/glib-2.0/gio/gsocket.h:77:NC */ extern GSocket *g_socket_new (GSocketFamily, GSocketType, GSocketProtocol, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:81:NC */ extern GSocket *g_socket_new_from_fd (gint, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:83:NC */ extern int g_socket_get_fd (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:84:NC */ extern GSocketFamily g_socket_get_family (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:85:NC */ extern GSocketType g_socket_get_socket_type (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:86:NC */ extern GSocketProtocol g_socket_get_protocol (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:87:NC */ extern GSocketAddress *g_socket_get_local_address (GSocket *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:89:NC */ extern GSocketAddress *g_socket_get_remote_address (GSocket *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:91:NC */ extern void g_socket_set_blocking (GSocket *, gboolean);
/* /usr/include/glib-2.0/gio/gsocket.h:93:NC */ extern gboolean g_socket_get_blocking (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:94:NC */ extern void g_socket_set_keepalive (GSocket *, gboolean);
/* /usr/include/glib-2.0/gio/gsocket.h:96:NC */ extern gboolean g_socket_get_keepalive (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:97:NC */ extern gint g_socket_get_listen_backlog (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:98:NC */ extern void g_socket_set_listen_backlog (GSocket *, gint);
/* /usr/include/glib-2.0/gio/gsocket.h:100:NC */ extern guint g_socket_get_timeout (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:101:NC */ extern void g_socket_set_timeout (GSocket *, guint);
/* /usr/include/glib-2.0/gio/gsocket.h:103:NC */ extern gboolean g_socket_is_connected (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:104:NC */ extern gboolean g_socket_bind (GSocket *, GSocketAddress *, gboolean, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:108:NC */ extern gboolean g_socket_connect (GSocket *, GSocketAddress *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:112:NC */ extern gboolean g_socket_check_connect_result (GSocket *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:114:NC */ extern GIOCondition g_socket_condition_check (GSocket *, GIOCondition);
/* /usr/include/glib-2.0/gio/gsocket.h:116:NC */ extern gboolean g_socket_condition_wait (GSocket *, GIOCondition, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:120:NC */ extern GSocket *g_socket_accept (GSocket *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:123:NC */ extern gboolean g_socket_listen (GSocket *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:125:NC */ extern gssize g_socket_receive (GSocket *, gchar *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:130:NC */ extern gssize g_socket_receive_from (GSocket *, GSocketAddress **, gchar *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:136:NC */ extern gssize g_socket_send (GSocket *, const gchar *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:141:NC */ extern gssize g_socket_send_to (GSocket *, GSocketAddress *, const gchar *, gsize, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:147:NC */ extern gssize g_socket_receive_message (GSocket *, GSocketAddress **, GInputVector *, gint, GSocketControlMessage ***, gint *, gint *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:156:NC */ extern gssize g_socket_send_message (GSocket *, GSocketAddress *, GOutputVector *, gint, GSocketControlMessage **, gint, gint, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:165:NC */ extern gboolean g_socket_close (GSocket *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:167:NC */ extern gboolean g_socket_shutdown (GSocket *, gboolean, gboolean, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:171:NC */ extern gboolean g_socket_is_closed (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:172:NC */ extern GSource *g_socket_create_source (GSocket *, GIOCondition, GCancellable *);
/* /usr/include/glib-2.0/gio/gsocket.h:175:NC */ extern gboolean g_socket_speaks_ipv4 (GSocket *);
/* /usr/include/glib-2.0/gio/gsocket.h:176:NC */ extern GCredentials *g_socket_get_credentials (GSocket *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:179:NC */ extern gssize g_socket_receive_with_blocking (GSocket *, gchar *, gsize, gboolean, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocket.h:185:NC */ extern gssize g_socket_send_with_blocking (GSocket *, const gchar *, gsize, gboolean, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:73:NC */ extern GType g_socket_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:75:NC */ extern GSocket *g_socket_connection_get_socket (GSocketConnection *);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:76:NC */ extern GSocketAddress *g_socket_connection_get_local_address (GSocketConnection *, GError **);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:78:NC */ extern GSocketAddress *g_socket_connection_get_remote_address (GSocketConnection *, GError **);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:80:NC */ extern void g_socket_connection_factory_register_type (GType, GSocketFamily, GSocketType, gint);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:84:NC */ extern GType g_socket_connection_factory_lookup_type (GSocketFamily, GSocketType, gint);
/* /usr/include/glib-2.0/gio/gsocketconnection.h:87:NC */ extern GSocketConnection *g_socket_connection_factory_create_connection (GSocket *);
/* /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:91:NC */ extern GType g_socket_control_message_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:92:NC */ extern gsize g_socket_control_message_get_size (GSocketControlMessage *);
/* /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:93:NC */ extern int g_socket_control_message_get_level (GSocketControlMessage *);
/* /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:94:NC */ extern int g_socket_control_message_get_msg_type (GSocketControlMessage *);
/* /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:95:NC */ extern void g_socket_control_message_serialize (GSocketControlMessage *, gpointer);
/* /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:97:NC */ extern GSocketControlMessage *g_socket_control_message_deserialize (int, int, gsize, gpointer);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:79:NC */ extern GType g_socket_listener_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:81:NC */ extern GSocketListener *g_socket_listener_new (void);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:83:NC */ extern void g_socket_listener_set_backlog (GSocketListener *, int);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:86:NC */ extern gboolean g_socket_listener_add_socket (GSocketListener *, GSocket *, GObject *, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:90:NC */ extern gboolean g_socket_listener_add_address (GSocketListener *, GSocketAddress *, GSocketType, GSocketProtocol, GObject *, GSocketAddress **, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:97:NC */ extern gboolean g_socket_listener_add_inet_port (GSocketListener *, guint16, GObject *, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:101:NC */ extern guint16 g_socket_listener_add_any_inet_port (GSocketListener *, GObject *, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:105:NC */ extern GSocket *g_socket_listener_accept_socket (GSocketListener *, GObject **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:109:NC */ extern void g_socket_listener_accept_socket_async (GSocketListener *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:113:NC */ extern GSocket *g_socket_listener_accept_socket_finish (GSocketListener *, GAsyncResult *, GObject **, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:119:NC */ extern GSocketConnection *g_socket_listener_accept (GSocketListener *, GObject **, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:124:NC */ extern void g_socket_listener_accept_async (GSocketListener *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:129:NC */ extern GSocketConnection *g_socket_listener_accept_finish (GSocketListener *, GAsyncResult *, GObject **, GError **);
/* /usr/include/glib-2.0/gio/gsocketlistener.h:134:NC */ extern void g_socket_listener_close (GSocketListener *);
/* /usr/include/glib-2.0/gio/gsocketservice.h:78:NC */ extern GType g_socket_service_get_type (void);
/* /usr/include/glib-2.0/gio/gsocketservice.h:80:NC */ extern GSocketService *g_socket_service_new (void);
/* /usr/include/glib-2.0/gio/gsocketservice.h:81:NC */ extern void g_socket_service_start (GSocketService *);
/* /usr/include/glib-2.0/gio/gsocketservice.h:82:NC */ extern void g_socket_service_stop (GSocketService *);
/* /usr/include/glib-2.0/gio/gsocketservice.h:83:NC */ extern gboolean g_socket_service_is_active (GSocketService *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:32:NC */ extern GType g_srv_target_get_type (void);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:35:NC */ extern GSrvTarget *g_srv_target_new (const gchar *, guint16, guint16, guint16);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:39:NC */ extern GSrvTarget *g_srv_target_copy (GSrvTarget *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:40:NC */ extern void g_srv_target_free (GSrvTarget *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:42:NC */ extern const gchar *g_srv_target_get_hostname (GSrvTarget *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:43:NC */ extern guint16 g_srv_target_get_port (GSrvTarget *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:44:NC */ extern guint16 g_srv_target_get_priority (GSrvTarget *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:45:NC */ extern guint16 g_srv_target_get_weight (GSrvTarget *);
/* /usr/include/glib-2.0/gio/gsrvtarget.h:47:NC */ extern GList *g_srv_target_list_sort (GList *);
/* /usr/include/glib-2.0/gio/gtcpconnection.h:60:NC */ extern GType g_tcp_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gtcpconnection.h:62:NC */ extern void g_tcp_connection_set_graceful_disconnect (GTcpConnection *, gboolean);
/* /usr/include/glib-2.0/gio/gtcpconnection.h:64:NC */ extern gboolean g_tcp_connection_get_graceful_disconnect (GTcpConnection *);
/* /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:60:NC */ extern GType g_tcp_wrapper_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:62:NC */ extern GSocketConnection *g_tcp_wrapper_connection_new (GIOStream *, GSocket *);
/* /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:64:NC */ extern GIOStream *g_tcp_wrapper_connection_get_base_io_stream (GTcpWrapperConnection *);
/* /usr/include/glib-2.0/gio/gthemedicon.h:48:NC */ extern GType g_themed_icon_get_type (void);
/* /usr/include/glib-2.0/gio/gthemedicon.h:50:NC */ extern GIcon *g_themed_icon_new (const char *);
/* /usr/include/glib-2.0/gio/gthemedicon.h:51:NC */ extern GIcon *g_themed_icon_new_with_default_fallbacks (const char *);
/* /usr/include/glib-2.0/gio/gthemedicon.h:52:NC */ extern GIcon *g_themed_icon_new_from_names (char **, int);
/* /usr/include/glib-2.0/gio/gthemedicon.h:54:NC */ extern void g_themed_icon_prepend_name (GThemedIcon *, const char *);
/* /usr/include/glib-2.0/gio/gthemedicon.h:56:NC */ extern void g_themed_icon_append_name (GThemedIcon *, const char *);
/* /usr/include/glib-2.0/gio/gthemedicon.h:59:NC */ extern const gchar *const *g_themed_icon_get_names (GThemedIcon *);
/* /usr/include/glib-2.0/gio/gthreadedsocketservice.h:76:NC */ extern GType g_threaded_socket_service_get_type (void);
/* /usr/include/glib-2.0/gio/gthreadedsocketservice.h:77:NC */ extern GSocketService *g_threaded_socket_service_new (int);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:85:NC */ extern GType g_tls_backend_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:87:NC */ extern GTlsBackend *g_tls_backend_get_default (void);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:89:NC */ extern GTlsDatabase *g_tls_backend_get_default_database (GTlsBackend *);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:91:NC */ extern gboolean g_tls_backend_supports_tls (GTlsBackend *);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:93:NC */ extern GType g_tls_backend_get_certificate_type (GTlsBackend *);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:94:NC */ extern GType g_tls_backend_get_client_connection_type (GTlsBackend *);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:95:NC */ extern GType g_tls_backend_get_server_connection_type (GTlsBackend *);
/* /usr/include/glib-2.0/gio/gtlsbackend.h:96:NC */ extern GType g_tls_backend_get_file_database_type (GTlsBackend *);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:61:NC */ extern GType g_tls_certificate_get_type (void);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:63:NC */ extern GTlsCertificate *g_tls_certificate_new_from_pem (const gchar *, gssize, GError **);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:67:NC */ extern GTlsCertificate *g_tls_certificate_new_from_file (const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:69:NC */ extern GTlsCertificate *g_tls_certificate_new_from_files (const gchar *, const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:72:NC */ extern GList *g_tls_certificate_list_new_from_file (const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:75:NC */ extern GTlsCertificate *g_tls_certificate_get_issuer (GTlsCertificate *);
/* /usr/include/glib-2.0/gio/gtlscertificate.h:77:NC */ extern GTlsCertificateFlags g_tls_certificate_verify (GTlsCertificate *, GSocketConnectable *, GTlsCertificate *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:84:NC */ extern GType g_tls_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:87:NC */ extern void g_tls_connection_set_use_system_certdb (GTlsConnection *, gboolean);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:89:NC */ extern gboolean g_tls_connection_get_use_system_certdb (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:92:NC */ extern void g_tls_connection_set_database (GTlsConnection *, GTlsDatabase *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:94:NC */ extern GTlsDatabase *g_tls_connection_get_database (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:96:NC */ extern void g_tls_connection_set_certificate (GTlsConnection *, GTlsCertificate *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:98:NC */ extern GTlsCertificate *g_tls_connection_get_certificate (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:100:NC */ extern void g_tls_connection_set_interaction (GTlsConnection *, GTlsInteraction *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:102:NC */ extern GTlsInteraction *g_tls_connection_get_interaction (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:104:NC */ extern GTlsCertificate *g_tls_connection_get_peer_certificate (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:105:NC */ extern GTlsCertificateFlags g_tls_connection_get_peer_certificate_errors (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:107:NC */ extern void g_tls_connection_set_require_close_notify (GTlsConnection *, gboolean);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:109:NC */ extern gboolean g_tls_connection_get_require_close_notify (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:111:NC */ extern void g_tls_connection_set_rehandshake_mode (GTlsConnection *, GTlsRehandshakeMode);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:113:NC */ extern GTlsRehandshakeMode g_tls_connection_get_rehandshake_mode (GTlsConnection *);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:115:NC */ extern gboolean g_tls_connection_handshake (GTlsConnection *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:119:NC */ extern void g_tls_connection_handshake_async (GTlsConnection *, int, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:124:NC */ extern gboolean g_tls_connection_handshake_finish (GTlsConnection *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:136:NC */ extern GQuark g_tls_error_quark (void);
/* /usr/include/glib-2.0/gio/gtlsconnection.h:140:NC */ extern gboolean g_tls_connection_emit_accept_certificate (GTlsConnection *, GTlsCertificate *, GTlsCertificateFlags);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:53:NC */ extern GType g_tls_client_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:55:NC */ extern GIOStream *g_tls_client_connection_new (GIOStream *, GSocketConnectable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:59:NC */ extern GTlsCertificateFlags g_tls_client_connection_get_validation_flags (GTlsClientConnection *);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:60:NC */ extern void g_tls_client_connection_set_validation_flags (GTlsClientConnection *, GTlsCertificateFlags);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:62:NC */ extern GSocketConnectable *g_tls_client_connection_get_server_identity (GTlsClientConnection *);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:63:NC */ extern void g_tls_client_connection_set_server_identity (GTlsClientConnection *, GSocketConnectable *);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:65:NC */ extern gboolean g_tls_client_connection_get_use_ssl3 (GTlsClientConnection *);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:66:NC */ extern void g_tls_client_connection_set_use_ssl3 (GTlsClientConnection *, gboolean);
/* /usr/include/glib-2.0/gio/gtlsclientconnection.h:68:NC */ extern GList *g_tls_client_connection_get_accepted_cas (GTlsClientConnection *);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:148:NC */ extern GType g_tls_database_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:150:NC */ extern GTlsCertificateFlags g_tls_database_verify_chain (GTlsDatabase *, GTlsCertificate *, const gchar *, GSocketConnectable *, GTlsInteraction *, GTlsDatabaseVerifyFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:159:NC */ extern void g_tls_database_verify_chain_async (GTlsDatabase *, GTlsCertificate *, const gchar *, GSocketConnectable *, GTlsInteraction *, GTlsDatabaseVerifyFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:169:NC */ extern GTlsCertificateFlags g_tls_database_verify_chain_finish (GTlsDatabase *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:173:NC */ extern gchar *g_tls_database_create_certificate_handle (GTlsDatabase *, GTlsCertificate *);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:176:NC */ extern GTlsCertificate *g_tls_database_lookup_certificate_for_handle (GTlsDatabase *, const gchar *, GTlsInteraction *, GTlsDatabaseLookupFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:183:NC */ extern void g_tls_database_lookup_certificate_for_handle_async (GTlsDatabase *, const gchar *, GTlsInteraction *, GTlsDatabaseLookupFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:191:NC */ extern GTlsCertificate *g_tls_database_lookup_certificate_for_handle_finish (GTlsDatabase *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:195:NC */ extern GTlsCertificate *g_tls_database_lookup_certificate_issuer (GTlsDatabase *, GTlsCertificate *, GTlsInteraction *, GTlsDatabaseLookupFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:202:NC */ extern void g_tls_database_lookup_certificate_issuer_async (GTlsDatabase *, GTlsCertificate *, GTlsInteraction *, GTlsDatabaseLookupFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:210:NC */ extern GTlsCertificate *g_tls_database_lookup_certificate_issuer_finish (GTlsDatabase *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:214:NC */ extern GList *g_tls_database_lookup_certificates_issued_by (GTlsDatabase *, GByteArray *, GTlsInteraction *, GTlsDatabaseLookupFlags, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:221:NC */ extern void g_tls_database_lookup_certificates_issued_by_async (GTlsDatabase *, GByteArray *, GTlsInteraction *, GTlsDatabaseLookupFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gtlsdatabase.h:229:NC */ extern GList *g_tls_database_lookup_certificates_issued_by_finish (GTlsDatabase *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gtlsfiledatabase.h:49:NC */ extern GType g_tls_file_database_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsfiledatabase.h:51:NC */ extern GTlsDatabase *g_tls_file_database_new (const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gtlsinteraction.h:77:NC */ extern GType g_tls_interaction_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsinteraction.h:79:NC */ extern GTlsInteractionResult g_tls_interaction_invoke_ask_password (GTlsInteraction *, GTlsPassword *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsinteraction.h:85:NC */ extern GTlsInteractionResult g_tls_interaction_ask_password (GTlsInteraction *, GTlsPassword *, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gtlsinteraction.h:90:NC */ extern void g_tls_interaction_ask_password_async (GTlsInteraction *, GTlsPassword *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gtlsinteraction.h:96:NC */ extern GTlsInteractionResult g_tls_interaction_ask_password_finish (GTlsInteraction *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gtlsserverconnection.h:53:NC */ extern GType g_tls_server_connection_get_type (void);
/* /usr/include/glib-2.0/gio/gtlsserverconnection.h:55:NC */ extern GIOStream *g_tls_server_connection_new (GIOStream *, GTlsCertificate *, GError **);
/* /usr/include/glib-2.0/gio/gtlspassword.h:72:NC */ extern GType g_tls_password_get_type (void);
/* /usr/include/glib-2.0/gio/gtlspassword.h:74:NC */ extern GTlsPassword *g_tls_password_new (GTlsPasswordFlags, const gchar *);
/* /usr/include/glib-2.0/gio/gtlspassword.h:77:NC */ extern const guchar *g_tls_password_get_value (GTlsPassword *, gsize *);
/* /usr/include/glib-2.0/gio/gtlspassword.h:79:NC */ extern void g_tls_password_set_value (GTlsPassword *, const guchar *, gssize);
/* /usr/include/glib-2.0/gio/gtlspassword.h:82:NC */ extern void g_tls_password_set_value_full (GTlsPassword *, guchar *, gssize, GDestroyNotify);
/* /usr/include/glib-2.0/gio/gtlspassword.h:87:NC */ extern GTlsPasswordFlags g_tls_password_get_flags (GTlsPassword *);
/* /usr/include/glib-2.0/gio/gtlspassword.h:88:NC */ extern void g_tls_password_set_flags (GTlsPassword *, GTlsPasswordFlags);
/* /usr/include/glib-2.0/gio/gtlspassword.h:91:NC */ extern const gchar *g_tls_password_get_description (GTlsPassword *);
/* /usr/include/glib-2.0/gio/gtlspassword.h:92:NC */ extern void g_tls_password_set_description (GTlsPassword *, const gchar *);
/* /usr/include/glib-2.0/gio/gtlspassword.h:95:NC */ extern const gchar *g_tls_password_get_warning (GTlsPassword *);
/* /usr/include/glib-2.0/gio/gtlspassword.h:96:NC */ extern void g_tls_password_set_warning (GTlsPassword *, const gchar *);
/* /usr/include/glib-2.0/gio/gvfs.h:108:NC */ extern GType g_vfs_get_type (void);
/* /usr/include/glib-2.0/gio/gvfs.h:110:NC */ extern gboolean g_vfs_is_active (GVfs *);
/* /usr/include/glib-2.0/gio/gvfs.h:111:NC */ extern GFile *g_vfs_get_file_for_path (GVfs *, const char *);
/* /usr/include/glib-2.0/gio/gvfs.h:113:NC */ extern GFile *g_vfs_get_file_for_uri (GVfs *, const char *);
/* /usr/include/glib-2.0/gio/gvfs.h:115:NC */ extern const gchar *const *g_vfs_get_supported_uri_schemes (GVfs *);
/* /usr/include/glib-2.0/gio/gvfs.h:117:NC */ extern GFile *g_vfs_parse_name (GVfs *, const char *);
/* /usr/include/glib-2.0/gio/gvfs.h:120:NC */ extern GVfs *g_vfs_get_default (void);
/* /usr/include/glib-2.0/gio/gvfs.h:121:NC */ extern GVfs *g_vfs_get_local (void);
/* /usr/include/glib-2.0/gio/gvolume.h:164:NC */ extern GType g_volume_get_type (void);
/* /usr/include/glib-2.0/gio/gvolume.h:166:NC */ extern char *g_volume_get_name (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:167:NC */ extern GIcon *g_volume_get_icon (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:168:NC */ extern char *g_volume_get_uuid (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:169:NC */ extern GDrive *g_volume_get_drive (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:170:NC */ extern GMount *g_volume_get_mount (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:171:NC */ extern gboolean g_volume_can_mount (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:172:NC */ extern gboolean g_volume_can_eject (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:173:NC */ extern gboolean g_volume_should_automount (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:174:NC */ extern void g_volume_mount (GVolume *, GMountMountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gvolume.h:180:NC */ extern gboolean g_volume_mount_finish (GVolume *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gvolume.h:184:NC */ extern void g_volume_eject (GVolume *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gvolume.h:189:NC */ extern gboolean g_volume_eject_finish (GVolume *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gvolume.h:193:NC */ extern char *g_volume_get_identifier (GVolume *, const char *);
/* /usr/include/glib-2.0/gio/gvolume.h:195:NC */ extern char **g_volume_enumerate_identifiers (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:197:NC */ extern GFile *g_volume_get_activation_root (GVolume *);
/* /usr/include/glib-2.0/gio/gvolume.h:199:NC */ extern void g_volume_eject_with_operation (GVolume *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gvolume.h:205:NC */ extern gboolean g_volume_eject_with_operation_finish (GVolume *, GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gzlibcompressor.h:49:NC */ extern GType g_zlib_compressor_get_type (void);
/* /usr/include/glib-2.0/gio/gzlibcompressor.h:51:NC */ extern GZlibCompressor *g_zlib_compressor_new (GZlibCompressorFormat, int);
/* /usr/include/glib-2.0/gio/gzlibcompressor.h:54:NC */ extern GFileInfo *g_zlib_compressor_get_file_info (GZlibCompressor *);
/* /usr/include/glib-2.0/gio/gzlibcompressor.h:55:NC */ extern void g_zlib_compressor_set_file_info (GZlibCompressor *, GFileInfo *);
/* /usr/include/glib-2.0/gio/gzlibdecompressor.h:49:NC */ extern GType g_zlib_decompressor_get_type (void);
/* /usr/include/glib-2.0/gio/gzlibdecompressor.h:51:NC */ extern GZlibDecompressor *g_zlib_decompressor_new (GZlibCompressorFormat);
/* /usr/include/glib-2.0/gio/gzlibdecompressor.h:53:NC */ extern GFileInfo *g_zlib_decompressor_get_file_info (GZlibDecompressor *);
/* /usr/include/glib-2.0/gio/gdbusinterface.h:67:NC */ extern GType g_dbus_interface_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusinterface.h:68:NC */ extern GDBusInterfaceInfo *g_dbus_interface_get_info (GDBusInterface *);
/* /usr/include/glib-2.0/gio/gdbusinterface.h:69:NC */ extern GDBusObject *g_dbus_interface_get_object (GDBusInterface *);
/* /usr/include/glib-2.0/gio/gdbusinterface.h:70:NC */ extern void g_dbus_interface_set_object (GDBusInterface *, GDBusObject *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:90:NC */ extern GType g_dbus_interface_skeleton_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:91:NC */ extern GDBusInterfaceSkeletonFlags g_dbus_interface_skeleton_get_flags (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:92:NC */ extern void g_dbus_interface_skeleton_set_flags (GDBusInterfaceSkeleton *, GDBusInterfaceSkeletonFlags);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:94:NC */ extern GDBusInterfaceInfo *g_dbus_interface_skeleton_get_info (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:95:NC */ extern GDBusInterfaceVTable *g_dbus_interface_skeleton_get_vtable (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:96:NC */ extern GVariant *g_dbus_interface_skeleton_get_properties (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:97:NC */ extern void g_dbus_interface_skeleton_flush (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:99:NC */ extern gboolean g_dbus_interface_skeleton_export (GDBusInterfaceSkeleton *, GDBusConnection *, const gchar *, GError **);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:103:NC */ extern void g_dbus_interface_skeleton_unexport (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:104:NC */ extern GDBusConnection *g_dbus_interface_skeleton_get_connection (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:105:NC */ extern const gchar *g_dbus_interface_skeleton_get_object_path (GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusobject.h:68:NC */ extern GType g_dbus_object_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusobject.h:69:NC */ extern const gchar *g_dbus_object_get_object_path (GDBusObject *);
/* /usr/include/glib-2.0/gio/gdbusobject.h:70:NC */ extern GList *g_dbus_object_get_interfaces (GDBusObject *);
/* /usr/include/glib-2.0/gio/gdbusobject.h:71:NC */ extern GDBusInterface *g_dbus_object_get_interface (GDBusObject *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:77:NC */ extern GType g_dbus_object_skeleton_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:78:NC */ extern GDBusObjectSkeleton *g_dbus_object_skeleton_new (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:79:NC */ extern void g_dbus_object_skeleton_flush (GDBusObjectSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:80:NC */ extern void g_dbus_object_skeleton_add_interface (GDBusObjectSkeleton *, GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:82:NC */ extern void g_dbus_object_skeleton_remove_interface (GDBusObjectSkeleton *, GDBusInterfaceSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:84:NC */ extern void g_dbus_object_skeleton_remove_interface_by_name (GDBusObjectSkeleton *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:86:NC */ extern void g_dbus_object_skeleton_set_object_path (GDBusObjectSkeleton *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectproxy.h:71:NC */ extern GType g_dbus_object_proxy_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusobjectproxy.h:72:NC */ extern GDBusObjectProxy *g_dbus_object_proxy_new (GDBusConnection *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectproxy.h:74:NC */ extern GDBusConnection *g_dbus_object_proxy_get_connection (GDBusObjectProxy *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanager.h:80:NC */ extern GType g_dbus_object_manager_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusobjectmanager.h:81:NC */ extern const gchar *g_dbus_object_manager_get_object_path (GDBusObjectManager *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanager.h:82:NC */ extern GList *g_dbus_object_manager_get_objects (GDBusObjectManager *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanager.h:83:NC */ extern GDBusObject *g_dbus_object_manager_get_object (GDBusObjectManager *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanager.h:85:NC */ extern GDBusInterface *g_dbus_object_manager_get_interface (GDBusObjectManager *, const gchar *, const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:87:NC */ extern GType g_dbus_object_manager_client_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:88:NC */ extern void g_dbus_object_manager_client_new (GDBusConnection *, GDBusObjectManagerClientFlags, const gchar *, const gchar *, GDBusProxyTypeFunc, gpointer, GDestroyNotify, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:98:NC */ extern GDBusObjectManager *g_dbus_object_manager_client_new_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:100:NC */ extern GDBusObjectManager *g_dbus_object_manager_client_new_sync (GDBusConnection *, GDBusObjectManagerClientFlags, const gchar *, const gchar *, GDBusProxyTypeFunc, gpointer, GDestroyNotify, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:109:NC */ extern void g_dbus_object_manager_client_new_for_bus (GBusType, GDBusObjectManagerClientFlags, const gchar *, const gchar *, GDBusProxyTypeFunc, gpointer, GDestroyNotify, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:119:NC */ extern GDBusObjectManager *g_dbus_object_manager_client_new_for_bus_finish (GAsyncResult *, GError **);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:121:NC */ extern GDBusObjectManager *g_dbus_object_manager_client_new_for_bus_sync (GBusType, GDBusObjectManagerClientFlags, const gchar *, const gchar *, GDBusProxyTypeFunc, gpointer, GDestroyNotify, GCancellable *, GError **);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:130:NC */ extern GDBusConnection *g_dbus_object_manager_client_get_connection (GDBusObjectManagerClient *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:131:NC */ extern GDBusObjectManagerClientFlags g_dbus_object_manager_client_get_flags (GDBusObjectManagerClient *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:132:NC */ extern const gchar *g_dbus_object_manager_client_get_name (GDBusObjectManagerClient *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:133:NC */ extern gchar *g_dbus_object_manager_client_get_name_owner (GDBusObjectManagerClient *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:71:NC */ extern GType g_dbus_object_manager_server_get_type (void);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:72:NC */ extern GDBusObjectManagerServer *g_dbus_object_manager_server_new (const gchar *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:73:NC */ extern GDBusConnection *g_dbus_object_manager_server_get_connection (GDBusObjectManagerServer *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:74:NC */ extern void g_dbus_object_manager_server_set_connection (GDBusObjectManagerServer *, GDBusConnection *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:76:NC */ extern void g_dbus_object_manager_server_export (GDBusObjectManagerServer *, GDBusObjectSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:78:NC */ extern void g_dbus_object_manager_server_export_uniquely (GDBusObjectManagerServer *, GDBusObjectSkeleton *);
/* /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:80:NC */ extern gboolean g_dbus_object_manager_server_unexport (GDBusObjectManagerServer *, const gchar *);
/* /usr/include/cairo/cairo.h:86:NC */ extern int cairo_version (void);
/* /usr/include/cairo/cairo.h:89:NC */ extern const char *cairo_version_string (void);
/* /usr/include/cairo/cairo.h:390:NC */ extern cairo_t *cairo_create (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:393:NC */ extern cairo_t *cairo_reference (cairo_t *);
/* /usr/include/cairo/cairo.h:396:NC */ extern void cairo_destroy (cairo_t *);
/* /usr/include/cairo/cairo.h:399:NC */ extern unsigned int cairo_get_reference_count (cairo_t *);
/* /usr/include/cairo/cairo.h:402:NC */ extern void *cairo_get_user_data (cairo_t *, const cairo_user_data_key_t *);
/* /usr/include/cairo/cairo.h:406:NC */ extern cairo_status_t cairo_set_user_data (cairo_t *, const cairo_user_data_key_t *, void *, cairo_destroy_func_t);
/* /usr/include/cairo/cairo.h:412:NC */ extern void cairo_save (cairo_t *);
/* /usr/include/cairo/cairo.h:415:NC */ extern void cairo_restore (cairo_t *);
/* /usr/include/cairo/cairo.h:418:NC */ extern void cairo_push_group (cairo_t *);
/* /usr/include/cairo/cairo.h:421:NC */ extern void cairo_push_group_with_content (cairo_t *, cairo_content_t);
/* /usr/include/cairo/cairo.h:424:NC */ extern cairo_pattern_t *cairo_pop_group (cairo_t *);
/* /usr/include/cairo/cairo.h:427:NC */ extern void cairo_pop_group_to_source (cairo_t *);
/* /usr/include/cairo/cairo.h:547:NC */ extern void cairo_set_operator (cairo_t *, cairo_operator_t);
/* /usr/include/cairo/cairo.h:550:NC */ extern void cairo_set_source (cairo_t *, cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:553:NC */ extern void cairo_set_source_rgb (cairo_t *, double, double, double);
/* /usr/include/cairo/cairo.h:556:NC */ extern void cairo_set_source_rgba (cairo_t *, double, double, double, double);
/* /usr/include/cairo/cairo.h:561:NC */ extern void cairo_set_source_surface (cairo_t *, cairo_surface_t *, double, double);
/* /usr/include/cairo/cairo.h:567:NC */ extern void cairo_set_tolerance (cairo_t *, double);
/* /usr/include/cairo/cairo.h:590:NC */ extern void cairo_set_antialias (cairo_t *, cairo_antialias_t);
/* /usr/include/cairo/cairo.h:623:NC */ extern void cairo_set_fill_rule (cairo_t *, cairo_fill_rule_t);
/* /usr/include/cairo/cairo.h:626:NC */ extern void cairo_set_line_width (cairo_t *, double);
/* /usr/include/cairo/cairo.h:645:NC */ extern void cairo_set_line_cap (cairo_t *, cairo_line_cap_t);
/* /usr/include/cairo/cairo.h:667:NC */ extern void cairo_set_line_join (cairo_t *, cairo_line_join_t);
/* /usr/include/cairo/cairo.h:670:NC */ extern void cairo_set_dash (cairo_t *, const double *, int, double);
/* /usr/include/cairo/cairo.h:676:NC */ extern void cairo_set_miter_limit (cairo_t *, double);
/* /usr/include/cairo/cairo.h:679:NC */ extern void cairo_translate (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:682:NC */ extern void cairo_scale (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:685:NC */ extern void cairo_rotate (cairo_t *, double);
/* /usr/include/cairo/cairo.h:688:NC */ extern void cairo_transform (cairo_t *, const cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:692:NC */ extern void cairo_set_matrix (cairo_t *, const cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:696:NC */ extern void cairo_identity_matrix (cairo_t *);
/* /usr/include/cairo/cairo.h:699:NC */ extern void cairo_user_to_device (cairo_t *, double *, double *);
/* /usr/include/cairo/cairo.h:702:NC */ extern void cairo_user_to_device_distance (cairo_t *, double *, double *);
/* /usr/include/cairo/cairo.h:705:NC */ extern void cairo_device_to_user (cairo_t *, double *, double *);
/* /usr/include/cairo/cairo.h:708:NC */ extern void cairo_device_to_user_distance (cairo_t *, double *, double *);
/* /usr/include/cairo/cairo.h:712:NC */ extern void cairo_new_path (cairo_t *);
/* /usr/include/cairo/cairo.h:715:NC */ extern void cairo_move_to (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:718:NC */ extern void cairo_new_sub_path (cairo_t *);
/* /usr/include/cairo/cairo.h:721:NC */ extern void cairo_line_to (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:724:NC */ extern void cairo_curve_to (cairo_t *, double, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:730:NC */ extern void cairo_arc (cairo_t *, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:736:NC */ extern void cairo_arc_negative (cairo_t *, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:750:NC */ extern void cairo_rel_move_to (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:753:NC */ extern void cairo_rel_line_to (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:756:NC */ extern void cairo_rel_curve_to (cairo_t *, double, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:762:NC */ extern void cairo_rectangle (cairo_t *, double, double, double, double);
/* /usr/include/cairo/cairo.h:772:NC */ extern void cairo_close_path (cairo_t *);
/* /usr/include/cairo/cairo.h:775:NC */ extern void cairo_path_extents (cairo_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:781:NC */ extern void cairo_paint (cairo_t *);
/* /usr/include/cairo/cairo.h:784:NC */ extern void cairo_paint_with_alpha (cairo_t *, double);
/* /usr/include/cairo/cairo.h:788:NC */ extern void cairo_mask (cairo_t *, cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:792:NC */ extern void cairo_mask_surface (cairo_t *, cairo_surface_t *, double, double);
/* /usr/include/cairo/cairo.h:798:NC */ extern void cairo_stroke (cairo_t *);
/* /usr/include/cairo/cairo.h:801:NC */ extern void cairo_stroke_preserve (cairo_t *);
/* /usr/include/cairo/cairo.h:804:NC */ extern void cairo_fill (cairo_t *);
/* /usr/include/cairo/cairo.h:807:NC */ extern void cairo_fill_preserve (cairo_t *);
/* /usr/include/cairo/cairo.h:810:NC */ extern void cairo_copy_page (cairo_t *);
/* /usr/include/cairo/cairo.h:813:NC */ extern void cairo_show_page (cairo_t *);
/* /usr/include/cairo/cairo.h:817:NC */ extern cairo_bool_t cairo_in_stroke (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:820:NC */ extern cairo_bool_t cairo_in_fill (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:823:NC */ extern cairo_bool_t cairo_in_clip (cairo_t *, double, double);
/* /usr/include/cairo/cairo.h:827:NC */ extern void cairo_stroke_extents (cairo_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:832:NC */ extern void cairo_fill_extents (cairo_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:838:NC */ extern void cairo_reset_clip (cairo_t *);
/* /usr/include/cairo/cairo.h:841:NC */ extern void cairo_clip (cairo_t *);
/* /usr/include/cairo/cairo.h:844:NC */ extern void cairo_clip_preserve (cairo_t *);
/* /usr/include/cairo/cairo.h:847:NC */ extern void cairo_clip_extents (cairo_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:884:NC */ extern cairo_rectangle_list_t *cairo_copy_clip_rectangle_list (cairo_t *);
/* /usr/include/cairo/cairo.h:887:NC */ extern void cairo_rectangle_list_destroy (cairo_rectangle_list_t *);
/* /usr/include/cairo/cairo.h:958:NC */ extern cairo_glyph_t *cairo_glyph_allocate (int);
/* /usr/include/cairo/cairo.h:961:NC */ extern void cairo_glyph_free (cairo_glyph_t *);
/* /usr/include/cairo/cairo.h:989:NC */ extern cairo_text_cluster_t *cairo_text_cluster_allocate (int);
/* /usr/include/cairo/cairo.h:992:NC */ extern void cairo_text_cluster_free (cairo_text_cluster_t *);
/* /usr/include/cairo/cairo.h:1215:NC */ extern cairo_font_options_t *cairo_font_options_create (void);
/* /usr/include/cairo/cairo.h:1218:NC */ extern cairo_font_options_t *cairo_font_options_copy (const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1221:NC */ extern void cairo_font_options_destroy (cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1224:NC */ extern cairo_status_t cairo_font_options_status (cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1227:NC */ extern void cairo_font_options_merge (cairo_font_options_t *, const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1230:NC */ extern cairo_bool_t cairo_font_options_equal (const cairo_font_options_t *, const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1234:NC */ extern long unsigned int cairo_font_options_hash (const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1237:NC */ extern void cairo_font_options_set_antialias (cairo_font_options_t *, cairo_antialias_t);
/* /usr/include/cairo/cairo.h:1240:NC */ extern cairo_antialias_t cairo_font_options_get_antialias (const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1243:NC */ extern void cairo_font_options_set_subpixel_order (cairo_font_options_t *, cairo_subpixel_order_t);
/* /usr/include/cairo/cairo.h:1246:NC */ extern cairo_subpixel_order_t cairo_font_options_get_subpixel_order (const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1249:NC */ extern void cairo_font_options_set_hint_style (cairo_font_options_t *, cairo_hint_style_t);
/* /usr/include/cairo/cairo.h:1252:NC */ extern cairo_hint_style_t cairo_font_options_get_hint_style (const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1255:NC */ extern void cairo_font_options_set_hint_metrics (cairo_font_options_t *, cairo_hint_metrics_t);
/* /usr/include/cairo/cairo.h:1258:NC */ extern cairo_hint_metrics_t cairo_font_options_get_hint_metrics (const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1264:NC */ extern void cairo_select_font_face (cairo_t *, const char *, cairo_font_slant_t, cairo_font_weight_t);
/* /usr/include/cairo/cairo.h:1270:NC */ extern void cairo_set_font_size (cairo_t *, double);
/* /usr/include/cairo/cairo.h:1273:NC */ extern void cairo_set_font_matrix (cairo_t *, const cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:1277:NC */ extern void cairo_get_font_matrix (cairo_t *, cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:1281:NC */ extern void cairo_set_font_options (cairo_t *, const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1285:NC */ extern void cairo_get_font_options (cairo_t *, cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1289:NC */ extern void cairo_set_font_face (cairo_t *, cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1292:NC */ extern cairo_font_face_t *cairo_get_font_face (cairo_t *);
/* /usr/include/cairo/cairo.h:1295:NC */ extern void cairo_set_scaled_font (cairo_t *, const cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1299:NC */ extern cairo_scaled_font_t *cairo_get_scaled_font (cairo_t *);
/* /usr/include/cairo/cairo.h:1302:NC */ extern void cairo_show_text (cairo_t *, const char *);
/* /usr/include/cairo/cairo.h:1305:NC */ extern void cairo_show_glyphs (cairo_t *, const cairo_glyph_t *, int);
/* /usr/include/cairo/cairo.h:1308:NC */ extern void cairo_show_text_glyphs (cairo_t *, const char *, int, const cairo_glyph_t *, int, const cairo_text_cluster_t *, int, cairo_text_cluster_flags_t);
/* /usr/include/cairo/cairo.h:1318:NC */ extern void cairo_text_path (cairo_t *, const char *);
/* /usr/include/cairo/cairo.h:1321:NC */ extern void cairo_glyph_path (cairo_t *, const cairo_glyph_t *, int);
/* /usr/include/cairo/cairo.h:1324:NC */ extern void cairo_text_extents (cairo_t *, const char *, cairo_text_extents_t *);
/* /usr/include/cairo/cairo.h:1329:NC */ extern void cairo_glyph_extents (cairo_t *, const cairo_glyph_t *, int, cairo_text_extents_t *);
/* /usr/include/cairo/cairo.h:1335:NC */ extern void cairo_font_extents (cairo_t *, cairo_font_extents_t *);
/* /usr/include/cairo/cairo.h:1341:NC */ extern cairo_font_face_t *cairo_font_face_reference (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1344:NC */ extern void cairo_font_face_destroy (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1347:NC */ extern unsigned int cairo_font_face_get_reference_count (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1350:NC */ extern cairo_status_t cairo_font_face_status (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1399:NC */ extern cairo_font_type_t cairo_font_face_get_type (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1402:NC */ extern void *cairo_font_face_get_user_data (cairo_font_face_t *, const cairo_user_data_key_t *);
/* /usr/include/cairo/cairo.h:1406:NC */ extern cairo_status_t cairo_font_face_set_user_data (cairo_font_face_t *, const cairo_user_data_key_t *, void *, cairo_destroy_func_t);
/* /usr/include/cairo/cairo.h:1414:NC */ extern cairo_scaled_font_t *cairo_scaled_font_create (cairo_font_face_t *, const cairo_matrix_t *, const cairo_matrix_t *, const cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1420:NC */ extern cairo_scaled_font_t *cairo_scaled_font_reference (cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1423:NC */ extern void cairo_scaled_font_destroy (cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1426:NC */ extern unsigned int cairo_scaled_font_get_reference_count (cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1429:NC */ extern cairo_status_t cairo_scaled_font_status (cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1432:NC */ extern cairo_font_type_t cairo_scaled_font_get_type (cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1435:NC */ extern void *cairo_scaled_font_get_user_data (cairo_scaled_font_t *, const cairo_user_data_key_t *);
/* /usr/include/cairo/cairo.h:1439:NC */ extern cairo_status_t cairo_scaled_font_set_user_data (cairo_scaled_font_t *, const cairo_user_data_key_t *, void *, cairo_destroy_func_t);
/* /usr/include/cairo/cairo.h:1445:NC */ extern void cairo_scaled_font_extents (cairo_scaled_font_t *, cairo_font_extents_t *);
/* /usr/include/cairo/cairo.h:1449:NC */ extern void cairo_scaled_font_text_extents (cairo_scaled_font_t *, const char *, cairo_text_extents_t *);
/* /usr/include/cairo/cairo.h:1454:NC */ extern void cairo_scaled_font_glyph_extents (cairo_scaled_font_t *, const cairo_glyph_t *, int, cairo_text_extents_t *);
/* /usr/include/cairo/cairo.h:1460:NC */ extern cairo_status_t cairo_scaled_font_text_to_glyphs (cairo_scaled_font_t *, double, double, const char *, int, cairo_glyph_t **, int *, cairo_text_cluster_t **, int *, cairo_text_cluster_flags_t *);
/* /usr/include/cairo/cairo.h:1472:NC */ extern cairo_font_face_t *cairo_scaled_font_get_font_face (cairo_scaled_font_t *);
/* /usr/include/cairo/cairo.h:1475:NC */ extern void cairo_scaled_font_get_font_matrix (cairo_scaled_font_t *, cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:1479:NC */ extern void cairo_scaled_font_get_ctm (cairo_scaled_font_t *, cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:1483:NC */ extern void cairo_scaled_font_get_scale_matrix (cairo_scaled_font_t *, cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:1487:NC */ extern void cairo_scaled_font_get_font_options (cairo_scaled_font_t *, cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:1494:NC */ extern cairo_font_face_t *cairo_toy_font_face_create (const char *, cairo_font_slant_t, cairo_font_weight_t);
/* /usr/include/cairo/cairo.h:1499:NC */ extern const char *cairo_toy_font_face_get_family (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1502:NC */ extern cairo_font_slant_t cairo_toy_font_face_get_slant (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1505:NC */ extern cairo_font_weight_t cairo_toy_font_face_get_weight (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1511:NC */ extern cairo_font_face_t *cairo_user_font_face_create (void);
/* /usr/include/cairo/cairo.h:1716:NC */ extern void cairo_user_font_face_set_init_func (cairo_font_face_t *, cairo_user_scaled_font_init_func_t);
/* /usr/include/cairo/cairo.h:1720:NC */ extern void cairo_user_font_face_set_render_glyph_func (cairo_font_face_t *, cairo_user_scaled_font_render_glyph_func_t);
/* /usr/include/cairo/cairo.h:1724:NC */ extern void cairo_user_font_face_set_text_to_glyphs_func (cairo_font_face_t *, cairo_user_scaled_font_text_to_glyphs_func_t);
/* /usr/include/cairo/cairo.h:1728:NC */ extern void cairo_user_font_face_set_unicode_to_glyph_func (cairo_font_face_t *, cairo_user_scaled_font_unicode_to_glyph_func_t);
/* /usr/include/cairo/cairo.h:1734:NC */ extern cairo_user_scaled_font_init_func_t cairo_user_font_face_get_init_func (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1737:NC */ extern cairo_user_scaled_font_render_glyph_func_t cairo_user_font_face_get_render_glyph_func (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1740:NC */ extern cairo_user_scaled_font_text_to_glyphs_func_t cairo_user_font_face_get_text_to_glyphs_func (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1743:NC */ extern cairo_user_scaled_font_unicode_to_glyph_func_t cairo_user_font_face_get_unicode_to_glyph_func (cairo_font_face_t *);
/* /usr/include/cairo/cairo.h:1749:NC */ extern cairo_operator_t cairo_get_operator (cairo_t *);
/* /usr/include/cairo/cairo.h:1752:NC */ extern cairo_pattern_t *cairo_get_source (cairo_t *);
/* /usr/include/cairo/cairo.h:1755:NC */ extern double cairo_get_tolerance (cairo_t *);
/* /usr/include/cairo/cairo.h:1758:NC */ extern cairo_antialias_t cairo_get_antialias (cairo_t *);
/* /usr/include/cairo/cairo.h:1761:NC */ extern cairo_bool_t cairo_has_current_point (cairo_t *);
/* /usr/include/cairo/cairo.h:1764:NC */ extern void cairo_get_current_point (cairo_t *, double *, double *);
/* /usr/include/cairo/cairo.h:1767:NC */ extern cairo_fill_rule_t cairo_get_fill_rule (cairo_t *);
/* /usr/include/cairo/cairo.h:1770:NC */ extern double cairo_get_line_width (cairo_t *);
/* /usr/include/cairo/cairo.h:1773:NC */ extern cairo_line_cap_t cairo_get_line_cap (cairo_t *);
/* /usr/include/cairo/cairo.h:1776:NC */ extern cairo_line_join_t cairo_get_line_join (cairo_t *);
/* /usr/include/cairo/cairo.h:1779:NC */ extern double cairo_get_miter_limit (cairo_t *);
/* /usr/include/cairo/cairo.h:1782:NC */ extern int cairo_get_dash_count (cairo_t *);
/* /usr/include/cairo/cairo.h:1785:NC */ extern void cairo_get_dash (cairo_t *, double *, double *);
/* /usr/include/cairo/cairo.h:1788:NC */ extern void cairo_get_matrix (cairo_t *, cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:1791:NC */ extern cairo_surface_t *cairo_get_target (cairo_t *);
/* /usr/include/cairo/cairo.h:1794:NC */ extern cairo_surface_t *cairo_get_group_target (cairo_t *);
/* /usr/include/cairo/cairo.h:1917:NC */ extern cairo_path_t *cairo_copy_path (cairo_t *);
/* /usr/include/cairo/cairo.h:1920:NC */ extern cairo_path_t *cairo_copy_path_flat (cairo_t *);
/* /usr/include/cairo/cairo.h:1923:NC */ extern void cairo_append_path (cairo_t *, const cairo_path_t *);
/* /usr/include/cairo/cairo.h:1927:NC */ extern void cairo_path_destroy (cairo_path_t *);
/* /usr/include/cairo/cairo.h:1932:NC */ extern cairo_status_t cairo_status (cairo_t *);
/* /usr/include/cairo/cairo.h:1935:NC */ extern const char *cairo_status_to_string (cairo_status_t);
/* /usr/include/cairo/cairo.h:1940:NC */ extern cairo_device_t *cairo_device_reference (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1980:NC */ extern cairo_device_type_t cairo_device_get_type (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1983:NC */ extern cairo_status_t cairo_device_status (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1986:NC */ extern cairo_status_t cairo_device_acquire (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1989:NC */ extern void cairo_device_release (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1992:NC */ extern void cairo_device_flush (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1995:NC */ extern void cairo_device_finish (cairo_device_t *);
/* /usr/include/cairo/cairo.h:1998:NC */ extern void cairo_device_destroy (cairo_device_t *);
/* /usr/include/cairo/cairo.h:2001:NC */ extern unsigned int cairo_device_get_reference_count (cairo_device_t *);
/* /usr/include/cairo/cairo.h:2004:NC */ extern void *cairo_device_get_user_data (cairo_device_t *, const cairo_user_data_key_t *);
/* /usr/include/cairo/cairo.h:2008:NC */ extern cairo_status_t cairo_device_set_user_data (cairo_device_t *, const cairo_user_data_key_t *, void *, cairo_destroy_func_t);
/* /usr/include/cairo/cairo.h:2017:NC */ extern cairo_surface_t *cairo_surface_create_similar (cairo_surface_t *, cairo_content_t, int, int);
/* /usr/include/cairo/cairo.h:2023:NC */ extern cairo_surface_t *cairo_surface_create_for_rectangle (cairo_surface_t *, double, double, double, double);
/* /usr/include/cairo/cairo.h:2030:NC */ extern cairo_surface_t *cairo_surface_reference (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2033:NC */ extern void cairo_surface_finish (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2036:NC */ extern void cairo_surface_destroy (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2039:NC */ extern cairo_device_t *cairo_surface_get_device (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2042:NC */ extern unsigned int cairo_surface_get_reference_count (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2045:NC */ extern cairo_status_t cairo_surface_status (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2126:NC */ extern cairo_surface_type_t cairo_surface_get_type (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2129:NC */ extern cairo_content_t cairo_surface_get_content (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2134:NC */ extern cairo_status_t cairo_surface_write_to_png (cairo_surface_t *, const char *);
/* /usr/include/cairo/cairo.h:2138:NC */ extern cairo_status_t cairo_surface_write_to_png_stream (cairo_surface_t *, cairo_write_func_t, void *);
/* /usr/include/cairo/cairo.h:2145:NC */ extern void *cairo_surface_get_user_data (cairo_surface_t *, const cairo_user_data_key_t *);
/* /usr/include/cairo/cairo.h:2149:NC */ extern cairo_status_t cairo_surface_set_user_data (cairo_surface_t *, const cairo_user_data_key_t *, void *, cairo_destroy_func_t);
/* /usr/include/cairo/cairo.h:2160:NC */ extern void cairo_surface_get_mime_data (cairo_surface_t *, const char *, const unsigned char **, long unsigned int *);
/* /usr/include/cairo/cairo.h:2166:NC */ extern cairo_status_t cairo_surface_set_mime_data (cairo_surface_t *, const char *, const unsigned char *, long unsigned int, cairo_destroy_func_t, void *);
/* /usr/include/cairo/cairo.h:2174:NC */ extern void cairo_surface_get_font_options (cairo_surface_t *, cairo_font_options_t *);
/* /usr/include/cairo/cairo.h:2178:NC */ extern void cairo_surface_flush (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2181:NC */ extern void cairo_surface_mark_dirty (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2184:NC */ extern void cairo_surface_mark_dirty_rectangle (cairo_surface_t *, int, int, int, int);
/* /usr/include/cairo/cairo.h:2191:NC */ extern void cairo_surface_set_device_offset (cairo_surface_t *, double, double);
/* /usr/include/cairo/cairo.h:2196:NC */ extern void cairo_surface_get_device_offset (cairo_surface_t *, double *, double *);
/* /usr/include/cairo/cairo.h:2201:NC */ extern void cairo_surface_set_fallback_resolution (cairo_surface_t *, double, double);
/* /usr/include/cairo/cairo.h:2206:NC */ extern void cairo_surface_get_fallback_resolution (cairo_surface_t *, double *, double *);
/* /usr/include/cairo/cairo.h:2211:NC */ extern void cairo_surface_copy_page (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2214:NC */ extern void cairo_surface_show_page (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2217:NC */ extern cairo_bool_t cairo_surface_has_show_text_glyphs (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2259:NC */ extern cairo_surface_t *cairo_image_surface_create (cairo_format_t, int, int);
/* /usr/include/cairo/cairo.h:2264:NC */ extern int cairo_format_stride_for_width (cairo_format_t, int);
/* /usr/include/cairo/cairo.h:2268:NC */ extern cairo_surface_t *cairo_image_surface_create_for_data (unsigned char *, cairo_format_t, int, int, int);
/* /usr/include/cairo/cairo.h:2275:NC */ extern unsigned char *cairo_image_surface_get_data (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2278:NC */ extern cairo_format_t cairo_image_surface_get_format (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2281:NC */ extern int cairo_image_surface_get_width (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2284:NC */ extern int cairo_image_surface_get_height (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2287:NC */ extern int cairo_image_surface_get_stride (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2292:NC */ extern cairo_surface_t *cairo_image_surface_create_from_png (const char *);
/* /usr/include/cairo/cairo.h:2295:NC */ extern cairo_surface_t *cairo_image_surface_create_from_png_stream (cairo_read_func_t, void *);
/* /usr/include/cairo/cairo.h:2303:NC */ extern cairo_surface_t *cairo_recording_surface_create (cairo_content_t, const cairo_rectangle_t *);
/* /usr/include/cairo/cairo.h:2307:NC */ extern void cairo_recording_surface_ink_extents (cairo_surface_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:2316:NC */ extern cairo_pattern_t *cairo_pattern_create_rgb (double, double, double);
/* /usr/include/cairo/cairo.h:2319:NC */ extern cairo_pattern_t *cairo_pattern_create_rgba (double, double, double, double);
/* /usr/include/cairo/cairo.h:2323:NC */ extern cairo_pattern_t *cairo_pattern_create_for_surface (cairo_surface_t *);
/* /usr/include/cairo/cairo.h:2326:NC */ extern cairo_pattern_t *cairo_pattern_create_linear (double, double, double, double);
/* /usr/include/cairo/cairo.h:2330:NC */ extern cairo_pattern_t *cairo_pattern_create_radial (double, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:2334:NC */ extern cairo_pattern_t *cairo_pattern_reference (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2337:NC */ extern void cairo_pattern_destroy (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2340:NC */ extern unsigned int cairo_pattern_get_reference_count (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2343:NC */ extern cairo_status_t cairo_pattern_status (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2346:NC */ extern void *cairo_pattern_get_user_data (cairo_pattern_t *, const cairo_user_data_key_t *);
/* /usr/include/cairo/cairo.h:2350:NC */ extern cairo_status_t cairo_pattern_set_user_data (cairo_pattern_t *, const cairo_user_data_key_t *, void *, cairo_destroy_func_t);
/* /usr/include/cairo/cairo.h:2393:NC */ extern cairo_pattern_type_t cairo_pattern_get_type (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2396:NC */ extern void cairo_pattern_add_color_stop_rgb (cairo_pattern_t *, double, double, double, double);
/* /usr/include/cairo/cairo.h:2401:NC */ extern void cairo_pattern_add_color_stop_rgba (cairo_pattern_t *, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:2407:NC */ extern void cairo_pattern_set_matrix (cairo_pattern_t *, const cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:2411:NC */ extern void cairo_pattern_get_matrix (cairo_pattern_t *, cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:2443:NC */ extern void cairo_pattern_set_extend (cairo_pattern_t *, cairo_extend_t);
/* /usr/include/cairo/cairo.h:2446:NC */ extern cairo_extend_t cairo_pattern_get_extend (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2476:NC */ extern void cairo_pattern_set_filter (cairo_pattern_t *, cairo_filter_t);
/* /usr/include/cairo/cairo.h:2479:NC */ extern cairo_filter_t cairo_pattern_get_filter (cairo_pattern_t *);
/* /usr/include/cairo/cairo.h:2482:NC */ extern cairo_status_t cairo_pattern_get_rgba (cairo_pattern_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:2487:NC */ extern cairo_status_t cairo_pattern_get_surface (cairo_pattern_t *, cairo_surface_t **);
/* /usr/include/cairo/cairo.h:2492:NC */ extern cairo_status_t cairo_pattern_get_color_stop_rgba (cairo_pattern_t *, int, double *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:2498:NC */ extern cairo_status_t cairo_pattern_get_color_stop_count (cairo_pattern_t *, int *);
/* /usr/include/cairo/cairo.h:2502:NC */ extern cairo_status_t cairo_pattern_get_linear_points (cairo_pattern_t *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:2507:NC */ extern cairo_status_t cairo_pattern_get_radial_circles (cairo_pattern_t *, double *, double *, double *, double *, double *, double *);
/* /usr/include/cairo/cairo.h:2514:NC */ extern void cairo_matrix_init (cairo_matrix_t *, double, double, double, double, double, double);
/* /usr/include/cairo/cairo.h:2520:NC */ extern void cairo_matrix_init_identity (cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:2523:NC */ extern void cairo_matrix_init_translate (cairo_matrix_t *, double, double);
/* /usr/include/cairo/cairo.h:2527:NC */ extern void cairo_matrix_init_scale (cairo_matrix_t *, double, double);
/* /usr/include/cairo/cairo.h:2531:NC */ extern void cairo_matrix_init_rotate (cairo_matrix_t *, double);
/* /usr/include/cairo/cairo.h:2535:NC */ extern void cairo_matrix_translate (cairo_matrix_t *, double, double);
/* /usr/include/cairo/cairo.h:2538:NC */ extern void cairo_matrix_scale (cairo_matrix_t *, double, double);
/* /usr/include/cairo/cairo.h:2541:NC */ extern void cairo_matrix_rotate (cairo_matrix_t *, double);
/* /usr/include/cairo/cairo.h:2544:NC */ extern cairo_status_t cairo_matrix_invert (cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:2547:NC */ extern void cairo_matrix_multiply (cairo_matrix_t *, const cairo_matrix_t *, const cairo_matrix_t *);
/* /usr/include/cairo/cairo.h:2552:NC */ extern void cairo_matrix_transform_distance (const cairo_matrix_t *, double *, double *);
/* /usr/include/cairo/cairo.h:2556:NC */ extern void cairo_matrix_transform_point (const cairo_matrix_t *, double *, double *);
/* /usr/include/cairo/cairo.h:2600:NC */ extern cairo_region_t *cairo_region_create (void);
/* /usr/include/cairo/cairo.h:2603:NC */ extern cairo_region_t *cairo_region_create_rectangle (const cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2606:NC */ extern cairo_region_t *cairo_region_create_rectangles (const cairo_rectangle_int_t *, int);
/* /usr/include/cairo/cairo.h:2610:NC */ extern cairo_region_t *cairo_region_copy (const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2613:NC */ extern cairo_region_t *cairo_region_reference (cairo_region_t *);
/* /usr/include/cairo/cairo.h:2616:NC */ extern void cairo_region_destroy (cairo_region_t *);
/* /usr/include/cairo/cairo.h:2619:NC */ extern cairo_bool_t cairo_region_equal (const cairo_region_t *, const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2622:NC */ extern cairo_status_t cairo_region_status (const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2625:NC */ extern void cairo_region_get_extents (const cairo_region_t *, cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2629:NC */ extern int cairo_region_num_rectangles (const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2632:NC */ extern void cairo_region_get_rectangle (const cairo_region_t *, int, cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2637:NC */ extern cairo_bool_t cairo_region_is_empty (const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2640:NC */ extern cairo_region_overlap_t cairo_region_contains_rectangle (const cairo_region_t *, const cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2644:NC */ extern cairo_bool_t cairo_region_contains_point (const cairo_region_t *, int, int);
/* /usr/include/cairo/cairo.h:2647:NC */ extern void cairo_region_translate (cairo_region_t *, int, int);
/* /usr/include/cairo/cairo.h:2650:NC */ extern cairo_status_t cairo_region_subtract (cairo_region_t *, const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2653:NC */ extern cairo_status_t cairo_region_subtract_rectangle (cairo_region_t *, const cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2657:NC */ extern cairo_status_t cairo_region_intersect (cairo_region_t *, const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2660:NC */ extern cairo_status_t cairo_region_intersect_rectangle (cairo_region_t *, const cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2664:NC */ extern cairo_status_t cairo_region_union (cairo_region_t *, const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2667:NC */ extern cairo_status_t cairo_region_union_rectangle (cairo_region_t *, const cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2671:NC */ extern cairo_status_t cairo_region_xor (cairo_region_t *, const cairo_region_t *);
/* /usr/include/cairo/cairo.h:2674:NC */ extern cairo_status_t cairo_region_xor_rectangle (cairo_region_t *, const cairo_rectangle_int_t *);
/* /usr/include/cairo/cairo.h:2679:NC */ extern void cairo_debug_reset_static_data (void);
/* /usr/include/pango-1.0/pango/pango-coverage.h:38:NC */ extern PangoCoverage *pango_coverage_new (void);
/* /usr/include/pango-1.0/pango/pango-coverage.h:39:NC */ extern PangoCoverage *pango_coverage_ref (PangoCoverage *);
/* /usr/include/pango-1.0/pango/pango-coverage.h:40:NC */ extern void pango_coverage_unref (PangoCoverage *);
/* /usr/include/pango-1.0/pango/pango-coverage.h:41:NC */ extern PangoCoverage *pango_coverage_copy (PangoCoverage *);
/* /usr/include/pango-1.0/pango/pango-coverage.h:42:NC */ extern PangoCoverageLevel pango_coverage_get (PangoCoverage *, int);
/* /usr/include/pango-1.0/pango/pango-coverage.h:44:NC */ extern void pango_coverage_set (PangoCoverage *, int, PangoCoverageLevel);
/* /usr/include/pango-1.0/pango/pango-coverage.h:47:NC */ extern void pango_coverage_max (PangoCoverage *, PangoCoverage *);
/* /usr/include/pango-1.0/pango/pango-coverage.h:50:NC */ extern void pango_coverage_to_bytes (PangoCoverage *, guchar **, int *);
/* /usr/include/pango-1.0/pango/pango-coverage.h:53:NC */ extern PangoCoverage *pango_coverage_from_bytes (guchar *, int);
/* /usr/include/pango-1.0/pango/pango-types.h:64:NC */ extern int pango_units_from_double (double);
/* /usr/include/pango-1.0/pango/pango-types.h:65:NC */ extern double pango_units_to_double (int);
/* /usr/include/pango-1.0/pango/pango-types.h:87:NC */ extern void pango_extents_to_pixels (PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:87:NC */ extern GType pango_matrix_get_type (void);
/* /usr/include/pango-1.0/pango/pango-matrix.h:89:NC */ extern PangoMatrix *pango_matrix_copy (const PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:90:NC */ extern void pango_matrix_free (PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:92:NC */ extern void pango_matrix_translate (PangoMatrix *, double, double);
/* /usr/include/pango-1.0/pango/pango-matrix.h:95:NC */ extern void pango_matrix_scale (PangoMatrix *, double, double);
/* /usr/include/pango-1.0/pango/pango-matrix.h:98:NC */ extern void pango_matrix_rotate (PangoMatrix *, double);
/* /usr/include/pango-1.0/pango/pango-matrix.h:100:NC */ extern void pango_matrix_concat (PangoMatrix *, const PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:102:NC */ extern void pango_matrix_transform_point (const PangoMatrix *, double *, double *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:105:NC */ extern void pango_matrix_transform_distance (const PangoMatrix *, double *, double *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:108:NC */ extern void pango_matrix_transform_rectangle (const PangoMatrix *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:110:NC */ extern void pango_matrix_transform_pixel_rectangle (const PangoMatrix *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-matrix.h:112:NC */ extern double pango_matrix_get_font_scale_factor (const PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-script.h:127:NC */ extern PangoScript pango_script_for_unichar (gunichar);
/* /usr/include/pango-1.0/pango/pango-script.h:129:NC */ extern PangoScriptIter *pango_script_iter_new (const char *, int);
/* /usr/include/pango-1.0/pango/pango-script.h:131:NC */ extern void pango_script_iter_get_range (PangoScriptIter *, const char **, const char **, PangoScript *);
/* /usr/include/pango-1.0/pango/pango-script.h:135:NC */ extern gboolean pango_script_iter_next (PangoScriptIter *);
/* /usr/include/pango-1.0/pango/pango-script.h:136:NC */ extern void pango_script_iter_free (PangoScriptIter *);
/* /usr/include/pango-1.0/pango/pango-language.h:34:NC */ extern GType pango_language_get_type (void);
/* /usr/include/pango-1.0/pango/pango-language.h:35:NC */ extern PangoLanguage *pango_language_from_string (const char *);
/* /usr/include/pango-1.0/pango/pango-language.h:37:NC */ extern const char *pango_language_to_string (PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-language.h:41:NC */ extern const char *pango_language_get_sample_string (PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-language.h:42:NC */ extern PangoLanguage *pango_language_get_default (void);
/* /usr/include/pango-1.0/pango/pango-language.h:44:NC */ extern gboolean pango_language_matches (PangoLanguage *, const char *);
/* /usr/include/pango-1.0/pango/pango-language.h:49:NC */ extern gboolean pango_language_includes_script (PangoLanguage *, PangoScript);
/* /usr/include/pango-1.0/pango/pango-language.h:51:NC */ extern const PangoScript *pango_language_get_scripts (PangoLanguage *, int *);
/* /usr/include/pango-1.0/pango/pango-script.h:140:NC */ extern PangoLanguage *pango_script_get_sample_language (PangoScript);
/* /usr/include/pango-1.0/pango/pango-gravity.h:100:NC */ extern double pango_gravity_to_rotation (PangoGravity);
/* /usr/include/pango-1.0/pango/pango-gravity.h:101:NC */ extern PangoGravity pango_gravity_get_for_matrix (const PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-gravity.h:102:NC */ extern PangoGravity pango_gravity_get_for_script (PangoScript, PangoGravity, PangoGravityHint);
/* /usr/include/pango-1.0/pango/pango-gravity.h:105:NC */ extern PangoGravity pango_gravity_get_for_script_and_width (PangoScript, gboolean, PangoGravity, PangoGravityHint);
/* /usr/include/pango-1.0/pango/pango-bidi-type.h:84:NC */ extern PangoBidiType pango_bidi_type_for_unichar (gunichar);
/* /usr/include/pango-1.0/pango/pango-bidi-type.h:124:NC */ extern PangoDirection pango_unichar_direction (gunichar);
/* /usr/include/pango-1.0/pango/pango-bidi-type.h:125:NC */ extern PangoDirection pango_find_base_dir (const gchar *, gint);
/* /usr/include/pango-1.0/pango/pango-bidi-type.h:129:NC */ extern gboolean pango_get_mirror_char (gunichar, gunichar *);
/* /usr/include/pango-1.0/pango/pango-font.h:105:NC */ extern GType pango_font_description_get_type (void);
/* /usr/include/pango-1.0/pango/pango-font.h:106:NC */ extern PangoFontDescription *pango_font_description_new (void);
/* /usr/include/pango-1.0/pango/pango-font.h:107:NC */ extern PangoFontDescription *pango_font_description_copy (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:108:NC */ extern PangoFontDescription *pango_font_description_copy_static (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:109:NC */ extern guint pango_font_description_hash (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:110:NC */ extern gboolean pango_font_description_equal (const PangoFontDescription *, const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:112:NC */ extern void pango_font_description_free (PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:113:NC */ extern void pango_font_descriptions_free (PangoFontDescription **, int);
/* /usr/include/pango-1.0/pango/pango-font.h:116:NC */ extern void pango_font_description_set_family (PangoFontDescription *, const char *);
/* /usr/include/pango-1.0/pango/pango-font.h:118:NC */ extern void pango_font_description_set_family_static (PangoFontDescription *, const char *);
/* /usr/include/pango-1.0/pango/pango-font.h:120:NC */ extern const char *pango_font_description_get_family (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:121:NC */ extern void pango_font_description_set_style (PangoFontDescription *, PangoStyle);
/* /usr/include/pango-1.0/pango/pango-font.h:123:NC */ extern PangoStyle pango_font_description_get_style (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:124:NC */ extern void pango_font_description_set_variant (PangoFontDescription *, PangoVariant);
/* /usr/include/pango-1.0/pango/pango-font.h:126:NC */ extern PangoVariant pango_font_description_get_variant (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:127:NC */ extern void pango_font_description_set_weight (PangoFontDescription *, PangoWeight);
/* /usr/include/pango-1.0/pango/pango-font.h:129:NC */ extern PangoWeight pango_font_description_get_weight (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:130:NC */ extern void pango_font_description_set_stretch (PangoFontDescription *, PangoStretch);
/* /usr/include/pango-1.0/pango/pango-font.h:132:NC */ extern PangoStretch pango_font_description_get_stretch (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:133:NC */ extern void pango_font_description_set_size (PangoFontDescription *, gint);
/* /usr/include/pango-1.0/pango/pango-font.h:135:NC */ extern gint pango_font_description_get_size (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:136:NC */ extern void pango_font_description_set_absolute_size (PangoFontDescription *, double);
/* /usr/include/pango-1.0/pango/pango-font.h:138:NC */ extern gboolean pango_font_description_get_size_is_absolute (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:139:NC */ extern void pango_font_description_set_gravity (PangoFontDescription *, PangoGravity);
/* /usr/include/pango-1.0/pango/pango-font.h:141:NC */ extern PangoGravity pango_font_description_get_gravity (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:143:NC */ extern PangoFontMask pango_font_description_get_set_fields (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:144:NC */ extern void pango_font_description_unset_fields (PangoFontDescription *, PangoFontMask);
/* /usr/include/pango-1.0/pango/pango-font.h:147:NC */ extern void pango_font_description_merge (PangoFontDescription *, const PangoFontDescription *, gboolean);
/* /usr/include/pango-1.0/pango/pango-font.h:150:NC */ extern void pango_font_description_merge_static (PangoFontDescription *, const PangoFontDescription *, gboolean);
/* /usr/include/pango-1.0/pango/pango-font.h:154:NC */ extern gboolean pango_font_description_better_match (const PangoFontDescription *, const PangoFontDescription *, const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:158:NC */ extern PangoFontDescription *pango_font_description_from_string (const char *);
/* /usr/include/pango-1.0/pango/pango-font.h:159:NC */ extern char *pango_font_description_to_string (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:160:NC */ extern char *pango_font_description_to_filename (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-font.h:167:NC */ extern GType pango_font_metrics_get_type (void);
/* /usr/include/pango-1.0/pango/pango-font.h:168:NC */ extern PangoFontMetrics *pango_font_metrics_ref (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:169:NC */ extern void pango_font_metrics_unref (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:170:NC */ extern int pango_font_metrics_get_ascent (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:171:NC */ extern int pango_font_metrics_get_descent (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:172:NC */ extern int pango_font_metrics_get_approximate_char_width (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:173:NC */ extern int pango_font_metrics_get_approximate_digit_width (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:174:NC */ extern int pango_font_metrics_get_underline_position (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:175:NC */ extern int pango_font_metrics_get_underline_thickness (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:176:NC */ extern int pango_font_metrics_get_strikethrough_position (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:177:NC */ extern int pango_font_metrics_get_strikethrough_thickness (PangoFontMetrics *);
/* /usr/include/pango-1.0/pango/pango-font.h:210:NC */ extern GType pango_font_family_get_type (void);
/* /usr/include/pango-1.0/pango/pango-font.h:212:NC */ extern void pango_font_family_list_faces (PangoFontFamily *, PangoFontFace ***, int *);
/* /usr/include/pango-1.0/pango/pango-font.h:215:NC */ extern const char *pango_font_family_get_name (PangoFontFamily *);
/* /usr/include/pango-1.0/pango/pango-font.h:216:NC */ extern gboolean pango_font_family_is_monospace (PangoFontFamily *);
/* /usr/include/pango-1.0/pango/pango-font.h:261:NC */ extern GType pango_font_face_get_type (void);
/* /usr/include/pango-1.0/pango/pango-font.h:263:NC */ extern PangoFontDescription *pango_font_face_describe (PangoFontFace *);
/* /usr/include/pango-1.0/pango/pango-font.h:264:NC */ extern const char *pango_font_face_get_face_name (PangoFontFace *);
/* /usr/include/pango-1.0/pango/pango-font.h:265:NC */ extern void pango_font_face_list_sizes (PangoFontFace *, int **, int *);
/* /usr/include/pango-1.0/pango/pango-font.h:268:NC */ extern gboolean pango_font_face_is_synthesized (PangoFontFace *);
/* /usr/include/pango-1.0/pango/pango-font.h:313:NC */ extern GType pango_font_get_type (void);
/* /usr/include/pango-1.0/pango/pango-font.h:315:NC */ extern PangoFontDescription *pango_font_describe (PangoFont *);
/* /usr/include/pango-1.0/pango/pango-font.h:316:NC */ extern PangoFontDescription *pango_font_describe_with_absolute_size (PangoFont *);
/* /usr/include/pango-1.0/pango/pango-font.h:317:NC */ extern PangoCoverage *pango_font_get_coverage (PangoFont *, PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-font.h:319:NC */ extern PangoEngineShape *pango_font_find_shaper (PangoFont *, PangoLanguage *, guint32);
/* /usr/include/pango-1.0/pango/pango-font.h:322:NC */ extern PangoFontMetrics *pango_font_get_metrics (PangoFont *, PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-font.h:324:NC */ extern void pango_font_get_glyph_extents (PangoFont *, PangoGlyph, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-font.h:328:NC */ extern PangoFontMap *pango_font_get_font_map (PangoFont *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:42:NC */ extern GType pango_color_get_type (void);
/* /usr/include/pango-1.0/pango/pango-attributes.h:44:NC */ extern PangoColor *pango_color_copy (const PangoColor *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:45:NC */ extern void pango_color_free (PangoColor *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:46:NC */ extern gboolean pango_color_parse (PangoColor *, const char *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:48:NC */ extern gchar *pango_color_to_string (const PangoColor *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:182:NC */ extern PangoAttrType pango_attr_type_register (const gchar *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:183:NC */ extern const char *pango_attr_type_get_name (PangoAttrType);
/* /usr/include/pango-1.0/pango/pango-attributes.h:185:NC */ extern void pango_attribute_init (PangoAttribute *, const PangoAttrClass *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:187:NC */ extern PangoAttribute *pango_attribute_copy (const PangoAttribute *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:188:NC */ extern void pango_attribute_destroy (PangoAttribute *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:189:NC */ extern gboolean pango_attribute_equal (const PangoAttribute *, const PangoAttribute *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:192:NC */ extern PangoAttribute *pango_attr_language_new (PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:193:NC */ extern PangoAttribute *pango_attr_family_new (const char *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:194:NC */ extern PangoAttribute *pango_attr_foreground_new (guint16, guint16, guint16);
/* /usr/include/pango-1.0/pango/pango-attributes.h:197:NC */ extern PangoAttribute *pango_attr_background_new (guint16, guint16, guint16);
/* /usr/include/pango-1.0/pango/pango-attributes.h:200:NC */ extern PangoAttribute *pango_attr_size_new (int);
/* /usr/include/pango-1.0/pango/pango-attributes.h:201:NC */ extern PangoAttribute *pango_attr_size_new_absolute (int);
/* /usr/include/pango-1.0/pango/pango-attributes.h:202:NC */ extern PangoAttribute *pango_attr_style_new (PangoStyle);
/* /usr/include/pango-1.0/pango/pango-attributes.h:203:NC */ extern PangoAttribute *pango_attr_weight_new (PangoWeight);
/* /usr/include/pango-1.0/pango/pango-attributes.h:204:NC */ extern PangoAttribute *pango_attr_variant_new (PangoVariant);
/* /usr/include/pango-1.0/pango/pango-attributes.h:205:NC */ extern PangoAttribute *pango_attr_stretch_new (PangoStretch);
/* /usr/include/pango-1.0/pango/pango-attributes.h:206:NC */ extern PangoAttribute *pango_attr_font_desc_new (const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:208:NC */ extern PangoAttribute *pango_attr_underline_new (PangoUnderline);
/* /usr/include/pango-1.0/pango/pango-attributes.h:209:NC */ extern PangoAttribute *pango_attr_underline_color_new (guint16, guint16, guint16);
/* /usr/include/pango-1.0/pango/pango-attributes.h:212:NC */ extern PangoAttribute *pango_attr_strikethrough_new (gboolean);
/* /usr/include/pango-1.0/pango/pango-attributes.h:213:NC */ extern PangoAttribute *pango_attr_strikethrough_color_new (guint16, guint16, guint16);
/* /usr/include/pango-1.0/pango/pango-attributes.h:217:NC */ extern PangoAttribute *pango_attr_rise_new (int);
/* /usr/include/pango-1.0/pango/pango-attributes.h:218:NC */ extern PangoAttribute *pango_attr_scale_new (double);
/* /usr/include/pango-1.0/pango/pango-attributes.h:219:NC */ extern PangoAttribute *pango_attr_fallback_new (gboolean);
/* /usr/include/pango-1.0/pango/pango-attributes.h:220:NC */ extern PangoAttribute *pango_attr_letter_spacing_new (int);
/* /usr/include/pango-1.0/pango/pango-attributes.h:222:NC */ extern PangoAttribute *pango_attr_shape_new (const PangoRectangle *, const PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:224:NC */ extern PangoAttribute *pango_attr_shape_new_with_data (const PangoRectangle *, const PangoRectangle *, gpointer, PangoAttrDataCopyFunc, GDestroyNotify);
/* /usr/include/pango-1.0/pango/pango-attributes.h:230:NC */ extern PangoAttribute *pango_attr_gravity_new (PangoGravity);
/* /usr/include/pango-1.0/pango/pango-attributes.h:231:NC */ extern PangoAttribute *pango_attr_gravity_hint_new (PangoGravityHint);
/* /usr/include/pango-1.0/pango/pango-attributes.h:233:NC */ extern GType pango_attr_list_get_type (void);
/* /usr/include/pango-1.0/pango/pango-attributes.h:234:NC */ extern PangoAttrList *pango_attr_list_new (void);
/* /usr/include/pango-1.0/pango/pango-attributes.h:235:NC */ extern PangoAttrList *pango_attr_list_ref (PangoAttrList *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:236:NC */ extern void pango_attr_list_unref (PangoAttrList *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:237:NC */ extern PangoAttrList *pango_attr_list_copy (PangoAttrList *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:238:NC */ extern void pango_attr_list_insert (PangoAttrList *, PangoAttribute *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:240:NC */ extern void pango_attr_list_insert_before (PangoAttrList *, PangoAttribute *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:242:NC */ extern void pango_attr_list_change (PangoAttrList *, PangoAttribute *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:244:NC */ extern void pango_attr_list_splice (PangoAttrList *, PangoAttrList *, gint, gint);
/* /usr/include/pango-1.0/pango/pango-attributes.h:249:NC */ extern PangoAttrList *pango_attr_list_filter (PangoAttrList *, PangoAttrFilterFunc, gpointer);
/* /usr/include/pango-1.0/pango/pango-attributes.h:253:NC */ extern PangoAttrIterator *pango_attr_list_get_iterator (PangoAttrList *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:255:NC */ extern void pango_attr_iterator_range (PangoAttrIterator *, gint *, gint *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:258:NC */ extern gboolean pango_attr_iterator_next (PangoAttrIterator *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:259:NC */ extern PangoAttrIterator *pango_attr_iterator_copy (PangoAttrIterator *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:260:NC */ extern void pango_attr_iterator_destroy (PangoAttrIterator *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:261:NC */ extern PangoAttribute *pango_attr_iterator_get (PangoAttrIterator *, PangoAttrType);
/* /usr/include/pango-1.0/pango/pango-attributes.h:263:NC */ extern void pango_attr_iterator_get_font (PangoAttrIterator *, PangoFontDescription *, PangoLanguage **, GSList **);
/* /usr/include/pango-1.0/pango/pango-attributes.h:267:NC */ extern GSList *pango_attr_iterator_get_attrs (PangoAttrIterator *);
/* /usr/include/pango-1.0/pango/pango-attributes.h:270:NC */ extern gboolean pango_parse_markup (const char *, int, gunichar, PangoAttrList **, char **, gunichar *, GError **);
/* /usr/include/pango-1.0/pango/pango-item.h:61:NC */ extern GType pango_item_get_type (void);
/* /usr/include/pango-1.0/pango/pango-item.h:63:NC */ extern PangoItem *pango_item_new (void);
/* /usr/include/pango-1.0/pango/pango-item.h:64:NC */ extern PangoItem *pango_item_copy (PangoItem *);
/* /usr/include/pango-1.0/pango/pango-item.h:65:NC */ extern void pango_item_free (PangoItem *);
/* /usr/include/pango-1.0/pango/pango-item.h:66:NC */ extern PangoItem *pango_item_split (PangoItem *, int, int);
/* /usr/include/pango-1.0/pango/pango-break.h:85:NC */ extern void pango_break (const gchar *, int, PangoAnalysis *, PangoLogAttr *, int);
/* /usr/include/pango-1.0/pango/pango-break.h:91:NC */ extern void pango_find_paragraph_boundary (const gchar *, gint, gint *, gint *);
/* /usr/include/pango-1.0/pango/pango-break.h:96:NC */ extern void pango_get_log_attrs (const char *, int, int, PangoLanguage *, PangoLogAttr *, int);
/* /usr/include/pango-1.0/pango/pango-fontset.h:40:NC */ extern GType pango_fontset_get_type (void);
/* /usr/include/pango-1.0/pango/pango-fontset.h:61:NC */ extern PangoFont *pango_fontset_get_font (PangoFontset *, guint);
/* /usr/include/pango-1.0/pango/pango-fontset.h:63:NC */ extern PangoFontMetrics *pango_fontset_get_metrics (PangoFontset *);
/* /usr/include/pango-1.0/pango/pango-fontset.h:64:NC */ extern void pango_fontset_foreach (PangoFontset *, PangoFontsetForeachFunc, gpointer);
/* /usr/include/pango-1.0/pango/pango-fontmap.h:36:NC */ extern GType pango_font_map_get_type (void);
/* /usr/include/pango-1.0/pango/pango-fontmap.h:37:NC */ extern PangoContext *pango_font_map_create_context (PangoFontMap *);
/* /usr/include/pango-1.0/pango/pango-fontmap.h:38:NC */ extern PangoFont *pango_font_map_load_font (PangoFontMap *, PangoContext *, const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-fontmap.h:41:NC */ extern PangoFontset *pango_font_map_load_fontset (PangoFontMap *, PangoContext *, const PangoFontDescription *, PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-fontmap.h:45:NC */ extern void pango_font_map_list_families (PangoFontMap *, PangoFontFamily ***, int *);
/* /usr/include/pango-1.0/pango/pango-context.h:50:NC */ extern GType pango_context_get_type (void);
/* /usr/include/pango-1.0/pango/pango-context.h:52:NC */ extern PangoContext *pango_context_new (void);
/* /usr/include/pango-1.0/pango/pango-context.h:53:NC */ extern void pango_context_set_font_map (PangoContext *, PangoFontMap *);
/* /usr/include/pango-1.0/pango/pango-context.h:55:NC */ extern PangoFontMap *pango_context_get_font_map (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:57:NC */ extern void pango_context_list_families (PangoContext *, PangoFontFamily ***, int *);
/* /usr/include/pango-1.0/pango/pango-context.h:60:NC */ extern PangoFont *pango_context_load_font (PangoContext *, const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-context.h:62:NC */ extern PangoFontset *pango_context_load_fontset (PangoContext *, const PangoFontDescription *, PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-context.h:66:NC */ extern PangoFontMetrics *pango_context_get_metrics (PangoContext *, const PangoFontDescription *, PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-context.h:70:NC */ extern void pango_context_set_font_description (PangoContext *, const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-context.h:72:NC */ extern PangoFontDescription *pango_context_get_font_description (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:73:NC */ extern PangoLanguage *pango_context_get_language (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:74:NC */ extern void pango_context_set_language (PangoContext *, PangoLanguage *);
/* /usr/include/pango-1.0/pango/pango-context.h:76:NC */ extern void pango_context_set_base_dir (PangoContext *, PangoDirection);
/* /usr/include/pango-1.0/pango/pango-context.h:78:NC */ extern PangoDirection pango_context_get_base_dir (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:79:NC */ extern void pango_context_set_base_gravity (PangoContext *, PangoGravity);
/* /usr/include/pango-1.0/pango/pango-context.h:81:NC */ extern PangoGravity pango_context_get_base_gravity (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:82:NC */ extern PangoGravity pango_context_get_gravity (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:83:NC */ extern void pango_context_set_gravity_hint (PangoContext *, PangoGravityHint);
/* /usr/include/pango-1.0/pango/pango-context.h:85:NC */ extern PangoGravityHint pango_context_get_gravity_hint (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:87:NC */ extern void pango_context_set_matrix (PangoContext *, const PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-context.h:89:NC */ extern const PangoMatrix *pango_context_get_matrix (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-context.h:95:NC */ extern GList *pango_itemize (PangoContext *, const char *, int, int, PangoAttrList *, PangoAttrIterator *);
/* /usr/include/pango-1.0/pango/pango-context.h:101:NC */ extern GList *pango_itemize_with_base_dir (PangoContext *, PangoDirection, const char *, int, int, PangoAttrList *, PangoAttrIterator *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:84:NC */ extern PangoGlyphString *pango_glyph_string_new (void);
/* /usr/include/pango-1.0/pango/pango-glyph.h:85:NC */ extern void pango_glyph_string_set_size (PangoGlyphString *, gint);
/* /usr/include/pango-1.0/pango/pango-glyph.h:87:NC */ extern GType pango_glyph_string_get_type (void);
/* /usr/include/pango-1.0/pango/pango-glyph.h:88:NC */ extern PangoGlyphString *pango_glyph_string_copy (PangoGlyphString *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:89:NC */ extern void pango_glyph_string_free (PangoGlyphString *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:90:NC */ extern void pango_glyph_string_extents (PangoGlyphString *, PangoFont *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:94:NC */ extern int pango_glyph_string_get_width (PangoGlyphString *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:96:NC */ extern void pango_glyph_string_extents_range (PangoGlyphString *, int, int, PangoFont *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:103:NC */ extern void pango_glyph_string_get_logical_widths (PangoGlyphString *, const char *, int, int, int *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:109:NC */ extern void pango_glyph_string_index_to_x (PangoGlyphString *, char *, int, PangoAnalysis *, int, gboolean, int *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:116:NC */ extern void pango_glyph_string_x_to_index (PangoGlyphString *, char *, int, PangoAnalysis *, int, int *, int *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:126:NC */ extern void pango_shape (const gchar *, gint, const PangoAnalysis *, PangoGlyphString *);
/* /usr/include/pango-1.0/pango/pango-glyph.h:131:NC */ extern GList *pango_reorder_items (GList *);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:11:NC */ extern GType pango_attr_type_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:13:NC */ extern GType pango_underline_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:16:NC */ extern GType pango_bidi_type_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:18:NC */ extern GType pango_direction_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:21:NC */ extern GType pango_coverage_level_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:24:NC */ extern GType pango_style_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:26:NC */ extern GType pango_variant_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:28:NC */ extern GType pango_weight_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:30:NC */ extern GType pango_stretch_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:32:NC */ extern GType pango_font_mask_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:35:NC */ extern GType pango_gravity_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:37:NC */ extern GType pango_gravity_hint_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:40:NC */ extern GType pango_alignment_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:42:NC */ extern GType pango_wrap_mode_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:44:NC */ extern GType pango_ellipsize_mode_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:47:NC */ extern GType pango_render_part_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:50:NC */ extern GType pango_script_get_type (void);
/* /usr/include/pango-1.0/pango/pango-enum-types.h:53:NC */ extern GType pango_tab_align_get_type (void);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:42:NC */ extern GType pango_glyph_item_get_type (void);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:44:NC */ extern PangoGlyphItem *pango_glyph_item_split (PangoGlyphItem *, const char *, int);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:47:NC */ extern PangoGlyphItem *pango_glyph_item_copy (PangoGlyphItem *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:48:NC */ extern void pango_glyph_item_free (PangoGlyphItem *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:49:NC */ extern GSList *pango_glyph_item_apply_attrs (PangoGlyphItem *, const char *, PangoAttrList *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:52:NC */ extern void pango_glyph_item_letter_space (PangoGlyphItem *, const char *, PangoLogAttr *, int);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:56:NC */ extern void pango_glyph_item_get_logical_widths (PangoGlyphItem *, const char *, int *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:79:NC */ extern GType pango_glyph_item_iter_get_type (void);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:80:NC */ extern PangoGlyphItemIter *pango_glyph_item_iter_copy (PangoGlyphItemIter *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:81:NC */ extern void pango_glyph_item_iter_free (PangoGlyphItemIter *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:83:NC */ extern gboolean pango_glyph_item_iter_init_start (PangoGlyphItemIter *, PangoGlyphItem *, const char *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:86:NC */ extern gboolean pango_glyph_item_iter_init_end (PangoGlyphItemIter *, PangoGlyphItem *, const char *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:89:NC */ extern gboolean pango_glyph_item_iter_next_cluster (PangoGlyphItemIter *);
/* /usr/include/pango-1.0/pango/pango-glyph-item.h:90:NC */ extern gboolean pango_glyph_item_iter_prev_cluster (PangoGlyphItemIter *);
/* /usr/include/pango-1.0/pango/pango-tabs.h:46:NC */ extern PangoTabArray *pango_tab_array_new (gint, gboolean);
/* /usr/include/pango-1.0/pango/pango-tabs.h:48:NC */ extern PangoTabArray *pango_tab_array_new_with_positions (gint, gboolean, PangoTabAlign, gint, ...);
/* /usr/include/pango-1.0/pango/pango-tabs.h:53:NC */ extern GType pango_tab_array_get_type (void);
/* /usr/include/pango-1.0/pango/pango-tabs.h:54:NC */ extern PangoTabArray *pango_tab_array_copy (PangoTabArray *);
/* /usr/include/pango-1.0/pango/pango-tabs.h:55:NC */ extern void pango_tab_array_free (PangoTabArray *);
/* /usr/include/pango-1.0/pango/pango-tabs.h:56:NC */ extern gint pango_tab_array_get_size (PangoTabArray *);
/* /usr/include/pango-1.0/pango/pango-tabs.h:57:NC */ extern void pango_tab_array_resize (PangoTabArray *, gint);
/* /usr/include/pango-1.0/pango/pango-tabs.h:59:NC */ extern void pango_tab_array_set_tab (PangoTabArray *, gint, PangoTabAlign, gint);
/* /usr/include/pango-1.0/pango/pango-tabs.h:63:NC */ extern void pango_tab_array_get_tab (PangoTabArray *, gint, PangoTabAlign *, gint *);
/* /usr/include/pango-1.0/pango/pango-tabs.h:67:NC */ extern void pango_tab_array_get_tabs (PangoTabArray *, PangoTabAlign **, gint **);
/* /usr/include/pango-1.0/pango/pango-tabs.h:71:NC */ extern gboolean pango_tab_array_get_positions_in_pixels (PangoTabArray *);
/* /usr/include/pango-1.0/pango/pango-layout.h:91:NC */ extern GType pango_layout_get_type (void);
/* /usr/include/pango-1.0/pango/pango-layout.h:92:NC */ extern PangoLayout *pango_layout_new (PangoContext *);
/* /usr/include/pango-1.0/pango/pango-layout.h:93:NC */ extern PangoLayout *pango_layout_copy (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:95:NC */ extern PangoContext *pango_layout_get_context (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:97:NC */ extern void pango_layout_set_attributes (PangoLayout *, PangoAttrList *);
/* /usr/include/pango-1.0/pango/pango-layout.h:99:NC */ extern PangoAttrList *pango_layout_get_attributes (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:101:NC */ extern void pango_layout_set_text (PangoLayout *, const char *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:104:NC */ extern const char *pango_layout_get_text (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:106:NC */ extern gint pango_layout_get_character_count (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:108:NC */ extern void pango_layout_set_markup (PangoLayout *, const char *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:112:NC */ extern void pango_layout_set_markup_with_accel (PangoLayout *, const char *, int, gunichar, gunichar *);
/* /usr/include/pango-1.0/pango/pango-layout.h:118:NC */ extern void pango_layout_set_font_description (PangoLayout *, const PangoFontDescription *);
/* /usr/include/pango-1.0/pango/pango-layout.h:121:NC */ extern const PangoFontDescription *pango_layout_get_font_description (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:123:NC */ extern void pango_layout_set_width (PangoLayout *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:125:NC */ extern int pango_layout_get_width (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:126:NC */ extern void pango_layout_set_height (PangoLayout *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:128:NC */ extern int pango_layout_get_height (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:129:NC */ extern void pango_layout_set_wrap (PangoLayout *, PangoWrapMode);
/* /usr/include/pango-1.0/pango/pango-layout.h:131:NC */ extern PangoWrapMode pango_layout_get_wrap (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:132:NC */ extern gboolean pango_layout_is_wrapped (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:133:NC */ extern void pango_layout_set_indent (PangoLayout *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:135:NC */ extern int pango_layout_get_indent (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:136:NC */ extern void pango_layout_set_spacing (PangoLayout *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:138:NC */ extern int pango_layout_get_spacing (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:139:NC */ extern void pango_layout_set_justify (PangoLayout *, gboolean);
/* /usr/include/pango-1.0/pango/pango-layout.h:141:NC */ extern gboolean pango_layout_get_justify (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:142:NC */ extern void pango_layout_set_auto_dir (PangoLayout *, gboolean);
/* /usr/include/pango-1.0/pango/pango-layout.h:144:NC */ extern gboolean pango_layout_get_auto_dir (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:145:NC */ extern void pango_layout_set_alignment (PangoLayout *, PangoAlignment);
/* /usr/include/pango-1.0/pango/pango-layout.h:147:NC */ extern PangoAlignment pango_layout_get_alignment (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:149:NC */ extern void pango_layout_set_tabs (PangoLayout *, PangoTabArray *);
/* /usr/include/pango-1.0/pango/pango-layout.h:152:NC */ extern PangoTabArray *pango_layout_get_tabs (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:154:NC */ extern void pango_layout_set_single_paragraph_mode (PangoLayout *, gboolean);
/* /usr/include/pango-1.0/pango/pango-layout.h:156:NC */ extern gboolean pango_layout_get_single_paragraph_mode (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:158:NC */ extern void pango_layout_set_ellipsize (PangoLayout *, PangoEllipsizeMode);
/* /usr/include/pango-1.0/pango/pango-layout.h:160:NC */ extern PangoEllipsizeMode pango_layout_get_ellipsize (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:161:NC */ extern gboolean pango_layout_is_ellipsized (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:163:NC */ extern int pango_layout_get_unknown_glyphs_count (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:165:NC */ extern void pango_layout_context_changed (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:167:NC */ extern void pango_layout_get_log_attrs (PangoLayout *, PangoLogAttr **, gint *);
/* /usr/include/pango-1.0/pango/pango-layout.h:171:NC */ extern const PangoLogAttr *pango_layout_get_log_attrs_readonly (PangoLayout *, gint *);
/* /usr/include/pango-1.0/pango/pango-layout.h:174:NC */ extern void pango_layout_index_to_pos (PangoLayout *, int, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:177:NC */ extern void pango_layout_index_to_line_x (PangoLayout *, int, gboolean, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:182:NC */ extern void pango_layout_get_cursor_pos (PangoLayout *, int, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:186:NC */ extern void pango_layout_move_cursor_visually (PangoLayout *, gboolean, int, int, int, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:193:NC */ extern gboolean pango_layout_xy_to_index (PangoLayout *, int, int, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:198:NC */ extern void pango_layout_get_extents (PangoLayout *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:201:NC */ extern void pango_layout_get_pixel_extents (PangoLayout *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:204:NC */ extern void pango_layout_get_size (PangoLayout *, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:207:NC */ extern void pango_layout_get_pixel_size (PangoLayout *, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:210:NC */ extern int pango_layout_get_baseline (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:212:NC */ extern int pango_layout_get_line_count (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:213:NC */ extern PangoLayoutLine *pango_layout_get_line (PangoLayout *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:215:NC */ extern PangoLayoutLine *pango_layout_get_line_readonly (PangoLayout *, int);
/* /usr/include/pango-1.0/pango/pango-layout.h:217:NC */ extern GSList *pango_layout_get_lines (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:218:NC */ extern GSList *pango_layout_get_lines_readonly (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:223:NC */ extern GType pango_layout_line_get_type (void);
/* /usr/include/pango-1.0/pango/pango-layout.h:225:NC */ extern PangoLayoutLine *pango_layout_line_ref (PangoLayoutLine *);
/* /usr/include/pango-1.0/pango/pango-layout.h:226:NC */ extern void pango_layout_line_unref (PangoLayoutLine *);
/* /usr/include/pango-1.0/pango/pango-layout.h:228:NC */ extern gboolean pango_layout_line_x_to_index (PangoLayoutLine *, int, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:232:NC */ extern void pango_layout_line_index_to_x (PangoLayoutLine *, int, gboolean, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:236:NC */ extern void pango_layout_line_get_x_ranges (PangoLayoutLine *, int, int, int **, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:241:NC */ extern void pango_layout_line_get_extents (PangoLayoutLine *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:244:NC */ extern void pango_layout_line_get_pixel_extents (PangoLayoutLine *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:252:NC */ extern GType pango_layout_iter_get_type (void);
/* /usr/include/pango-1.0/pango/pango-layout.h:254:NC */ extern PangoLayoutIter *pango_layout_get_iter (PangoLayout *);
/* /usr/include/pango-1.0/pango/pango-layout.h:255:NC */ extern PangoLayoutIter *pango_layout_iter_copy (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:256:NC */ extern void pango_layout_iter_free (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:258:NC */ extern int pango_layout_iter_get_index (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:259:NC */ extern PangoLayoutRun *pango_layout_iter_get_run (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:260:NC */ extern PangoLayoutRun *pango_layout_iter_get_run_readonly (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:261:NC */ extern PangoLayoutLine *pango_layout_iter_get_line (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:262:NC */ extern PangoLayoutLine *pango_layout_iter_get_line_readonly (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:263:NC */ extern gboolean pango_layout_iter_at_last_line (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:264:NC */ extern PangoLayout *pango_layout_iter_get_layout (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:266:NC */ extern gboolean pango_layout_iter_next_char (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:267:NC */ extern gboolean pango_layout_iter_next_cluster (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:268:NC */ extern gboolean pango_layout_iter_next_run (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:269:NC */ extern gboolean pango_layout_iter_next_line (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-layout.h:271:NC */ extern void pango_layout_iter_get_char_extents (PangoLayoutIter *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:273:NC */ extern void pango_layout_iter_get_cluster_extents (PangoLayoutIter *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:276:NC */ extern void pango_layout_iter_get_run_extents (PangoLayoutIter *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:279:NC */ extern void pango_layout_iter_get_line_extents (PangoLayoutIter *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:285:NC */ extern void pango_layout_iter_get_line_yrange (PangoLayoutIter *, int *, int *);
/* /usr/include/pango-1.0/pango/pango-layout.h:288:NC */ extern void pango_layout_iter_get_layout_extents (PangoLayoutIter *, PangoRectangle *, PangoRectangle *);
/* /usr/include/pango-1.0/pango/pango-layout.h:291:NC */ extern int pango_layout_iter_get_baseline (PangoLayoutIter *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:193:NC */ extern GType pango_renderer_get_type (void);
/* /usr/include/pango-1.0/pango/pango-renderer.h:195:NC */ extern void pango_renderer_draw_layout (PangoRenderer *, PangoLayout *, int, int);
/* /usr/include/pango-1.0/pango/pango-renderer.h:199:NC */ extern void pango_renderer_draw_layout_line (PangoRenderer *, PangoLayoutLine *, int, int);
/* /usr/include/pango-1.0/pango/pango-renderer.h:203:NC */ extern void pango_renderer_draw_glyphs (PangoRenderer *, PangoFont *, PangoGlyphString *, int, int);
/* /usr/include/pango-1.0/pango/pango-renderer.h:208:NC */ extern void pango_renderer_draw_glyph_item (PangoRenderer *, const char *, PangoGlyphItem *, int, int);
/* /usr/include/pango-1.0/pango/pango-renderer.h:213:NC */ extern void pango_renderer_draw_rectangle (PangoRenderer *, PangoRenderPart, int, int, int, int);
/* /usr/include/pango-1.0/pango/pango-renderer.h:219:NC */ extern void pango_renderer_draw_error_underline (PangoRenderer *, int, int, int, int);
/* /usr/include/pango-1.0/pango/pango-renderer.h:224:NC */ extern void pango_renderer_draw_trapezoid (PangoRenderer *, PangoRenderPart, double, double, double, double, double, double);
/* /usr/include/pango-1.0/pango/pango-renderer.h:232:NC */ extern void pango_renderer_draw_glyph (PangoRenderer *, PangoFont *, PangoGlyph, double, double);
/* /usr/include/pango-1.0/pango/pango-renderer.h:238:NC */ extern void pango_renderer_activate (PangoRenderer *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:239:NC */ extern void pango_renderer_deactivate (PangoRenderer *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:241:NC */ extern void pango_renderer_part_changed (PangoRenderer *, PangoRenderPart);
/* /usr/include/pango-1.0/pango/pango-renderer.h:244:NC */ extern void pango_renderer_set_color (PangoRenderer *, PangoRenderPart, const PangoColor *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:247:NC */ extern PangoColor *pango_renderer_get_color (PangoRenderer *, PangoRenderPart);
/* /usr/include/pango-1.0/pango/pango-renderer.h:250:NC */ extern void pango_renderer_set_matrix (PangoRenderer *, const PangoMatrix *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:252:NC */ extern const PangoMatrix *pango_renderer_get_matrix (PangoRenderer *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:254:NC */ extern PangoLayout *pango_renderer_get_layout (PangoRenderer *);
/* /usr/include/pango-1.0/pango/pango-renderer.h:255:NC */ extern PangoLayoutLine *pango_renderer_get_layout_line (PangoRenderer *);
/* /usr/include/pango-1.0/pango/pango-utils.h:31:NC */ extern char **pango_split_file_list (const char *);
/* /usr/include/pango-1.0/pango/pango-utils.h:33:NC */ extern char *pango_trim_string (const char *);
/* /usr/include/pango-1.0/pango/pango-utils.h:34:NC */ extern gint pango_read_line (FILE *, GString *);
/* /usr/include/pango-1.0/pango/pango-utils.h:36:NC */ extern gboolean pango_skip_space (const char **);
/* /usr/include/pango-1.0/pango/pango-utils.h:37:NC */ extern gboolean pango_scan_word (const char **, GString *);
/* /usr/include/pango-1.0/pango/pango-utils.h:39:NC */ extern gboolean pango_scan_string (const char **, GString *);
/* /usr/include/pango-1.0/pango/pango-utils.h:41:NC */ extern gboolean pango_scan_int (const char **, int *);
/* /usr/include/pango-1.0/pango/pango-utils.h:51:NC */ extern gboolean pango_parse_enum (GType, const char *, int *, gboolean, char **);
/* /usr/include/pango-1.0/pango/pango-utils.h:64:NC */ extern gboolean pango_parse_style (const char *, PangoStyle *, gboolean);
/* /usr/include/pango-1.0/pango/pango-utils.h:67:NC */ extern gboolean pango_parse_variant (const char *, PangoVariant *, gboolean);
/* /usr/include/pango-1.0/pango/pango-utils.h:70:NC */ extern gboolean pango_parse_weight (const char *, PangoWeight *, gboolean);
/* /usr/include/pango-1.0/pango/pango-utils.h:73:NC */ extern gboolean pango_parse_stretch (const char *, PangoStretch *, gboolean);
/* /usr/include/pango-1.0/pango/pango-utils.h:97:NC */ extern void pango_quantize_line_geometry (int *, int *);
/* /usr/include/pango-1.0/pango/pango-utils.h:102:NC */ extern guint8 *pango_log2vis_get_embedding_levels (const gchar *, int, PangoDirection *);
/* /usr/include/pango-1.0/pango/pango-utils.h:109:NC */ extern gboolean pango_is_zero_width (gunichar);
/* /usr/include/pango-1.0/pango/pango-utils.h:131:NC */ extern int pango_version (void);
/* /usr/include/pango-1.0/pango/pango-utils.h:134:NC */ extern const char *pango_version_string (void);
/* /usr/include/pango-1.0/pango/pango-utils.h:137:NC */ extern const char *pango_version_check (int, int, int);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:89:NC */ extern GType gdk_colormap_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:91:NC */ extern GdkColormap *gdk_colormap_new (GdkVisual *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:95:NC */ extern GdkColormap *gdk_colormap_ref (GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:96:NC */ extern void gdk_colormap_unref (GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:100:NC */ extern GdkColormap *gdk_colormap_get_system (void);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:103:NC */ extern GdkScreen *gdk_colormap_get_screen (GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:106:NC */ extern gint gdk_colormap_get_system_size (void);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:111:NC */ extern void gdk_colormap_change (GdkColormap *, gint);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:115:NC */ extern gint gdk_colormap_alloc_colors (GdkColormap *, GdkColor *, gint, gboolean, gboolean, gboolean *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:121:NC */ extern gboolean gdk_colormap_alloc_color (GdkColormap *, GdkColor *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:125:NC */ extern void gdk_colormap_free_colors (GdkColormap *, const GdkColor *, gint);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:128:NC */ extern void gdk_colormap_query_color (GdkColormap *, gulong, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:132:NC */ extern GdkVisual *gdk_colormap_get_visual (GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:134:NC */ extern GdkColor *gdk_color_copy (const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:135:NC */ extern void gdk_color_free (GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:136:NC */ extern gboolean gdk_color_parse (const gchar *, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:138:NC */ extern guint gdk_color_hash (const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:139:NC */ extern gboolean gdk_color_equal (const GdkColor *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:141:NC */ extern gchar *gdk_color_to_string (const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:143:NC */ extern GType gdk_color_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:147:NC */ extern void gdk_colors_store (GdkColormap *, GdkColor *, gint);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:150:NC */ extern gint gdk_color_white (GdkColormap *, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:152:NC */ extern gint gdk_color_black (GdkColormap *, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:154:NC */ extern gint gdk_color_alloc (GdkColormap *, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:156:NC */ extern gint gdk_color_change (GdkColormap *, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:162:NC */ extern gint gdk_colors_alloc (GdkColormap *, gboolean, gulong *, gint, gulong *, gint);
/* /usr/include/gtk-2.0/gdk/gdkcolor.h:168:NC */ extern void gdk_colors_free (GdkColormap *, gulong *, gint, gulong);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:106:NC */ extern GType gdk_drag_context_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:108:NC */ extern GdkDragContext *gdk_drag_context_new (void);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:111:NC */ extern GList *gdk_drag_context_list_targets (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:112:NC */ extern GdkDragAction gdk_drag_context_get_actions (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:113:NC */ extern GdkDragAction gdk_drag_context_get_suggested_action (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:114:NC */ extern GdkDragAction gdk_drag_context_get_selected_action (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:116:NC */ extern GdkWindow *gdk_drag_context_get_source_window (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:117:NC */ extern GdkWindow *gdk_drag_context_get_dest_window (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:118:NC */ extern GdkDragProtocol gdk_drag_context_get_protocol (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:122:NC */ extern void gdk_drag_context_ref (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:123:NC */ extern void gdk_drag_context_unref (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:128:NC */ extern void gdk_drag_status (GdkDragContext *, GdkDragAction, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:131:NC */ extern void gdk_drop_reply (GdkDragContext *, gboolean, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:134:NC */ extern void gdk_drop_finish (GdkDragContext *, gboolean, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:137:NC */ extern GdkAtom gdk_drag_get_selection (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:141:NC */ extern GdkDragContext *gdk_drag_begin (GdkWindow *, GList *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:144:NC */ extern GdkNativeWindow gdk_drag_get_protocol_for_display (GdkDisplay *, GdkNativeWindow, GdkDragProtocol *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:148:NC */ extern void gdk_drag_find_window_for_screen (GdkDragContext *, GdkWindow *, GdkScreen *, gint, gint, GdkWindow **, GdkDragProtocol *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:158:NC */ extern GdkNativeWindow gdk_drag_get_protocol (GdkNativeWindow, GdkDragProtocol *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:161:NC */ extern void gdk_drag_find_window (GdkDragContext *, GdkWindow *, gint, gint, GdkWindow **, GdkDragProtocol *);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:170:NC */ extern gboolean gdk_drag_motion (GdkDragContext *, GdkWindow *, GdkDragProtocol, gint, gint, GdkDragAction, GdkDragAction, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:178:NC */ extern void gdk_drag_drop (GdkDragContext *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:180:NC */ extern void gdk_drag_abort (GdkDragContext *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdnd.h:182:NC */ extern gboolean gdk_drag_drop_succeeded (GdkDragContext *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:126:NC */ extern GType gdk_device_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:130:NC */ extern GList *gdk_devices_list (void);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:133:NC */ extern const gchar *gdk_device_get_name (GdkDevice *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:134:NC */ extern GdkInputSource gdk_device_get_source (GdkDevice *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:135:NC */ extern GdkInputMode gdk_device_get_mode (GdkDevice *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:136:NC */ extern gboolean gdk_device_get_has_cursor (GdkDevice *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:138:NC */ extern void gdk_device_get_key (GdkDevice *, guint, guint *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:142:NC */ extern GdkAxisUse gdk_device_get_axis_use (GdkDevice *, guint);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:144:NC */ extern gint gdk_device_get_n_keys (GdkDevice *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:145:NC */ extern gint gdk_device_get_n_axes (GdkDevice *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:148:NC */ extern void gdk_device_set_source (GdkDevice *, GdkInputSource);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:151:NC */ extern gboolean gdk_device_set_mode (GdkDevice *, GdkInputMode);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:154:NC */ extern void gdk_device_set_key (GdkDevice *, guint, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:159:NC */ extern void gdk_device_set_axis_use (GdkDevice *, guint, GdkAxisUse);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:163:NC */ extern void gdk_device_get_state (GdkDevice *, GdkWindow *, gdouble *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:168:NC */ extern gboolean gdk_device_get_history (GdkDevice *, GdkWindow *, guint32, guint32, GdkTimeCoord ***, gint *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:175:NC */ extern void gdk_device_free_history (GdkTimeCoord **, gint);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:177:NC */ extern gboolean gdk_device_get_axis (GdkDevice *, gdouble *, GdkAxisUse, gdouble *);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:182:NC */ extern void gdk_input_set_extension_events (GdkWindow *, gint, GdkExtensionMode);
/* /usr/include/gtk-2.0/gdk/gdkinput.h:187:NC */ extern GdkDevice *gdk_device_get_core_pointer (void);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:516:NC */ extern GType gdk_event_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:518:NC */ extern gboolean gdk_events_pending (void);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:519:NC */ extern GdkEvent *gdk_event_get (void);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:521:NC */ extern GdkEvent *gdk_event_peek (void);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:523:NC */ extern GdkEvent *gdk_event_get_graphics_expose (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:525:NC */ extern void gdk_event_put (const GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:527:NC */ extern GdkEvent *gdk_event_new (GdkEventType);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:528:NC */ extern GdkEvent *gdk_event_copy (const GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:529:NC */ extern void gdk_event_free (GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:531:NC */ extern guint32 gdk_event_get_time (const GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:532:NC */ extern gboolean gdk_event_get_state (const GdkEvent *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:534:NC */ extern gboolean gdk_event_get_coords (const GdkEvent *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:537:NC */ extern gboolean gdk_event_get_root_coords (const GdkEvent *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:540:NC */ extern gboolean gdk_event_get_axis (const GdkEvent *, GdkAxisUse, gdouble *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:543:NC */ extern void gdk_event_request_motions (const GdkEventMotion *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:544:NC */ extern void gdk_event_handler_set (GdkEventFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:548:NC */ extern void gdk_event_set_screen (GdkEvent *, GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:550:NC */ extern GdkScreen *gdk_event_get_screen (const GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:552:NC */ extern void gdk_set_show_events (gboolean);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:553:NC */ extern gboolean gdk_get_show_events (void);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:556:NC */ extern void gdk_add_client_message_filter (GdkAtom, GdkFilterFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdkevents.h:560:NC */ extern gboolean gdk_setting_get (const gchar *, GValue *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:141:NC */ extern GType gdk_display_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:142:NC */ extern GdkDisplay *gdk_display_open (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:144:NC */ extern const gchar *gdk_display_get_name (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:146:NC */ extern gint gdk_display_get_n_screens (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:147:NC */ extern GdkScreen *gdk_display_get_screen (GdkDisplay *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:149:NC */ extern GdkScreen *gdk_display_get_default_screen (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:150:NC */ extern void gdk_display_pointer_ungrab (GdkDisplay *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:152:NC */ extern void gdk_display_keyboard_ungrab (GdkDisplay *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:154:NC */ extern gboolean gdk_display_pointer_is_grabbed (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:155:NC */ extern void gdk_display_beep (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:156:NC */ extern void gdk_display_sync (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:157:NC */ extern void gdk_display_flush (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:159:NC */ extern void gdk_display_close (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:160:NC */ extern gboolean gdk_display_is_closed (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:162:NC */ extern GList *gdk_display_list_devices (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:164:NC */ extern GdkEvent *gdk_display_get_event (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:165:NC */ extern GdkEvent *gdk_display_peek_event (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:166:NC */ extern void gdk_display_put_event (GdkDisplay *, const GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:169:NC */ extern void gdk_display_add_client_message_filter (GdkDisplay *, GdkAtom, GdkFilterFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:174:NC */ extern void gdk_display_set_double_click_time (GdkDisplay *, guint);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:176:NC */ extern void gdk_display_set_double_click_distance (GdkDisplay *, guint);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:179:NC */ extern GdkDisplay *gdk_display_get_default (void);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:181:NC */ extern GdkDevice *gdk_display_get_core_pointer (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:183:NC */ extern void gdk_display_get_pointer (GdkDisplay *, GdkScreen **, gint *, gint *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:188:NC */ extern GdkWindow *gdk_display_get_window_at_pointer (GdkDisplay *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:191:NC */ extern void gdk_display_warp_pointer (GdkDisplay *, GdkScreen *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:197:NC */ extern GdkDisplayPointerHooks *gdk_display_set_pointer_hooks (GdkDisplay *, const GdkDisplayPointerHooks *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:201:NC */ extern GdkDisplay *gdk_display_open_default_libgtk_only (void);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:203:NC */ extern gboolean gdk_display_supports_cursor_alpha (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:204:NC */ extern gboolean gdk_display_supports_cursor_color (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:205:NC */ extern guint gdk_display_get_default_cursor_size (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:206:NC */ extern void gdk_display_get_maximal_cursor_size (GdkDisplay *, guint *, guint *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:210:NC */ extern GdkWindow *gdk_display_get_default_group (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:212:NC */ extern gboolean gdk_display_supports_selection_notification (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:213:NC */ extern gboolean gdk_display_request_selection_notification (GdkDisplay *, GdkAtom);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:216:NC */ extern gboolean gdk_display_supports_clipboard_persistence (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:217:NC */ extern void gdk_display_store_clipboard (GdkDisplay *, GdkWindow *, guint32, const GdkAtom *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:223:NC */ extern gboolean gdk_display_supports_shapes (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:224:NC */ extern gboolean gdk_display_supports_input_shapes (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplay.h:225:NC */ extern gboolean gdk_display_supports_composite (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:69:NC */ extern GType gdk_screen_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:70:NC */ extern GdkColormap *gdk_screen_get_default_colormap (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:71:NC */ extern void gdk_screen_set_default_colormap (GdkScreen *, GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:73:NC */ extern GdkColormap *gdk_screen_get_system_colormap (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:74:NC */ extern GdkVisual *gdk_screen_get_system_visual (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:75:NC */ extern GdkColormap *gdk_screen_get_rgb_colormap (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:76:NC */ extern GdkVisual *gdk_screen_get_rgb_visual (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:77:NC */ extern GdkColormap *gdk_screen_get_rgba_colormap (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:78:NC */ extern GdkVisual *gdk_screen_get_rgba_visual (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:79:NC */ extern gboolean gdk_screen_is_composited (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:81:NC */ extern GdkWindow *gdk_screen_get_root_window (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:82:NC */ extern GdkDisplay *gdk_screen_get_display (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:83:NC */ extern gint gdk_screen_get_number (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:84:NC */ extern gint gdk_screen_get_width (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:85:NC */ extern gint gdk_screen_get_height (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:86:NC */ extern gint gdk_screen_get_width_mm (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:87:NC */ extern gint gdk_screen_get_height_mm (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:89:NC */ extern GList *gdk_screen_list_visuals (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:90:NC */ extern GList *gdk_screen_get_toplevel_windows (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:91:NC */ extern gchar *gdk_screen_make_display_name (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:93:NC */ extern gint gdk_screen_get_n_monitors (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:94:NC */ extern gint gdk_screen_get_primary_monitor (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:95:NC */ extern void gdk_screen_get_monitor_geometry (GdkScreen *, gint, GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:98:NC */ extern gint gdk_screen_get_monitor_at_point (GdkScreen *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:101:NC */ extern gint gdk_screen_get_monitor_at_window (GdkScreen *, GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:103:NC */ extern gint gdk_screen_get_monitor_width_mm (GdkScreen *, gint);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:105:NC */ extern gint gdk_screen_get_monitor_height_mm (GdkScreen *, gint);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:107:NC */ extern gchar *gdk_screen_get_monitor_plug_name (GdkScreen *, gint);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:110:NC */ extern void gdk_screen_broadcast_client_message (GdkScreen *, GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:113:NC */ extern GdkScreen *gdk_screen_get_default (void);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:115:NC */ extern gboolean gdk_screen_get_setting (GdkScreen *, const gchar *, GValue *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:119:NC */ extern void gdk_screen_set_font_options (GdkScreen *, const cairo_font_options_t *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:121:NC */ extern const cairo_font_options_t *gdk_screen_get_font_options (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:123:NC */ extern void gdk_screen_set_resolution (GdkScreen *, gdouble);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:125:NC */ extern gdouble gdk_screen_get_resolution (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:127:NC */ extern GdkWindow *gdk_screen_get_active_window (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkscreen.h:128:NC */ extern GList *gdk_screen_get_window_stack (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:58:NC */ extern GType gdk_app_launch_context_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:60:NC */ extern GdkAppLaunchContext *gdk_app_launch_context_new (void);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:61:NC */ extern void gdk_app_launch_context_set_display (GdkAppLaunchContext *, GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:63:NC */ extern void gdk_app_launch_context_set_screen (GdkAppLaunchContext *, GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:65:NC */ extern void gdk_app_launch_context_set_desktop (GdkAppLaunchContext *, gint);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:67:NC */ extern void gdk_app_launch_context_set_timestamp (GdkAppLaunchContext *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:69:NC */ extern void gdk_app_launch_context_set_icon (GdkAppLaunchContext *, GIcon *);
/* /usr/include/gtk-2.0/gdk/gdkapplaunchcontext.h:71:NC */ extern void gdk_app_launch_context_set_icon_name (GdkAppLaunchContext *, const char *);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:57:NC */ extern void gdk_rgb_init (void);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:59:NC */ extern gulong gdk_rgb_xpixel_from_rgb (guint32);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:60:NC */ extern void gdk_rgb_gc_set_foreground (GdkGC *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:62:NC */ extern void gdk_rgb_gc_set_background (GdkGC *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:66:NC */ extern void gdk_rgb_find_color (GdkColormap *, GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:69:NC */ extern void gdk_draw_rgb_image (GdkDrawable *, GdkGC *, gint, gint, gint, gint, GdkRgbDither, const guchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:78:NC */ extern void gdk_draw_rgb_image_dithalign (GdkDrawable *, GdkGC *, gint, gint, gint, gint, GdkRgbDither, const guchar *, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:89:NC */ extern void gdk_draw_rgb_32_image (GdkDrawable *, GdkGC *, gint, gint, gint, gint, GdkRgbDither, const guchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:98:NC */ extern void gdk_draw_rgb_32_image_dithalign (GdkDrawable *, GdkGC *, gint, gint, gint, gint, GdkRgbDither, const guchar *, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:109:NC */ extern void gdk_draw_gray_image (GdkDrawable *, GdkGC *, gint, gint, gint, gint, GdkRgbDither, const guchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:118:NC */ extern void gdk_draw_indexed_image (GdkDrawable *, GdkGC *, gint, gint, gint, gint, GdkRgbDither, const guchar *, gint, GdkRgbCmap *);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:128:NC */ extern GdkRgbCmap *gdk_rgb_cmap_new (guint32 *, gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:130:NC */ extern void gdk_rgb_cmap_free (GdkRgbCmap *);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:132:NC */ extern void gdk_rgb_set_verbose (gboolean);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:135:NC */ extern void gdk_rgb_set_install (gboolean);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:136:NC */ extern void gdk_rgb_set_min_colors (gint);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:139:NC */ extern GdkColormap *gdk_rgb_get_colormap (void);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:140:NC */ extern GdkVisual *gdk_rgb_get_visual (void);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:141:NC */ extern gboolean gdk_rgb_ditherable (void);
/* /usr/include/gtk-2.0/gdk/gdkrgb.h:142:NC */ extern gboolean gdk_rgb_colormap_ditherable (GdkColormap *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:230:NC */ extern GQuark gdk_pixbuf_error_quark (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:234:NC */ extern GType gdk_pixbuf_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:239:NC */ extern GdkPixbuf *gdk_pixbuf_ref (GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:240:NC */ extern void gdk_pixbuf_unref (GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:245:NC */ extern GdkColorspace gdk_pixbuf_get_colorspace (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:246:NC */ extern int gdk_pixbuf_get_n_channels (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:247:NC */ extern gboolean gdk_pixbuf_get_has_alpha (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:248:NC */ extern int gdk_pixbuf_get_bits_per_sample (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:249:NC */ extern guchar *gdk_pixbuf_get_pixels (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:250:NC */ extern int gdk_pixbuf_get_width (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:251:NC */ extern int gdk_pixbuf_get_height (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:252:NC */ extern int gdk_pixbuf_get_rowstride (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:257:NC */ extern GdkPixbuf *gdk_pixbuf_new (GdkColorspace, gboolean, int, int, int);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:262:NC */ extern GdkPixbuf *gdk_pixbuf_copy (const GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:265:NC */ extern GdkPixbuf *gdk_pixbuf_new_subpixbuf (GdkPixbuf *, int, int, int, int);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:280:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_file (const char *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:282:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_file_at_size (const char *, int, int, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:286:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_file_at_scale (const char *, int, int, gboolean, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:292:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_data (const guchar *, GdkColorspace, gboolean, int, int, int, int, GdkPixbufDestroyNotify, gpointer);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:301:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_xpm_data (const char **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:302:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_inline (gint, const guint8 *, gboolean, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:308:NC */ extern void gdk_pixbuf_fill (GdkPixbuf *, guint32);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:319:NC */ extern gboolean gdk_pixbuf_save (GdkPixbuf *, const char *, const char *, GError **, ...);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:325:NC */ extern gboolean gdk_pixbuf_savev (GdkPixbuf *, const char *, const char *, char **, char **, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:358:NC */ extern gboolean gdk_pixbuf_save_to_callback (GdkPixbuf *, GdkPixbufSaveFunc, gpointer, const char *, GError **, ...);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:365:NC */ extern gboolean gdk_pixbuf_save_to_callbackv (GdkPixbuf *, GdkPixbufSaveFunc, gpointer, const char *, char **, char **, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:375:NC */ extern gboolean gdk_pixbuf_save_to_buffer (GdkPixbuf *, gchar **, gsize *, const char *, GError **, ...);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:382:NC */ extern gboolean gdk_pixbuf_save_to_bufferv (GdkPixbuf *, gchar **, gsize *, const char *, char **, char **, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:390:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_stream (GInputStream *, GCancellable *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:394:NC */ extern void gdk_pixbuf_new_from_stream_async (GInputStream *, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:399:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_stream_finish (GAsyncResult *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:402:NC */ extern GdkPixbuf *gdk_pixbuf_new_from_stream_at_scale (GInputStream *, gint, gint, gboolean, GCancellable *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:409:NC */ extern void gdk_pixbuf_new_from_stream_at_scale_async (GInputStream *, gint, gint, gboolean, GCancellable *, GAsyncReadyCallback, gpointer);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:417:NC */ extern gboolean gdk_pixbuf_save_to_stream (GdkPixbuf *, GOutputStream *, const char *, GCancellable *, GError **, ...);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:424:NC */ extern void gdk_pixbuf_save_to_stream_async (GdkPixbuf *, GOutputStream *, const gchar *, GCancellable *, GAsyncReadyCallback, gpointer, ...);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:432:NC */ extern gboolean gdk_pixbuf_save_to_stream_finish (GAsyncResult *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:436:NC */ extern GdkPixbuf *gdk_pixbuf_add_alpha (const GdkPixbuf *, gboolean, guchar, guchar, guchar);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:440:NC */ extern void gdk_pixbuf_copy_area (const GdkPixbuf *, int, int, int, int, GdkPixbuf *, int, int);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:447:NC */ extern void gdk_pixbuf_saturate_and_pixelate (const GdkPixbuf *, GdkPixbuf *, gfloat, gboolean);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:453:NC */ extern GdkPixbuf *gdk_pixbuf_apply_embedded_orientation (GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h:455:NC */ extern const gchar *gdk_pixbuf_get_option (GdkPixbuf *, const gchar *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:97:NC */ extern void gdk_pixbuf_scale (const GdkPixbuf *, GdkPixbuf *, int, int, int, int, double, double, double, double, GdkInterpType);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:108:NC */ extern void gdk_pixbuf_composite (const GdkPixbuf *, GdkPixbuf *, int, int, int, int, double, double, double, double, GdkInterpType, int);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:120:NC */ extern void gdk_pixbuf_composite_color (const GdkPixbuf *, GdkPixbuf *, int, int, int, int, double, double, double, double, GdkInterpType, int, int, int, int, guint32, guint32);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:138:NC */ extern GdkPixbuf *gdk_pixbuf_scale_simple (const GdkPixbuf *, int, int, GdkInterpType);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:143:NC */ extern GdkPixbuf *gdk_pixbuf_composite_color_simple (const GdkPixbuf *, int, int, GdkInterpType, int, int, guint32, guint32);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:152:NC */ extern GdkPixbuf *gdk_pixbuf_rotate_simple (const GdkPixbuf *, GdkPixbufRotation);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h:154:NC */ extern GdkPixbuf *gdk_pixbuf_flip (const GdkPixbuf *, gboolean);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:65:NC */ extern GType gdk_pixbuf_animation_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:71:NC */ extern GdkPixbufAnimation *gdk_pixbuf_animation_new_from_file (const char *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:75:NC */ extern GdkPixbufAnimation *gdk_pixbuf_animation_ref (GdkPixbufAnimation *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:76:NC */ extern void gdk_pixbuf_animation_unref (GdkPixbufAnimation *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:79:NC */ extern int gdk_pixbuf_animation_get_width (GdkPixbufAnimation *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:80:NC */ extern int gdk_pixbuf_animation_get_height (GdkPixbufAnimation *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:81:NC */ extern gboolean gdk_pixbuf_animation_is_static_image (GdkPixbufAnimation *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:82:NC */ extern GdkPixbuf *gdk_pixbuf_animation_get_static_image (GdkPixbufAnimation *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:84:NC */ extern GdkPixbufAnimationIter *gdk_pixbuf_animation_get_iter (GdkPixbufAnimation *, const GTimeVal *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:86:NC */ extern GType gdk_pixbuf_animation_iter_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:87:NC */ extern int gdk_pixbuf_animation_iter_get_delay_time (GdkPixbufAnimationIter *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:88:NC */ extern GdkPixbuf *gdk_pixbuf_animation_iter_get_pixbuf (GdkPixbufAnimationIter *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:89:NC */ extern gboolean gdk_pixbuf_animation_iter_on_currently_loading_frame (GdkPixbufAnimationIter *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h:90:NC */ extern gboolean gdk_pixbuf_animation_iter_advance (GdkPixbufAnimationIter *, const GTimeVal *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h:51:NC */ extern GType gdk_pixbuf_simple_anim_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h:52:NC */ extern GType gdk_pixbuf_simple_anim_iter_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h:54:NC */ extern GdkPixbufSimpleAnim *gdk_pixbuf_simple_anim_new (gint, gint, gfloat);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h:57:NC */ extern void gdk_pixbuf_simple_anim_add_frame (GdkPixbufSimpleAnim *, GdkPixbuf *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h:59:NC */ extern void gdk_pixbuf_simple_anim_set_loop (GdkPixbufSimpleAnim *, gboolean);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h:61:NC */ extern gboolean gdk_pixbuf_simple_anim_get_loop (GdkPixbufSimpleAnim *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:46:NC */ extern GType gdk_pixbuf_format_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:48:NC */ extern GSList *gdk_pixbuf_get_formats (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:49:NC */ extern gchar *gdk_pixbuf_format_get_name (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:50:NC */ extern gchar *gdk_pixbuf_format_get_description (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:51:NC */ extern gchar **gdk_pixbuf_format_get_mime_types (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:52:NC */ extern gchar **gdk_pixbuf_format_get_extensions (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:53:NC */ extern gboolean gdk_pixbuf_format_is_writable (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:54:NC */ extern gboolean gdk_pixbuf_format_is_scalable (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:55:NC */ extern gboolean gdk_pixbuf_format_is_disabled (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:56:NC */ extern void gdk_pixbuf_format_set_disabled (GdkPixbufFormat *, gboolean);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:58:NC */ extern gchar *gdk_pixbuf_format_get_license (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:60:NC */ extern GdkPixbufFormat *gdk_pixbuf_get_file_info (const gchar *, gint *, gint *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:64:NC */ extern GdkPixbufFormat *gdk_pixbuf_format_copy (const GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h:65:NC */ extern void gdk_pixbuf_format_free (GdkPixbufFormat *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:84:NC */ extern GType gdk_pixbuf_loader_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:85:NC */ extern GdkPixbufLoader *gdk_pixbuf_loader_new (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:86:NC */ extern GdkPixbufLoader *gdk_pixbuf_loader_new_with_type (const char *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:88:NC */ extern GdkPixbufLoader *gdk_pixbuf_loader_new_with_mime_type (const char *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:90:NC */ extern void gdk_pixbuf_loader_set_size (GdkPixbufLoader *, int, int);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:93:NC */ extern gboolean gdk_pixbuf_loader_write (GdkPixbufLoader *, const guchar *, gsize, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:97:NC */ extern GdkPixbuf *gdk_pixbuf_loader_get_pixbuf (GdkPixbufLoader *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:98:NC */ extern GdkPixbufAnimation *gdk_pixbuf_loader_get_animation (GdkPixbufLoader *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:99:NC */ extern gboolean gdk_pixbuf_loader_close (GdkPixbufLoader *, GError **);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h:101:NC */ extern GdkPixbufFormat *gdk_pixbuf_loader_get_format (GdkPixbufLoader *);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h:16:NC */ extern GType gdk_pixbuf_alpha_mode_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h:18:NC */ extern GType gdk_colorspace_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h:20:NC */ extern GType gdk_pixbuf_error_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h:24:NC */ extern GType gdk_interp_type_get_type (void);
/* /usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h:26:NC */ extern GType gdk_pixbuf_rotation_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:43:NC */ extern void gdk_pixbuf_render_threshold_alpha (GdkPixbuf *, GdkBitmap *, int, int, int, int, int, int, int);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:53:NC */ extern void gdk_pixbuf_render_to_drawable (GdkPixbuf *, GdkDrawable *, GdkGC *, int, int, int, int, int, int, GdkRgbDither, int, int);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:65:NC */ extern void gdk_pixbuf_render_to_drawable_alpha (GdkPixbuf *, GdkDrawable *, int, int, int, int, int, int, GdkPixbufAlphaMode, int, GdkRgbDither, int, int);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:79:NC */ extern void gdk_pixbuf_render_pixmap_and_mask_for_colormap (GdkPixbuf *, GdkColormap *, GdkPixmap **, GdkBitmap **, int);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:85:NC */ extern void gdk_pixbuf_render_pixmap_and_mask (GdkPixbuf *, GdkPixmap **, GdkBitmap **, int);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:93:NC */ extern GdkPixbuf *gdk_pixbuf_get_from_drawable (GdkPixbuf *, GdkDrawable *, GdkColormap *, int, int, int, int, int, int);
/* /usr/include/gtk-2.0/gdk/gdkpixbuf.h:103:NC */ extern GdkPixbuf *gdk_pixbuf_get_from_image (GdkPixbuf *, GdkImage *, GdkColormap *, int, int, int, int, int, int);
/* /usr/include/pango-1.0/pango/pangocairo.h:66:NC */ extern GType pango_cairo_font_map_get_type (void);
/* /usr/include/pango-1.0/pango/pangocairo.h:68:NC */ extern PangoFontMap *pango_cairo_font_map_new (void);
/* /usr/include/pango-1.0/pango/pangocairo.h:69:NC */ extern PangoFontMap *pango_cairo_font_map_new_for_font_type (cairo_font_type_t);
/* /usr/include/pango-1.0/pango/pangocairo.h:70:NC */ extern PangoFontMap *pango_cairo_font_map_get_default (void);
/* /usr/include/pango-1.0/pango/pangocairo.h:71:NC */ extern void pango_cairo_font_map_set_default (PangoCairoFontMap *);
/* /usr/include/pango-1.0/pango/pangocairo.h:72:NC */ extern cairo_font_type_t pango_cairo_font_map_get_font_type (PangoCairoFontMap *);
/* /usr/include/pango-1.0/pango/pangocairo.h:74:NC */ extern void pango_cairo_font_map_set_resolution (PangoCairoFontMap *, double);
/* /usr/include/pango-1.0/pango/pangocairo.h:76:NC */ extern double pango_cairo_font_map_get_resolution (PangoCairoFontMap *);
/* /usr/include/pango-1.0/pango/pangocairo.h:78:NC */ extern PangoContext *pango_cairo_font_map_create_context (PangoCairoFontMap *);
/* /usr/include/pango-1.0/pango/pangocairo.h:84:NC */ extern GType pango_cairo_font_get_type (void);
/* /usr/include/pango-1.0/pango/pangocairo.h:86:NC */ extern cairo_scaled_font_t *pango_cairo_font_get_scaled_font (PangoCairoFont *);
/* /usr/include/pango-1.0/pango/pangocairo.h:90:NC */ extern void pango_cairo_update_context (cairo_t *, PangoContext *);
/* /usr/include/pango-1.0/pango/pangocairo.h:93:NC */ extern void pango_cairo_context_set_font_options (PangoContext *, const cairo_font_options_t *);
/* /usr/include/pango-1.0/pango/pangocairo.h:95:NC */ extern const cairo_font_options_t *pango_cairo_context_get_font_options (PangoContext *);
/* /usr/include/pango-1.0/pango/pangocairo.h:97:NC */ extern void pango_cairo_context_set_resolution (PangoContext *, double);
/* /usr/include/pango-1.0/pango/pangocairo.h:99:NC */ extern double pango_cairo_context_get_resolution (PangoContext *);
/* /usr/include/pango-1.0/pango/pangocairo.h:101:NC */ extern void pango_cairo_context_set_shape_renderer (PangoContext *, PangoCairoShapeRendererFunc, gpointer, GDestroyNotify);
/* /usr/include/pango-1.0/pango/pangocairo.h:105:NC */ extern PangoCairoShapeRendererFunc pango_cairo_context_get_shape_renderer (PangoContext *, gpointer *);
/* /usr/include/pango-1.0/pango/pangocairo.h:110:NC */ extern PangoContext *pango_cairo_create_context (cairo_t *);
/* /usr/include/pango-1.0/pango/pangocairo.h:111:NC */ extern PangoLayout *pango_cairo_create_layout (cairo_t *);
/* /usr/include/pango-1.0/pango/pangocairo.h:112:NC */ extern void pango_cairo_update_layout (cairo_t *, PangoLayout *);
/* /usr/include/pango-1.0/pango/pangocairo.h:118:NC */ extern void pango_cairo_show_glyph_string (cairo_t *, PangoFont *, PangoGlyphString *);
/* /usr/include/pango-1.0/pango/pangocairo.h:121:NC */ extern void pango_cairo_show_glyph_item (cairo_t *, const char *, PangoGlyphItem *);
/* /usr/include/pango-1.0/pango/pangocairo.h:124:NC */ extern void pango_cairo_show_layout_line (cairo_t *, PangoLayoutLine *);
/* /usr/include/pango-1.0/pango/pangocairo.h:126:NC */ extern void pango_cairo_show_layout (cairo_t *, PangoLayout *);
/* /usr/include/pango-1.0/pango/pangocairo.h:129:NC */ extern void pango_cairo_show_error_underline (cairo_t *, double, double, double, double);
/* /usr/include/pango-1.0/pango/pangocairo.h:138:NC */ extern void pango_cairo_glyph_string_path (cairo_t *, PangoFont *, PangoGlyphString *);
/* /usr/include/pango-1.0/pango/pangocairo.h:141:NC */ extern void pango_cairo_layout_line_path (cairo_t *, PangoLayoutLine *);
/* /usr/include/pango-1.0/pango/pangocairo.h:143:NC */ extern void pango_cairo_layout_path (cairo_t *, PangoLayout *);
/* /usr/include/pango-1.0/pango/pangocairo.h:146:NC */ extern void pango_cairo_error_underline_path (cairo_t *, double, double, double, double);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:33:NC */ extern cairo_t *gdk_cairo_create (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:34:NC */ extern void gdk_cairo_reset_clip (cairo_t *, GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:37:NC */ extern void gdk_cairo_set_source_color (cairo_t *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:39:NC */ extern void gdk_cairo_set_source_pixbuf (cairo_t *, const GdkPixbuf *, double, double);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:43:NC */ extern void gdk_cairo_set_source_pixmap (cairo_t *, GdkPixmap *, double, double);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:47:NC */ extern void gdk_cairo_set_source_window (cairo_t *, GdkWindow *, double, double);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:52:NC */ extern void gdk_cairo_rectangle (cairo_t *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkcairo.h:54:NC */ extern void gdk_cairo_region (cairo_t *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:137:NC */ extern GType gdk_cursor_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:139:NC */ extern GdkCursor *gdk_cursor_new_for_display (GdkDisplay *, GdkCursorType);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:142:NC */ extern GdkCursor *gdk_cursor_new (GdkCursorType);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:144:NC */ extern GdkCursor *gdk_cursor_new_from_pixmap (GdkPixmap *, GdkPixmap *, const GdkColor *, const GdkColor *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:150:NC */ extern GdkCursor *gdk_cursor_new_from_pixbuf (GdkDisplay *, GdkPixbuf *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:154:NC */ extern GdkDisplay *gdk_cursor_get_display (GdkCursor *);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:155:NC */ extern GdkCursor *gdk_cursor_ref (GdkCursor *);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:156:NC */ extern void gdk_cursor_unref (GdkCursor *);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:157:NC */ extern GdkCursor *gdk_cursor_new_from_name (GdkDisplay *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:159:NC */ extern GdkPixbuf *gdk_cursor_get_image (GdkCursor *);
/* /usr/include/gtk-2.0/gdk/gdkcursor.h:160:NC */ extern GdkCursorType gdk_cursor_get_cursor_type (GdkCursor *);
/* /usr/include/gtk-2.0/gdk/gdkdisplaymanager.h:57:NC */ extern GType gdk_display_manager_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkdisplaymanager.h:59:NC */ extern GdkDisplayManager *gdk_display_manager_get (void);
/* /usr/include/gtk-2.0/gdk/gdkdisplaymanager.h:60:NC */ extern GdkDisplay *gdk_display_manager_get_default_display (GdkDisplayManager *);
/* /usr/include/gtk-2.0/gdk/gdkdisplaymanager.h:61:NC */ extern void gdk_display_manager_set_default_display (GdkDisplayManager *, GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkdisplaymanager.h:63:NC */ extern GSList *gdk_display_manager_list_displays (GdkDisplayManager *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:224:NC */ extern GType gdk_gc_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:225:NC */ extern GdkGC *gdk_gc_new (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:226:NC */ extern GdkGC *gdk_gc_new_with_values (GdkDrawable *, GdkGCValues *, GdkGCValuesMask);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:230:NC */ extern GdkGC *gdk_gc_ref (GdkGC *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:231:NC */ extern void gdk_gc_unref (GdkGC *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:233:NC */ extern void gdk_gc_get_values (GdkGC *, GdkGCValues *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:235:NC */ extern void gdk_gc_set_values (GdkGC *, GdkGCValues *, GdkGCValuesMask);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:238:NC */ extern void gdk_gc_set_foreground (GdkGC *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:240:NC */ extern void gdk_gc_set_background (GdkGC *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:242:NC */ extern void gdk_gc_set_font (GdkGC *, GdkFont *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:244:NC */ extern void gdk_gc_set_function (GdkGC *, GdkFunction);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:246:NC */ extern void gdk_gc_set_fill (GdkGC *, GdkFill);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:248:NC */ extern void gdk_gc_set_tile (GdkGC *, GdkPixmap *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:250:NC */ extern void gdk_gc_set_stipple (GdkGC *, GdkPixmap *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:252:NC */ extern void gdk_gc_set_ts_origin (GdkGC *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:255:NC */ extern void gdk_gc_set_clip_origin (GdkGC *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:258:NC */ extern void gdk_gc_set_clip_mask (GdkGC *, GdkBitmap *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:260:NC */ extern void gdk_gc_set_clip_rectangle (GdkGC *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:262:NC */ extern void gdk_gc_set_clip_region (GdkGC *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:264:NC */ extern void gdk_gc_set_subwindow (GdkGC *, GdkSubwindowMode);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:266:NC */ extern void gdk_gc_set_exposures (GdkGC *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:268:NC */ extern void gdk_gc_set_line_attributes (GdkGC *, gint, GdkLineStyle, GdkCapStyle, GdkJoinStyle);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:273:NC */ extern void gdk_gc_set_dashes (GdkGC *, gint, gint8 *, gint);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:277:NC */ extern void gdk_gc_offset (GdkGC *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:280:NC */ extern void gdk_gc_copy (GdkGC *, GdkGC *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:284:NC */ extern void gdk_gc_set_colormap (GdkGC *, GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:286:NC */ extern GdkColormap *gdk_gc_get_colormap (GdkGC *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:287:NC */ extern void gdk_gc_set_rgb_fg_color (GdkGC *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:289:NC */ extern void gdk_gc_set_rgb_bg_color (GdkGC *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkgc.h:291:NC */ extern GdkScreen *gdk_gc_get_screen (GdkGC *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:239:NC */ extern GType gdk_drawable_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:245:NC */ extern void gdk_drawable_set_data (GdkDrawable *, const gchar *, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:249:NC */ extern gpointer gdk_drawable_get_data (GdkDrawable *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:253:NC */ extern void gdk_drawable_set_colormap (GdkDrawable *, GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:255:NC */ extern GdkColormap *gdk_drawable_get_colormap (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:256:NC */ extern gint gdk_drawable_get_depth (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:259:NC */ extern void gdk_drawable_get_size (GdkDrawable *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:262:NC */ extern GdkVisual *gdk_drawable_get_visual (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:263:NC */ extern GdkScreen *gdk_drawable_get_screen (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:264:NC */ extern GdkDisplay *gdk_drawable_get_display (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:268:NC */ extern GdkDrawable *gdk_drawable_ref (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:269:NC */ extern void gdk_drawable_unref (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:275:NC */ extern void gdk_draw_point (GdkDrawable *, GdkGC *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:279:NC */ extern void gdk_draw_line (GdkDrawable *, GdkGC *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:285:NC */ extern void gdk_draw_rectangle (GdkDrawable *, GdkGC *, gboolean, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:292:NC */ extern void gdk_draw_arc (GdkDrawable *, GdkGC *, gboolean, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:301:NC */ extern void gdk_draw_polygon (GdkDrawable *, GdkGC *, gboolean, const GdkPoint *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:306:NC */ extern void gdk_draw_string (GdkDrawable *, GdkFont *, GdkGC *, gint, gint, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:312:NC */ extern void gdk_draw_text (GdkDrawable *, GdkFont *, GdkGC *, gint, gint, const gchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:319:NC */ extern void gdk_draw_text_wc (GdkDrawable *, GdkFont *, GdkGC *, gint, gint, const GdkWChar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:326:NC */ extern void gdk_draw_drawable (GdkDrawable *, GdkGC *, GdkDrawable *, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:335:NC */ extern void gdk_draw_image (GdkDrawable *, GdkGC *, GdkImage *, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:344:NC */ extern void gdk_draw_points (GdkDrawable *, GdkGC *, const GdkPoint *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:348:NC */ extern void gdk_draw_segments (GdkDrawable *, GdkGC *, const GdkSegment *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:352:NC */ extern void gdk_draw_lines (GdkDrawable *, GdkGC *, const GdkPoint *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:356:NC */ extern void gdk_draw_pixbuf (GdkDrawable *, GdkGC *, const GdkPixbuf *, gint, gint, gint, gint, gint, gint, GdkRgbDither, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:369:NC */ extern void gdk_draw_glyphs (GdkDrawable *, GdkGC *, PangoFont *, gint, gint, PangoGlyphString *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:375:NC */ extern void gdk_draw_layout_line (GdkDrawable *, GdkGC *, gint, gint, PangoLayoutLine *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:380:NC */ extern void gdk_draw_layout (GdkDrawable *, GdkGC *, gint, gint, PangoLayout *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:386:NC */ extern void gdk_draw_layout_line_with_colors (GdkDrawable *, GdkGC *, gint, gint, PangoLayoutLine *, const GdkColor *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:393:NC */ extern void gdk_draw_layout_with_colors (GdkDrawable *, GdkGC *, gint, gint, PangoLayout *, const GdkColor *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:401:NC */ extern void gdk_draw_glyphs_transformed (GdkDrawable *, GdkGC *, const PangoMatrix *, PangoFont *, gint, gint, PangoGlyphString *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:408:NC */ extern void gdk_draw_trapezoids (GdkDrawable *, GdkGC *, const GdkTrapezoid *, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:416:NC */ extern GdkImage *gdk_drawable_get_image (GdkDrawable *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:421:NC */ extern GdkImage *gdk_drawable_copy_to_image (GdkDrawable *, GdkImage *, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:431:NC */ extern GdkRegion *gdk_drawable_get_clip_region (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkdrawable.h:432:NC */ extern GdkRegion *gdk_drawable_get_visible_region (GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:16:NC */ extern GType gdk_cursor_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:20:NC */ extern GType gdk_drag_action_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:22:NC */ extern GType gdk_drag_protocol_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:26:NC */ extern GType gdk_filter_return_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:28:NC */ extern GType gdk_event_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:30:NC */ extern GType gdk_event_mask_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:32:NC */ extern GType gdk_visibility_state_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:34:NC */ extern GType gdk_scroll_direction_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:36:NC */ extern GType gdk_notify_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:38:NC */ extern GType gdk_crossing_mode_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:40:NC */ extern GType gdk_property_state_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:42:NC */ extern GType gdk_window_state_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:44:NC */ extern GType gdk_setting_action_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:46:NC */ extern GType gdk_owner_change_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:50:NC */ extern GType gdk_font_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:54:NC */ extern GType gdk_cap_style_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:56:NC */ extern GType gdk_fill_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:58:NC */ extern GType gdk_function_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:60:NC */ extern GType gdk_join_style_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:62:NC */ extern GType gdk_line_style_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:64:NC */ extern GType gdk_subwindow_mode_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:66:NC */ extern GType gdk_gc_values_mask_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:70:NC */ extern GType gdk_image_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:74:NC */ extern GType gdk_extension_mode_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:76:NC */ extern GType gdk_input_source_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:78:NC */ extern GType gdk_input_mode_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:80:NC */ extern GType gdk_axis_use_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:84:NC */ extern GType gdk_prop_mode_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:88:NC */ extern GType gdk_fill_rule_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:90:NC */ extern GType gdk_overlap_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:94:NC */ extern GType gdk_rgb_dither_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:98:NC */ extern GType gdk_byte_order_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:100:NC */ extern GType gdk_modifier_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:102:NC */ extern GType gdk_input_condition_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:104:NC */ extern GType gdk_status_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:106:NC */ extern GType gdk_grab_status_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:110:NC */ extern GType gdk_visual_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:114:NC */ extern GType gdk_window_class_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:116:NC */ extern GType gdk_window_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:118:NC */ extern GType gdk_window_attributes_type_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:120:NC */ extern GType gdk_window_hints_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:122:NC */ extern GType gdk_window_type_hint_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:124:NC */ extern GType gdk_wm_decoration_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:126:NC */ extern GType gdk_wm_function_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:128:NC */ extern GType gdk_gravity_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkenumtypes.h:130:NC */ extern GType gdk_window_edge_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:56:NC */ extern GType gdk_font_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:58:NC */ extern GdkFont *gdk_font_ref (GdkFont *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:59:NC */ extern void gdk_font_unref (GdkFont *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:60:NC */ extern gint gdk_font_id (const GdkFont *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:61:NC */ extern gboolean gdk_font_equal (const GdkFont *, const GdkFont *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:64:NC */ extern GdkFont *gdk_font_load_for_display (GdkDisplay *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:66:NC */ extern GdkFont *gdk_fontset_load_for_display (GdkDisplay *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:68:NC */ extern GdkFont *gdk_font_from_description_for_display (GdkDisplay *, PangoFontDescription *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:74:NC */ extern GdkFont *gdk_font_load (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:75:NC */ extern GdkFont *gdk_fontset_load (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:76:NC */ extern GdkFont *gdk_font_from_description (PangoFontDescription *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:79:NC */ extern gint gdk_string_width (GdkFont *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:81:NC */ extern gint gdk_text_width (GdkFont *, const gchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:84:NC */ extern gint gdk_text_width_wc (GdkFont *, const GdkWChar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:87:NC */ extern gint gdk_char_width (GdkFont *, gchar);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:89:NC */ extern gint gdk_char_width_wc (GdkFont *, GdkWChar);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:91:NC */ extern gint gdk_string_measure (GdkFont *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:93:NC */ extern gint gdk_text_measure (GdkFont *, const gchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:96:NC */ extern gint gdk_char_measure (GdkFont *, gchar);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:98:NC */ extern gint gdk_string_height (GdkFont *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:100:NC */ extern gint gdk_text_height (GdkFont *, const gchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:103:NC */ extern gint gdk_char_height (GdkFont *, gchar);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:106:NC */ extern void gdk_text_extents (GdkFont *, const gchar *, gint, gint *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:114:NC */ extern void gdk_text_extents_wc (GdkFont *, const GdkWChar *, gint, gint *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:122:NC */ extern void gdk_string_extents (GdkFont *, const gchar *, gint *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkfont.h:130:NC */ extern GdkDisplay *gdk_font_get_display (GdkFont *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:93:NC */ extern GType gdk_image_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:96:NC */ extern GdkImage *gdk_image_new (GdkImageType, GdkVisual *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:101:NC */ extern GdkImage *gdk_image_get (GdkDrawable *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:107:NC */ extern GdkImage *gdk_image_ref (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:108:NC */ extern void gdk_image_unref (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:110:NC */ extern void gdk_image_put_pixel (GdkImage *, gint, gint, guint32);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:114:NC */ extern guint32 gdk_image_get_pixel (GdkImage *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:118:NC */ extern void gdk_image_set_colormap (GdkImage *, GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:120:NC */ extern GdkColormap *gdk_image_get_colormap (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:122:NC */ extern GdkImageType gdk_image_get_image_type (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:123:NC */ extern GdkVisual *gdk_image_get_visual (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:124:NC */ extern GdkByteOrder gdk_image_get_byte_order (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:125:NC */ extern gint gdk_image_get_width (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:126:NC */ extern gint gdk_image_get_height (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:127:NC */ extern guint16 gdk_image_get_depth (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:128:NC */ extern guint16 gdk_image_get_bytes_per_pixel (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:129:NC */ extern guint16 gdk_image_get_bytes_per_line (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:130:NC */ extern guint16 gdk_image_get_bits_per_pixel (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkimage.h:131:NC */ extern gpointer gdk_image_get_pixels (GdkImage *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:81:NC */ extern GType gdk_keymap_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:84:NC */ extern GdkKeymap *gdk_keymap_get_default (void);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:86:NC */ extern GdkKeymap *gdk_keymap_get_for_display (GdkDisplay *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:89:NC */ extern guint gdk_keymap_lookup_key (GdkKeymap *, const GdkKeymapKey *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:91:NC */ extern gboolean gdk_keymap_translate_keyboard_state (GdkKeymap *, guint, GdkModifierType, gint, guint *, gint *, gint *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:99:NC */ extern gboolean gdk_keymap_get_entries_for_keyval (GdkKeymap *, guint, GdkKeymapKey **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:103:NC */ extern gboolean gdk_keymap_get_entries_for_keycode (GdkKeymap *, guint, GdkKeymapKey **, guint **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:108:NC */ extern PangoDirection gdk_keymap_get_direction (GdkKeymap *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:109:NC */ extern gboolean gdk_keymap_have_bidi_layouts (GdkKeymap *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:110:NC */ extern gboolean gdk_keymap_get_caps_lock_state (GdkKeymap *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:111:NC */ extern void gdk_keymap_add_virtual_modifiers (GdkKeymap *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:113:NC */ extern gboolean gdk_keymap_map_virtual_modifiers (GdkKeymap *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:118:NC */ extern gchar *gdk_keyval_name (guint);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:119:NC */ extern guint gdk_keyval_from_name (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:120:NC */ extern void gdk_keyval_convert_case (guint, guint *, guint *);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:123:NC */ extern guint gdk_keyval_to_upper (guint);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:124:NC */ extern guint gdk_keyval_to_lower (guint);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:125:NC */ extern gboolean gdk_keyval_is_upper (guint);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:126:NC */ extern gboolean gdk_keyval_is_lower (guint);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:128:NC */ extern guint32 gdk_keyval_to_unicode (guint);
/* /usr/include/gtk-2.0/gdk/gdkkeys.h:129:NC */ extern guint gdk_unicode_to_keyval (guint32);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:89:NC */ extern GType gdk_pango_renderer_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:91:NC */ extern PangoRenderer *gdk_pango_renderer_new (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:92:NC */ extern PangoRenderer *gdk_pango_renderer_get_default (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:94:NC */ extern void gdk_pango_renderer_set_drawable (GdkPangoRenderer *, GdkDrawable *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:96:NC */ extern void gdk_pango_renderer_set_gc (GdkPangoRenderer *, GdkGC *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:98:NC */ extern void gdk_pango_renderer_set_stipple (GdkPangoRenderer *, PangoRenderPart, GdkBitmap *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:101:NC */ extern void gdk_pango_renderer_set_override_color (GdkPangoRenderer *, PangoRenderPart, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:107:NC */ extern PangoContext *gdk_pango_context_get_for_screen (GdkScreen *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:109:NC */ extern PangoContext *gdk_pango_context_get (void);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:112:NC */ extern void gdk_pango_context_set_colormap (PangoContext *, GdkColormap *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:123:NC */ extern GdkRegion *gdk_pango_layout_line_get_clip_region (PangoLayoutLine *, gint, gint, const gint *, gint);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:128:NC */ extern GdkRegion *gdk_pango_layout_get_clip_region (PangoLayout *, gint, gint, const gint *, gint);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:160:NC */ extern PangoAttribute *gdk_pango_attr_stipple_new (GdkBitmap *);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:161:NC */ extern PangoAttribute *gdk_pango_attr_embossed_new (gboolean);
/* /usr/include/gtk-2.0/gdk/gdkpango.h:162:NC */ extern PangoAttribute *gdk_pango_attr_emboss_color_new (const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:65:NC */ extern GType gdk_pixmap_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:69:NC */ extern GdkPixmap *gdk_pixmap_new (GdkDrawable *, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:74:NC */ extern GdkBitmap *gdk_bitmap_create_from_data (GdkDrawable *, const gchar *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:78:NC */ extern GdkPixmap *gdk_pixmap_create_from_data (GdkDrawable *, const gchar *, gint, gint, gint, const GdkColor *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:86:NC */ extern GdkPixmap *gdk_pixmap_create_from_xpm (GdkDrawable *, GdkBitmap **, const GdkColor *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:90:NC */ extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm (GdkDrawable *, GdkColormap *, GdkBitmap **, const GdkColor *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:95:NC */ extern GdkPixmap *gdk_pixmap_create_from_xpm_d (GdkDrawable *, GdkBitmap **, const GdkColor *, gchar **);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:99:NC */ extern GdkPixmap *gdk_pixmap_colormap_create_from_xpm_d (GdkDrawable *, GdkColormap *, GdkBitmap **, const GdkColor *, gchar **);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:106:NC */ extern void gdk_pixmap_get_size (GdkPixmap *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:113:NC */ extern GdkPixmap *gdk_pixmap_foreign_new (GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:114:NC */ extern GdkPixmap *gdk_pixmap_lookup (GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:117:NC */ extern GdkPixmap *gdk_pixmap_foreign_new_for_display (GdkDisplay *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:119:NC */ extern GdkPixmap *gdk_pixmap_lookup_for_display (GdkDisplay *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkpixmap.h:121:NC */ extern GdkPixmap *gdk_pixmap_foreign_new_for_screen (GdkScreen *, GdkNativeWindow, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:45:NC */ extern GdkAtom gdk_atom_intern (const gchar *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:47:NC */ extern GdkAtom gdk_atom_intern_static_string (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:48:NC */ extern gchar *gdk_atom_name (GdkAtom);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:50:NC */ extern gboolean gdk_property_get (GdkWindow *, GdkAtom, GdkAtom, gulong, gulong, gint, GdkAtom *, gint *, gint *, guchar **);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:60:NC */ extern void gdk_property_change (GdkWindow *, GdkAtom, GdkAtom, gint, GdkPropMode, const guchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:67:NC */ extern void gdk_property_delete (GdkWindow *, GdkAtom);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:71:NC */ extern gint gdk_text_property_to_text_list (GdkAtom, gint, const guchar *, gint, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:76:NC */ extern gboolean gdk_utf8_to_compound_text (const gchar *, GdkAtom *, gint *, guchar **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:81:NC */ extern gint gdk_string_to_compound_text (const gchar *, GdkAtom *, gint *, guchar **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:86:NC */ extern gint gdk_text_property_to_utf8_list (GdkAtom, gint, const guchar *, gint, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:94:NC */ extern gint gdk_text_property_to_utf8_list_for_display (GdkDisplay *, GdkAtom, gint, const guchar *, gint, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:101:NC */ extern gchar *gdk_utf8_to_string_target (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:103:NC */ extern gint gdk_text_property_to_text_list_for_display (GdkDisplay *, GdkAtom, gint, const guchar *, gint, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:109:NC */ extern gint gdk_string_to_compound_text_for_display (GdkDisplay *, const gchar *, GdkAtom *, gint *, guchar **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:115:NC */ extern gboolean gdk_utf8_to_compound_text_for_display (GdkDisplay *, const gchar *, GdkAtom *, gint *, guchar **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:122:NC */ extern void gdk_free_text_list (gchar **);
/* /usr/include/gtk-2.0/gdk/gdkproperty.h:123:NC */ extern void gdk_free_compound_text (guchar *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:67:NC */ extern GdkRegion *gdk_region_new (void);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:69:NC */ extern GdkRegion *gdk_region_polygon (const GdkPoint *, gint, GdkFillRule);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:73:NC */ extern GdkRegion *gdk_region_copy (const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:74:NC */ extern GdkRegion *gdk_region_rectangle (const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:75:NC */ extern void gdk_region_destroy (GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:77:NC */ extern void gdk_region_get_clipbox (const GdkRegion *, GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:79:NC */ extern void gdk_region_get_rectangles (const GdkRegion *, GdkRectangle **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:83:NC */ extern gboolean gdk_region_empty (const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:84:NC */ extern gboolean gdk_region_equal (const GdkRegion *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:87:NC */ extern gboolean gdk_region_rect_equal (const GdkRegion *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:90:NC */ extern gboolean gdk_region_point_in (const GdkRegion *, int, int);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:93:NC */ extern GdkOverlapType gdk_region_rect_in (const GdkRegion *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:96:NC */ extern void gdk_region_offset (GdkRegion *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:100:NC */ extern void gdk_region_shrink (GdkRegion *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:104:NC */ extern void gdk_region_union_with_rect (GdkRegion *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:106:NC */ extern void gdk_region_intersect (GdkRegion *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:108:NC */ extern void gdk_region_union (GdkRegion *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:110:NC */ extern void gdk_region_subtract (GdkRegion *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:112:NC */ extern void gdk_region_xor (GdkRegion *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkregion.h:116:NC */ extern void gdk_region_spans_intersect_foreach (GdkRegion *, const GdkSpan *, int, gboolean, GdkSpanFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:70:NC */ extern gboolean gdk_selection_owner_set (GdkWindow *, GdkAtom, guint32, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:74:NC */ extern GdkWindow *gdk_selection_owner_get (GdkAtom);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:77:NC */ extern gboolean gdk_selection_owner_set_for_display (GdkDisplay *, GdkWindow *, GdkAtom, guint32, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:82:NC */ extern GdkWindow *gdk_selection_owner_get_for_display (GdkDisplay *, GdkAtom);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:85:NC */ extern void gdk_selection_convert (GdkWindow *, GdkAtom, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:89:NC */ extern gint gdk_selection_property_get (GdkWindow *, guchar **, GdkAtom *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:95:NC */ extern void gdk_selection_send_notify (GdkNativeWindow, GdkAtom, GdkAtom, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gdk/gdkselection.h:102:NC */ extern void gdk_selection_send_notify_for_display (GdkDisplay *, GdkNativeWindow, GdkAtom, GdkAtom, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gdk/gdkspawn.h:34:NC */ extern gboolean gdk_spawn_on_screen (GdkScreen *, const gchar *, gchar **, gchar **, GSpawnFlags, GSpawnChildSetupFunc, gpointer, gint *, GError **);
/* /usr/include/gtk-2.0/gdk/gdkspawn.h:44:NC */ extern gboolean gdk_spawn_on_screen_with_pipes (GdkScreen *, const gchar *, gchar **, gchar **, GSpawnFlags, GSpawnChildSetupFunc, gpointer, gint *, gint *, gint *, gint *, GError **);
/* /usr/include/gtk-2.0/gdk/gdkspawn.h:57:NC */ extern gboolean gdk_spawn_command_line_on_screen (GdkScreen *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:331:NC */ extern GType gdk_window_object_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:332:NC */ extern GdkWindow *gdk_window_new (GdkWindow *, GdkWindowAttr *, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:335:NC */ extern void gdk_window_destroy (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:336:NC */ extern GdkWindowType gdk_window_get_window_type (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:337:NC */ extern gboolean gdk_window_is_destroyed (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:339:NC */ extern GdkScreen *gdk_window_get_screen (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:340:NC */ extern GdkDisplay *gdk_window_get_display (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:341:NC */ extern GdkVisual *gdk_window_get_visual (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:342:NC */ extern int gdk_window_get_width (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:343:NC */ extern int gdk_window_get_height (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:345:NC */ extern GdkWindow *gdk_window_at_pointer (gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:347:NC */ extern void gdk_window_show (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:348:NC */ extern void gdk_window_hide (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:349:NC */ extern void gdk_window_withdraw (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:350:NC */ extern void gdk_window_show_unraised (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:351:NC */ extern void gdk_window_move (GdkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:354:NC */ extern void gdk_window_resize (GdkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:357:NC */ extern void gdk_window_move_resize (GdkWindow *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:362:NC */ extern void gdk_window_reparent (GdkWindow *, GdkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:366:NC */ extern void gdk_window_clear (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:367:NC */ extern void gdk_window_clear_area (GdkWindow *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:372:NC */ extern void gdk_window_clear_area_e (GdkWindow *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:377:NC */ extern void gdk_window_raise (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:378:NC */ extern void gdk_window_lower (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:379:NC */ extern void gdk_window_restack (GdkWindow *, GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:382:NC */ extern void gdk_window_focus (GdkWindow *, guint32);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:384:NC */ extern void gdk_window_set_user_data (GdkWindow *, gpointer);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:386:NC */ extern void gdk_window_set_override_redirect (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:388:NC */ extern gboolean gdk_window_get_accept_focus (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:389:NC */ extern void gdk_window_set_accept_focus (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:391:NC */ extern gboolean gdk_window_get_focus_on_map (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:392:NC */ extern void gdk_window_set_focus_on_map (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:394:NC */ extern void gdk_window_add_filter (GdkWindow *, GdkFilterFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:397:NC */ extern void gdk_window_remove_filter (GdkWindow *, GdkFilterFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:400:NC */ extern void gdk_window_scroll (GdkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:403:NC */ extern void gdk_window_move_region (GdkWindow *, const GdkRegion *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:407:NC */ extern gboolean gdk_window_ensure_native (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:415:NC */ extern void gdk_window_shape_combine_mask (GdkWindow *, GdkBitmap *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:419:NC */ extern void gdk_window_shape_combine_region (GdkWindow *, const GdkRegion *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:431:NC */ extern void gdk_window_set_child_shapes (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:433:NC */ extern gboolean gdk_window_get_composited (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:434:NC */ extern void gdk_window_set_composited (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:444:NC */ extern void gdk_window_merge_child_shapes (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:446:NC */ extern void gdk_window_input_shape_combine_mask (GdkWindow *, GdkBitmap *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:450:NC */ extern void gdk_window_input_shape_combine_region (GdkWindow *, const GdkRegion *, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:454:NC */ extern void gdk_window_set_child_input_shapes (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:455:NC */ extern void gdk_window_merge_child_input_shapes (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:464:NC */ extern gboolean gdk_window_is_visible (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:465:NC */ extern gboolean gdk_window_is_viewable (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:466:NC */ extern gboolean gdk_window_is_input_only (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:467:NC */ extern gboolean gdk_window_is_shaped (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:469:NC */ extern GdkWindowState gdk_window_get_state (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:474:NC */ extern gboolean gdk_window_set_static_gravities (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:480:NC */ extern GdkWindow *gdk_window_foreign_new (GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:481:NC */ extern GdkWindow *gdk_window_lookup (GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:483:NC */ extern GdkWindow *gdk_window_foreign_new_for_display (GdkDisplay *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:485:NC */ extern GdkWindow *gdk_window_lookup_for_display (GdkDisplay *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:492:NC */ extern gboolean gdk_window_has_native (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:494:NC */ extern void gdk_window_set_hints (GdkWindow *, gint, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:503:NC */ extern void gdk_window_set_type_hint (GdkWindow *, GdkWindowTypeHint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:505:NC */ extern GdkWindowTypeHint gdk_window_get_type_hint (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:507:NC */ extern gboolean gdk_window_get_modal_hint (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:508:NC */ extern void gdk_window_set_modal_hint (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:511:NC */ extern void gdk_window_set_skip_taskbar_hint (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:513:NC */ extern void gdk_window_set_skip_pager_hint (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:515:NC */ extern void gdk_window_set_urgency_hint (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:518:NC */ extern void gdk_window_set_geometry_hints (GdkWindow *, const GdkGeometry *, GdkWindowHints);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:522:NC */ extern void gdk_set_sm_client_id (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:525:NC */ extern void gdk_window_begin_paint_rect (GdkWindow *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:527:NC */ extern void gdk_window_begin_paint_region (GdkWindow *, const GdkRegion *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:529:NC */ extern void gdk_window_end_paint (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:530:NC */ extern void gdk_window_flush (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:532:NC */ extern void gdk_window_set_title (GdkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:534:NC */ extern void gdk_window_set_role (GdkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:536:NC */ extern void gdk_window_set_startup_id (GdkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:538:NC */ extern void gdk_window_set_transient_for (GdkWindow *, GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:540:NC */ extern void gdk_window_set_background (GdkWindow *, const GdkColor *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:542:NC */ extern void gdk_window_set_back_pixmap (GdkWindow *, GdkPixmap *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:545:NC */ extern cairo_pattern_t *gdk_window_get_background_pattern (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:547:NC */ extern void gdk_window_set_cursor (GdkWindow *, GdkCursor *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:549:NC */ extern GdkCursor *gdk_window_get_cursor (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:550:NC */ extern void gdk_window_get_user_data (GdkWindow *, gpointer *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:552:NC */ extern void gdk_window_get_geometry (GdkWindow *, gint *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:558:NC */ extern void gdk_window_get_position (GdkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:561:NC */ extern gint gdk_window_get_origin (GdkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:564:NC */ extern void gdk_window_get_root_coords (GdkWindow *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:569:NC */ extern void gdk_window_coords_to_parent (GdkWindow *, gdouble, gdouble, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:574:NC */ extern void gdk_window_coords_from_parent (GdkWindow *, gdouble, gdouble, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:582:NC */ extern gboolean gdk_window_get_deskrelative_origin (GdkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:587:NC */ extern void gdk_window_get_root_origin (GdkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:590:NC */ extern void gdk_window_get_frame_extents (GdkWindow *, GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:592:NC */ extern GdkWindow *gdk_window_get_pointer (GdkWindow *, gint *, gint *, GdkModifierType *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:596:NC */ extern GdkWindow *gdk_window_get_parent (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:597:NC */ extern GdkWindow *gdk_window_get_toplevel (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:599:NC */ extern GdkWindow *gdk_window_get_effective_parent (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:600:NC */ extern GdkWindow *gdk_window_get_effective_toplevel (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:602:NC */ extern GList *gdk_window_get_children (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:603:NC */ extern GList *gdk_window_peek_children (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:604:NC */ extern GdkEventMask gdk_window_get_events (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:605:NC */ extern void gdk_window_set_events (GdkWindow *, GdkEventMask);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:608:NC */ extern void gdk_window_set_icon_list (GdkWindow *, GList *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:610:NC */ extern void gdk_window_set_icon (GdkWindow *, GdkWindow *, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:614:NC */ extern void gdk_window_set_icon_name (GdkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:616:NC */ extern void gdk_window_set_group (GdkWindow *, GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:618:NC */ extern GdkWindow *gdk_window_get_group (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:619:NC */ extern void gdk_window_set_decorations (GdkWindow *, GdkWMDecoration);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:621:NC */ extern gboolean gdk_window_get_decorations (GdkWindow *, GdkWMDecoration *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:623:NC */ extern void gdk_window_set_functions (GdkWindow *, GdkWMFunction);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:626:NC */ extern GList *gdk_window_get_toplevels (void);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:630:NC */ extern cairo_surface_t *gdk_window_create_similar_surface (GdkWindow *, cairo_content_t, int, int);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:635:NC */ extern void gdk_window_beep (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:636:NC */ extern void gdk_window_iconify (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:637:NC */ extern void gdk_window_deiconify (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:638:NC */ extern void gdk_window_stick (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:639:NC */ extern void gdk_window_unstick (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:640:NC */ extern void gdk_window_maximize (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:641:NC */ extern void gdk_window_unmaximize (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:642:NC */ extern void gdk_window_fullscreen (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:643:NC */ extern void gdk_window_unfullscreen (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:644:NC */ extern void gdk_window_set_keep_above (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:646:NC */ extern void gdk_window_set_keep_below (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:648:NC */ extern void gdk_window_set_opacity (GdkWindow *, gdouble);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:650:NC */ extern void gdk_window_register_dnd (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:652:NC */ extern void gdk_window_begin_resize_drag (GdkWindow *, GdkWindowEdge, gint, gint, gint, guint32);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:658:NC */ extern void gdk_window_begin_move_drag (GdkWindow *, gint, gint, gint, guint32);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:665:NC */ extern void gdk_window_invalidate_rect (GdkWindow *, const GdkRectangle *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:668:NC */ extern void gdk_window_invalidate_region (GdkWindow *, const GdkRegion *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:671:NC */ extern void gdk_window_invalidate_maybe_recurse (GdkWindow *, const GdkRegion *, gboolean (*) (GdkWindow *, gpointer), gpointer);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:675:NC */ extern GdkRegion *gdk_window_get_update_area (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:677:NC */ extern void gdk_window_freeze_updates (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:678:NC */ extern void gdk_window_thaw_updates (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:680:NC */ extern void gdk_window_freeze_toplevel_updates_libgtk_only (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:681:NC */ extern void gdk_window_thaw_toplevel_updates_libgtk_only (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:683:NC */ extern void gdk_window_process_all_updates (void);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:684:NC */ extern void gdk_window_process_updates (GdkWindow *, gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:688:NC */ extern void gdk_window_set_debug_updates (gboolean);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:690:NC */ extern void gdk_window_constrain_size (GdkGeometry *, guint, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:697:NC */ extern void gdk_window_get_internal_paint_info (GdkWindow *, GdkDrawable **, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:702:NC */ extern void gdk_window_enable_synchronized_configure (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:703:NC */ extern void gdk_window_configure_finished (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:705:NC */ extern GdkWindow *gdk_get_default_root_window (void);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:708:NC */ extern GdkPixmap *gdk_offscreen_window_get_pixmap (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:709:NC */ extern void gdk_offscreen_window_set_embedder (GdkWindow *, GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:711:NC */ extern GdkWindow *gdk_offscreen_window_get_embedder (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:712:NC */ extern void gdk_window_geometry_changed (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:714:NC */ extern void gdk_window_redirect_to_drawable (GdkWindow *, GdkDrawable *, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:722:NC */ extern void gdk_window_remove_redirection (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdkwindow.h:726:NC */ extern GdkPointerHooks *gdk_set_pointer_hooks (const GdkPointerHooks *);
/* /usr/include/gtk-2.0/gdk/gdktestutils.h:33:NC */ extern void gdk_test_render_sync (GdkWindow *);
/* /usr/include/gtk-2.0/gdk/gdktestutils.h:34:NC */ extern gboolean gdk_test_simulate_key (GdkWindow *, gint, gint, guint, GdkModifierType, GdkEventType);
/* /usr/include/gtk-2.0/gdk/gdktestutils.h:40:NC */ extern gboolean gdk_test_simulate_button (GdkWindow *, gint, gint, guint, GdkModifierType, GdkEventType);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:100:NC */ extern GType gdk_visual_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:103:NC */ extern gint gdk_visual_get_best_depth (void);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:104:NC */ extern GdkVisualType gdk_visual_get_best_type (void);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:105:NC */ extern GdkVisual *gdk_visual_get_system (void);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:106:NC */ extern GdkVisual *gdk_visual_get_best (void);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:107:NC */ extern GdkVisual *gdk_visual_get_best_with_depth (gint);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:108:NC */ extern GdkVisual *gdk_visual_get_best_with_type (GdkVisualType);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:109:NC */ extern GdkVisual *gdk_visual_get_best_with_both (gint, GdkVisualType);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:112:NC */ extern void gdk_query_depths (gint **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:114:NC */ extern void gdk_query_visual_types (GdkVisualType **, gint *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:117:NC */ extern GList *gdk_list_visuals (void);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:120:NC */ extern GdkScreen *gdk_visual_get_screen (GdkVisual *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:122:NC */ extern GdkVisualType gdk_visual_get_visual_type (GdkVisual *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:123:NC */ extern gint gdk_visual_get_depth (GdkVisual *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:124:NC */ extern GdkByteOrder gdk_visual_get_byte_order (GdkVisual *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:125:NC */ extern gint gdk_visual_get_colormap_size (GdkVisual *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:126:NC */ extern gint gdk_visual_get_bits_per_rgb (GdkVisual *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:127:NC */ extern void gdk_visual_get_red_pixel_details (GdkVisual *, guint32 *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:131:NC */ extern void gdk_visual_get_green_pixel_details (GdkVisual *, guint32 *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdkvisual.h:135:NC */ extern void gdk_visual_get_blue_pixel_details (GdkVisual *, guint32 *, gint *, gint *);
/* /usr/include/gtk-2.0/gdk/gdk.h:69:NC */ extern void gdk_parse_args (gint *, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdk.h:71:NC */ extern void gdk_init (gint *, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdk.h:73:NC */ extern gboolean gdk_init_check (gint *, gchar ***);
/* /usr/include/gtk-2.0/gdk/gdk.h:75:NC */ extern void gdk_add_option_entries_libgtk_only (GOptionGroup *);
/* /usr/include/gtk-2.0/gdk/gdk.h:76:NC */ extern void gdk_pre_parse_libgtk_only (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:79:NC */ extern void gdk_exit (gint);
/* /usr/include/gtk-2.0/gdk/gdk.h:80:NC */ extern gchar *gdk_set_locale (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:83:NC */ extern const char *gdk_get_program_class (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:84:NC */ extern void gdk_set_program_class (const char *);
/* /usr/include/gtk-2.0/gdk/gdk.h:88:NC */ extern void gdk_error_trap_push (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:89:NC */ extern gint gdk_error_trap_pop (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:92:NC */ extern void gdk_set_use_xshm (gboolean);
/* /usr/include/gtk-2.0/gdk/gdk.h:93:NC */ extern gboolean gdk_get_use_xshm (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:96:NC */ extern gchar *gdk_get_display (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:97:NC */ extern const gchar *gdk_get_display_arg_name (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:100:NC */ extern gint gdk_input_add_full (gint, GdkInputCondition, GdkInputFunction, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gdk/gdk.h:105:NC */ extern gint gdk_input_add (gint, GdkInputCondition, GdkInputFunction, gpointer);
/* /usr/include/gtk-2.0/gdk/gdk.h:109:NC */ extern void gdk_input_remove (gint);
/* /usr/include/gtk-2.0/gdk/gdk.h:112:NC */ extern GdkGrabStatus gdk_pointer_grab (GdkWindow *, gboolean, GdkEventMask, GdkWindow *, GdkCursor *, guint32);
/* /usr/include/gtk-2.0/gdk/gdk.h:118:NC */ extern GdkGrabStatus gdk_keyboard_grab (GdkWindow *, gboolean, guint32);
/* /usr/include/gtk-2.0/gdk/gdk.h:122:NC */ extern gboolean gdk_pointer_grab_info_libgtk_only (GdkDisplay *, GdkWindow **, gboolean *);
/* /usr/include/gtk-2.0/gdk/gdk.h:125:NC */ extern gboolean gdk_keyboard_grab_info_libgtk_only (GdkDisplay *, GdkWindow **, gboolean *);
/* /usr/include/gtk-2.0/gdk/gdk.h:130:NC */ extern void gdk_pointer_ungrab (guint32);
/* /usr/include/gtk-2.0/gdk/gdk.h:131:NC */ extern void gdk_keyboard_ungrab (guint32);
/* /usr/include/gtk-2.0/gdk/gdk.h:132:NC */ extern gboolean gdk_pointer_is_grabbed (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:134:NC */ extern gint gdk_screen_width (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:135:NC */ extern gint gdk_screen_height (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:137:NC */ extern gint gdk_screen_width_mm (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:138:NC */ extern gint gdk_screen_height_mm (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:140:NC */ extern void gdk_beep (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:143:NC */ extern void gdk_flush (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:146:NC */ extern void gdk_set_double_click_time (guint);
/* /usr/include/gtk-2.0/gdk/gdk.h:151:NC */ extern gboolean gdk_rectangle_intersect (const GdkRectangle *, const GdkRectangle *, GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdk.h:154:NC */ extern void gdk_rectangle_union (const GdkRectangle *, const GdkRectangle *, GdkRectangle *);
/* /usr/include/gtk-2.0/gdk/gdk.h:158:NC */ extern GType gdk_rectangle_get_type (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:165:NC */ extern gchar *gdk_wcstombs (const GdkWChar *);
/* /usr/include/gtk-2.0/gdk/gdk.h:166:NC */ extern gint gdk_mbstowcs (GdkWChar *, const gchar *, gint);
/* /usr/include/gtk-2.0/gdk/gdk.h:173:NC */ extern gboolean gdk_event_send_client_message (GdkEvent *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdk.h:175:NC */ extern void gdk_event_send_clientmessage_toall (GdkEvent *);
/* /usr/include/gtk-2.0/gdk/gdk.h:177:NC */ extern gboolean gdk_event_send_client_message_for_display (GdkDisplay *, GdkEvent *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gdk/gdk.h:181:NC */ extern void gdk_notify_startup_complete (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:183:NC */ extern void gdk_notify_startup_complete_with_id (const gchar *);
/* /usr/include/gtk-2.0/gdk/gdk.h:195:NC */ extern void gdk_threads_enter (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:196:NC */ extern void gdk_threads_leave (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:197:NC */ extern void gdk_threads_init (void);
/* /usr/include/gtk-2.0/gdk/gdk.h:198:NC */ extern void gdk_threads_set_lock_functions (GCallback, GCallback);
/* /usr/include/gtk-2.0/gdk/gdk.h:201:NC */ extern guint gdk_threads_add_idle_full (gint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gdk/gdk.h:205:NC */ extern guint gdk_threads_add_idle (GSourceFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdk.h:207:NC */ extern guint gdk_threads_add_timeout_full (gint, guint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gdk/gdk.h:212:NC */ extern guint gdk_threads_add_timeout (guint, GSourceFunc, gpointer);
/* /usr/include/gtk-2.0/gdk/gdk.h:215:NC */ extern guint gdk_threads_add_timeout_seconds_full (gint, guint, GSourceFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gdk/gdk.h:220:NC */ extern guint gdk_threads_add_timeout_seconds (guint, GSourceFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:122:NC */ extern GType gtk_accel_group_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:123:NC */ extern GtkAccelGroup *gtk_accel_group_new (void);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:124:NC */ extern gboolean gtk_accel_group_get_is_locked (GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:126:NC */ extern GdkModifierType gtk_accel_group_get_modifier_mask (GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:127:NC */ extern void gtk_accel_group_lock (GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:128:NC */ extern void gtk_accel_group_unlock (GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:129:NC */ extern void gtk_accel_group_connect (GtkAccelGroup *, guint, GdkModifierType, GtkAccelFlags, GClosure *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:134:NC */ extern void gtk_accel_group_connect_by_path (GtkAccelGroup *, const gchar *, GClosure *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:137:NC */ extern gboolean gtk_accel_group_disconnect (GtkAccelGroup *, GClosure *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:139:NC */ extern gboolean gtk_accel_group_disconnect_key (GtkAccelGroup *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:142:NC */ extern gboolean gtk_accel_group_activate (GtkAccelGroup *, GQuark, GObject *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:150:NC */ extern void _gtk_accel_group_attach (GtkAccelGroup *, GObject *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:152:NC */ extern void _gtk_accel_group_detach (GtkAccelGroup *, GObject *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:154:NC */ extern gboolean gtk_accel_groups_activate (GObject *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:157:NC */ extern GSList *gtk_accel_groups_from_object (GObject *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:158:NC */ extern GtkAccelKey *gtk_accel_group_find (GtkAccelGroup *, GtkAccelGroupFindFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:161:NC */ extern GtkAccelGroup *gtk_accel_group_from_accel_closure (GClosure *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:165:NC */ extern gboolean gtk_accelerator_valid (guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:167:NC */ extern void gtk_accelerator_parse (const gchar *, guint *, GdkModifierType *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:170:NC */ extern gchar *gtk_accelerator_name (guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:172:NC */ extern gchar *gtk_accelerator_get_label (guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:174:NC */ extern void gtk_accelerator_set_default_mod_mask (GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:175:NC */ extern guint gtk_accelerator_get_default_mod_mask (void);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:179:NC */ extern GtkAccelGroupEntry *gtk_accel_group_query (GtkAccelGroup *, guint, GdkModifierType, guint *);
/* /usr/include/gtk-2.0/gtk/gtkaccelgroup.h:184:NC */ extern void _gtk_accel_group_reconnect (GtkAccelGroup *, GQuark);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:16:NC */ extern GType gtk_accel_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:20:NC */ extern GType gtk_assistant_page_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:24:NC */ extern GType gtk_builder_error_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:28:NC */ extern GType gtk_calendar_display_options_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:32:NC */ extern GType gtk_cell_renderer_state_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:34:NC */ extern GType gtk_cell_renderer_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:38:NC */ extern GType gtk_cell_renderer_accel_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:42:NC */ extern GType gtk_debug_flag_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:46:NC */ extern GType gtk_dialog_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:48:NC */ extern GType gtk_response_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:52:NC */ extern GType gtk_dest_defaults_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:54:NC */ extern GType gtk_target_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:58:NC */ extern GType gtk_entry_icon_position_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:62:NC */ extern GType gtk_anchor_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:64:NC */ extern GType gtk_arrow_placement_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:66:NC */ extern GType gtk_arrow_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:68:NC */ extern GType gtk_attach_options_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:70:NC */ extern GType gtk_button_box_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:72:NC */ extern GType gtk_curve_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:74:NC */ extern GType gtk_delete_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:76:NC */ extern GType gtk_direction_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:78:NC */ extern GType gtk_expander_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:80:NC */ extern GType gtk_icon_size_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:82:NC */ extern GType gtk_sensitivity_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:84:NC */ extern GType gtk_side_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:86:NC */ extern GType gtk_text_direction_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:88:NC */ extern GType gtk_justification_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:90:NC */ extern GType gtk_match_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:92:NC */ extern GType gtk_menu_direction_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:94:NC */ extern GType gtk_message_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:96:NC */ extern GType gtk_metric_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:98:NC */ extern GType gtk_movement_step_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:100:NC */ extern GType gtk_scroll_step_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:102:NC */ extern GType gtk_orientation_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:104:NC */ extern GType gtk_corner_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:106:NC */ extern GType gtk_pack_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:108:NC */ extern GType gtk_path_priority_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:110:NC */ extern GType gtk_path_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:112:NC */ extern GType gtk_policy_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:114:NC */ extern GType gtk_position_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:116:NC */ extern GType gtk_preview_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:118:NC */ extern GType gtk_relief_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:120:NC */ extern GType gtk_resize_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:122:NC */ extern GType gtk_signal_run_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:124:NC */ extern GType gtk_scroll_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:126:NC */ extern GType gtk_selection_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:128:NC */ extern GType gtk_shadow_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:130:NC */ extern GType gtk_state_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:132:NC */ extern GType gtk_submenu_direction_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:134:NC */ extern GType gtk_submenu_placement_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:136:NC */ extern GType gtk_toolbar_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:138:NC */ extern GType gtk_update_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:140:NC */ extern GType gtk_visibility_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:142:NC */ extern GType gtk_window_position_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:144:NC */ extern GType gtk_window_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:146:NC */ extern GType gtk_wrap_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:148:NC */ extern GType gtk_sort_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:150:NC */ extern GType gtk_im_preedit_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:152:NC */ extern GType gtk_im_status_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:154:NC */ extern GType gtk_pack_direction_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:156:NC */ extern GType gtk_print_pages_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:158:NC */ extern GType gtk_page_set_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:160:NC */ extern GType gtk_number_up_layout_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:162:NC */ extern GType gtk_page_orientation_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:164:NC */ extern GType gtk_print_quality_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:166:NC */ extern GType gtk_print_duplex_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:168:NC */ extern GType gtk_unit_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:170:NC */ extern GType gtk_tree_view_grid_lines_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:172:NC */ extern GType gtk_drag_result_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:176:NC */ extern GType gtk_file_chooser_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:178:NC */ extern GType gtk_file_chooser_confirmation_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:180:NC */ extern GType gtk_file_chooser_error_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:184:NC */ extern GType gtk_file_filter_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:188:NC */ extern GType gtk_icon_lookup_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:190:NC */ extern GType gtk_icon_theme_error_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:194:NC */ extern GType gtk_icon_view_drop_position_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:198:NC */ extern GType gtk_image_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:202:NC */ extern GType gtk_buttons_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:206:NC */ extern GType gtk_notebook_tab_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:210:NC */ extern GType gtk_object_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:212:NC */ extern GType gtk_arg_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:216:NC */ extern GType gtk_print_status_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:218:NC */ extern GType gtk_print_operation_result_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:220:NC */ extern GType gtk_print_operation_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:222:NC */ extern GType gtk_print_error_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:226:NC */ extern GType gtk_private_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:230:NC */ extern GType gtk_progress_bar_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:232:NC */ extern GType gtk_progress_bar_orientation_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:236:NC */ extern GType gtk_rc_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:238:NC */ extern GType gtk_rc_token_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:242:NC */ extern GType gtk_recent_sort_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:244:NC */ extern GType gtk_recent_chooser_error_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:248:NC */ extern GType gtk_recent_filter_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:252:NC */ extern GType gtk_recent_manager_error_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:256:NC */ extern GType gtk_size_group_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:260:NC */ extern GType gtk_spin_button_update_policy_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:262:NC */ extern GType gtk_spin_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:266:NC */ extern GType gtk_text_buffer_target_info_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:270:NC */ extern GType gtk_text_search_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:274:NC */ extern GType gtk_text_window_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:278:NC */ extern GType gtk_toolbar_child_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:280:NC */ extern GType gtk_toolbar_space_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:284:NC */ extern GType gtk_tool_palette_drag_targets_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:288:NC */ extern GType gtk_tree_model_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:292:NC */ extern GType gtk_tree_view_drop_position_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:296:NC */ extern GType gtk_tree_view_column_sizing_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:300:NC */ extern GType gtk_ui_manager_item_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:304:NC */ extern GType gtk_widget_flags_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:306:NC */ extern GType gtk_widget_help_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:310:NC */ extern GType gtk_tree_view_mode_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:314:NC */ extern GType gtk_cell_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:316:NC */ extern GType gtk_clist_drag_pos_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:318:NC */ extern GType gtk_button_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:322:NC */ extern GType gtk_ctree_pos_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:324:NC */ extern GType gtk_ctree_line_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:326:NC */ extern GType gtk_ctree_expander_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypebuiltins.h:328:NC */ extern GType gtk_ctree_expansion_type_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:42:NC */ extern GType gtk_identifier_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:236:NC */ extern void gtk_type_init (GTypeDebugFlags);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:237:NC */ extern GtkType gtk_type_unique (GtkType, const GtkTypeInfo *);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:239:NC */ extern gpointer gtk_type_class (GtkType);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:240:NC */ extern gpointer gtk_type_new (GtkType);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:253:NC */ extern GtkEnumValue *gtk_type_enum_get_values (GtkType);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:254:NC */ extern GtkFlagValue *gtk_type_flags_get_values (GtkType);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:255:NC */ extern GtkEnumValue *gtk_type_enum_find_value (GtkType, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktypeutils.h:257:NC */ extern GtkFlagValue *gtk_type_flags_find_value (GtkType, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:146:NC */ extern GType gtk_object_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:149:NC */ extern void gtk_object_sink (GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:151:NC */ extern void gtk_object_destroy (GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:157:NC */ extern GtkObject *gtk_object_new (GType, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:160:NC */ extern GtkObject *gtk_object_ref (GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:161:NC */ extern void gtk_object_unref (GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:162:NC */ extern void gtk_object_weakref (GtkObject *, GDestroyNotify, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:165:NC */ extern void gtk_object_weakunref (GtkObject *, GDestroyNotify, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:181:NC */ extern void gtk_object_set_data (GtkObject *, const gchar *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:184:NC */ extern void gtk_object_set_data_full (GtkObject *, const gchar *, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:188:NC */ extern void gtk_object_remove_data (GtkObject *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:190:NC */ extern gpointer gtk_object_get_data (GtkObject *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:192:NC */ extern void gtk_object_remove_no_notify (GtkObject *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:200:NC */ extern void gtk_object_set_user_data (GtkObject *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:202:NC */ extern gpointer gtk_object_get_user_data (GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:208:NC */ extern void gtk_object_set_data_by_id (GtkObject *, GQuark, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:211:NC */ extern void gtk_object_set_data_by_id_full (GtkObject *, GQuark, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:215:NC */ extern gpointer gtk_object_get_data_by_id (GtkObject *, GQuark);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:217:NC */ extern void gtk_object_remove_data_by_id (GtkObject *, GQuark);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:219:NC */ extern void gtk_object_remove_no_notify_by_id (GtkObject *, GQuark);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:235:NC */ extern void gtk_object_get (GtkObject *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:238:NC */ extern void gtk_object_set (GtkObject *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkobject.h:241:NC */ extern void gtk_object_add_arg_type (const gchar *, GType, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:78:NC */ extern GType gtk_adjustment_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:79:NC */ extern GtkObject *gtk_adjustment_new (gdouble, gdouble, gdouble, gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:86:NC */ extern void gtk_adjustment_changed (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:87:NC */ extern void gtk_adjustment_value_changed (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:88:NC */ extern void gtk_adjustment_clamp_page (GtkAdjustment *, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:92:NC */ extern gdouble gtk_adjustment_get_value (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:93:NC */ extern void gtk_adjustment_set_value (GtkAdjustment *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:95:NC */ extern gdouble gtk_adjustment_get_lower (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:96:NC */ extern void gtk_adjustment_set_lower (GtkAdjustment *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:98:NC */ extern gdouble gtk_adjustment_get_upper (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:99:NC */ extern void gtk_adjustment_set_upper (GtkAdjustment *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:101:NC */ extern gdouble gtk_adjustment_get_step_increment (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:102:NC */ extern void gtk_adjustment_set_step_increment (GtkAdjustment *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:104:NC */ extern gdouble gtk_adjustment_get_page_increment (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:105:NC */ extern void gtk_adjustment_set_page_increment (GtkAdjustment *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:107:NC */ extern gdouble gtk_adjustment_get_page_size (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:108:NC */ extern void gtk_adjustment_set_page_size (GtkAdjustment *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkadjustment.h:111:NC */ extern void gtk_adjustment_configure (GtkAdjustment *, gdouble, gdouble, gdouble, gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:440:NC */ extern GType gtk_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:441:NC */ extern GtkStyle *gtk_style_new (void);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:442:NC */ extern GtkStyle *gtk_style_copy (GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:443:NC */ extern GtkStyle *gtk_style_attach (GtkStyle *, GdkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:445:NC */ extern void gtk_style_detach (GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:448:NC */ extern GtkStyle *gtk_style_ref (GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:449:NC */ extern void gtk_style_unref (GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:451:NC */ extern GdkFont *gtk_style_get_font (GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:452:NC */ extern void gtk_style_set_font (GtkStyle *, GdkFont *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:456:NC */ extern void gtk_style_set_background (GtkStyle *, GdkWindow *, GtkStateType);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:459:NC */ extern void gtk_style_apply_default_background (GtkStyle *, GdkWindow *, gboolean, GtkStateType, const GdkRectangle *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:469:NC */ extern GtkIconSet *gtk_style_lookup_icon_set (GtkStyle *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:471:NC */ extern gboolean gtk_style_lookup_color (GtkStyle *, const gchar *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:475:NC */ extern GdkPixbuf *gtk_style_render_icon (GtkStyle *, const GtkIconSource *, GtkTextDirection, GtkStateType, GtkIconSize, GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:484:NC */ extern void gtk_draw_hline (GtkStyle *, GdkWindow *, GtkStateType, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:490:NC */ extern void gtk_draw_vline (GtkStyle *, GdkWindow *, GtkStateType, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:496:NC */ extern void gtk_draw_shadow (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:504:NC */ extern void gtk_draw_polygon (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, GdkPoint *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:511:NC */ extern void gtk_draw_arrow (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, GtkArrowType, gboolean, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:521:NC */ extern void gtk_draw_diamond (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:529:NC */ extern void gtk_draw_box (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:537:NC */ extern void gtk_draw_flat_box (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:545:NC */ extern void gtk_draw_check (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:553:NC */ extern void gtk_draw_option (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:561:NC */ extern void gtk_draw_tab (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:569:NC */ extern void gtk_draw_shadow_gap (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint, GtkPositionType, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:580:NC */ extern void gtk_draw_box_gap (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint, GtkPositionType, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:591:NC */ extern void gtk_draw_extension (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:600:NC */ extern void gtk_draw_focus (GtkStyle *, GdkWindow *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:606:NC */ extern void gtk_draw_slider (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:615:NC */ extern void gtk_draw_handle (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, gint, gint, gint, gint, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:624:NC */ extern void gtk_draw_expander (GtkStyle *, GdkWindow *, GtkStateType, gint, gint, GtkExpanderStyle);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:630:NC */ extern void gtk_draw_layout (GtkStyle *, GdkWindow *, GtkStateType, gboolean, gint, gint, PangoLayout *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:637:NC */ extern void gtk_draw_resize_grip (GtkStyle *, GdkWindow *, GtkStateType, GdkWindowEdge, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:647:NC */ extern void gtk_paint_hline (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:656:NC */ extern void gtk_paint_vline (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:665:NC */ extern void gtk_paint_shadow (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:676:NC */ extern void gtk_paint_polygon (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, const GdkPoint *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:686:NC */ extern void gtk_paint_arrow (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, GtkArrowType, gboolean, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:699:NC */ extern void gtk_paint_diamond (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:710:NC */ extern void gtk_paint_box (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:721:NC */ extern void gtk_paint_flat_box (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:732:NC */ extern void gtk_paint_check (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:743:NC */ extern void gtk_paint_option (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:754:NC */ extern void gtk_paint_tab (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:765:NC */ extern void gtk_paint_shadow_gap (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint, GtkPositionType, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:779:NC */ extern void gtk_paint_box_gap (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint, GtkPositionType, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:793:NC */ extern void gtk_paint_extension (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:805:NC */ extern void gtk_paint_focus (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:815:NC */ extern void gtk_paint_slider (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:827:NC */ extern void gtk_paint_handle (GtkStyle *, GdkWindow *, GtkStateType, GtkShadowType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, gint, gint, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:839:NC */ extern void gtk_paint_expander (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, GtkExpanderStyle);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:848:NC */ extern void gtk_paint_layout (GtkStyle *, GdkWindow *, GtkStateType, gboolean, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, PangoLayout *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:858:NC */ extern void gtk_paint_resize_grip (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, GdkWindowEdge, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:869:NC */ extern void gtk_paint_spinner (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, guint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:881:NC */ extern GType gtk_border_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:882:NC */ extern GtkBorder *gtk_border_new (void);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:883:NC */ extern GtkBorder *gtk_border_copy (const GtkBorder *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:884:NC */ extern void gtk_border_free (GtkBorder *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:886:NC */ extern void gtk_style_get_style_property (GtkStyle *, GType, const gchar *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:890:NC */ extern void gtk_style_get_valist (GtkStyle *, GType, const gchar *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:894:NC */ extern void gtk_style_get (GtkStyle *, GType, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:900:NC */ extern const GValue *_gtk_style_peek_property_value (GtkStyle *, GType, GParamSpec *, GtkRcPropertyParser);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:905:NC */ extern void _gtk_style_init_for_settings (GtkStyle *, GtkSettings *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:908:NC */ extern void _gtk_style_shade (const GdkColor *, GdkColor *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:915:NC */ extern void gtk_draw_string (GtkStyle *, GdkWindow *, GtkStateType, gint, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:921:NC */ extern void gtk_paint_string (GtkStyle *, GdkWindow *, GtkStateType, const GdkRectangle *, GtkWidget *, const gchar *, gint, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:932:NC */ extern void gtk_draw_insertion_cursor (GtkWidget *, GdkDrawable *, const GdkRectangle *, const GdkRectangle *, gboolean, GtkTextDirection, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:939:NC */ extern GdkGC *_gtk_widget_get_cursor_gc (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkstyle.h:940:NC */ extern void _gtk_widget_get_cursor_color (GtkWidget *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:133:NC */ extern void _gtk_rc_init (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:134:NC */ extern GSList *_gtk_rc_parse_widget_class_path (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:135:NC */ extern void _gtk_rc_free_widget_class_path (GSList *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:136:NC */ extern gboolean _gtk_rc_match_widget_class (GSList *, gint, gchar *, gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:141:NC */ extern void gtk_rc_add_default_file (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:142:NC */ extern void gtk_rc_set_default_files (gchar **);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:143:NC */ extern gchar **gtk_rc_get_default_files (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:144:NC */ extern GtkStyle *gtk_rc_get_style (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:145:NC */ extern GtkStyle *gtk_rc_get_style_by_paths (GtkSettings *, const char *, const char *, GType);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:150:NC */ extern gboolean gtk_rc_reparse_all_for_settings (GtkSettings *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:152:NC */ extern void gtk_rc_reset_styles (GtkSettings *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:154:NC */ extern gchar *gtk_rc_find_pixmap_in_path (GtkSettings *, GScanner *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:158:NC */ extern void gtk_rc_parse (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:159:NC */ extern void gtk_rc_parse_string (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:160:NC */ extern gboolean gtk_rc_reparse_all (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:163:NC */ extern void gtk_rc_add_widget_name_style (GtkRcStyle *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:165:NC */ extern void gtk_rc_add_widget_class_style (GtkRcStyle *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:167:NC */ extern void gtk_rc_add_class_style (GtkRcStyle *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:172:NC */ extern GType gtk_rc_style_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:173:NC */ extern GtkRcStyle *gtk_rc_style_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:174:NC */ extern GtkRcStyle *gtk_rc_style_copy (GtkRcStyle *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:177:NC */ extern void gtk_rc_style_ref (GtkRcStyle *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:178:NC */ extern void gtk_rc_style_unref (GtkRcStyle *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:181:NC */ extern gchar *gtk_rc_find_module_in_path (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:182:NC */ extern gchar *gtk_rc_get_theme_dir (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:183:NC */ extern gchar *gtk_rc_get_module_dir (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:184:NC */ extern gchar *gtk_rc_get_im_module_path (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:185:NC */ extern gchar *gtk_rc_get_im_module_file (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:231:NC */ extern GScanner *gtk_rc_scanner_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:232:NC */ extern guint gtk_rc_parse_color (GScanner *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:234:NC */ extern guint gtk_rc_parse_color_full (GScanner *, GtkRcStyle *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:237:NC */ extern guint gtk_rc_parse_state (GScanner *, GtkStateType *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:239:NC */ extern guint gtk_rc_parse_priority (GScanner *, GtkPathPriorityType *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:255:NC */ extern const GtkRcProperty *_gtk_rc_style_lookup_rc_property (GtkRcStyle *, GQuark, GQuark);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:258:NC */ extern void _gtk_rc_style_set_rc_property (GtkRcStyle *, GtkRcProperty *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:260:NC */ extern void _gtk_rc_style_unset_rc_property (GtkRcStyle *, GQuark, GQuark);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:264:NC */ extern GSList *_gtk_rc_style_get_color_hashes (GtkRcStyle *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:266:NC */ extern const gchar *_gtk_rc_context_get_default_font_name (GtkSettings *);
/* /usr/include/gtk-2.0/gtk/gtkrc.h:267:NC */ extern void _gtk_rc_context_destroy (GtkSettings *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:78:NC */ extern GType gtk_settings_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:80:NC */ extern GtkSettings *gtk_settings_get_default (void);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:82:NC */ extern GtkSettings *gtk_settings_get_for_screen (GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:84:NC */ extern void gtk_settings_install_property (GParamSpec *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:85:NC */ extern void gtk_settings_install_property_parser (GParamSpec *, GtkRcPropertyParser);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:89:NC */ extern gboolean gtk_rc_property_parse_color (const GParamSpec *, const GString *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:92:NC */ extern gboolean gtk_rc_property_parse_enum (const GParamSpec *, const GString *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:95:NC */ extern gboolean gtk_rc_property_parse_flags (const GParamSpec *, const GString *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:98:NC */ extern gboolean gtk_rc_property_parse_requisition (const GParamSpec *, const GString *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:101:NC */ extern gboolean gtk_rc_property_parse_border (const GParamSpec *, const GString *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:106:NC */ extern void gtk_settings_set_property_value (GtkSettings *, const gchar *, const GtkSettingsValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:109:NC */ extern void gtk_settings_set_string_property (GtkSettings *, const gchar *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:113:NC */ extern void gtk_settings_set_long_property (GtkSettings *, const gchar *, glong, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:117:NC */ extern void gtk_settings_set_double_property (GtkSettings *, const gchar *, gdouble, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:124:NC */ extern void _gtk_settings_set_property_value_from_rc (GtkSettings *, const gchar *, const GtkSettingsValue *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:127:NC */ extern void _gtk_settings_reset_rc_values (GtkSettings *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:129:NC */ extern void _gtk_settings_handle_event (GdkEventSetting *);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:130:NC */ extern GtkRcPropertyParser _gtk_rc_property_parser_from_type (GType);
/* /usr/include/gtk-2.0/gtk/gtksettings.h:131:NC */ extern gboolean _gtk_settings_parse_convert (GtkRcPropertyParser, const GValue *, GParamSpec *, GValue *);
/* /usr/include/atk-1.0/atk/atkstate.h:171:NC */ extern AtkStateType atk_state_type_register (const gchar *);
/* /usr/include/atk-1.0/atk/atkstate.h:173:NC */ extern const gchar *atk_state_type_get_name (AtkStateType);
/* /usr/include/atk-1.0/atk/atkstate.h:174:NC */ extern AtkStateType atk_state_type_for_name (const gchar *);
/* /usr/include/atk-1.0/atk/atkobject.h:269:NC */ extern AtkRole atk_role_register (const gchar *);
/* /usr/include/atk-1.0/atk/atkobject.h:536:NC */ extern GType atk_object_get_type (void);
/* /usr/include/atk-1.0/atk/atkobject.h:544:NC */ extern GType atk_implementor_get_type (void);
/* /usr/include/atk-1.0/atk/atkobject.h:558:NC */ extern AtkObject *atk_implementor_ref_accessible (AtkImplementor *);
/* /usr/include/atk-1.0/atk/atkobject.h:564:NC */ extern const gchar *atk_object_get_name (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:565:NC */ extern const gchar *atk_object_get_description (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:566:NC */ extern AtkObject *atk_object_get_parent (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:567:NC */ extern gint atk_object_get_n_accessible_children (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:568:NC */ extern AtkObject *atk_object_ref_accessible_child (AtkObject *, gint);
/* /usr/include/atk-1.0/atk/atkobject.h:570:NC */ extern AtkRelationSet *atk_object_ref_relation_set (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:571:NC */ extern AtkRole atk_object_get_role (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:573:NC */ extern AtkLayer atk_object_get_layer (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:574:NC */ extern gint atk_object_get_mdi_zorder (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:576:NC */ extern AtkAttributeSet *atk_object_get_attributes (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:577:NC */ extern AtkStateSet *atk_object_ref_state_set (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:578:NC */ extern gint atk_object_get_index_in_parent (AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:579:NC */ extern void atk_object_set_name (AtkObject *, const gchar *);
/* /usr/include/atk-1.0/atk/atkobject.h:581:NC */ extern void atk_object_set_description (AtkObject *, const gchar *);
/* /usr/include/atk-1.0/atk/atkobject.h:583:NC */ extern void atk_object_set_parent (AtkObject *, AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:585:NC */ extern void atk_object_set_role (AtkObject *, AtkRole);
/* /usr/include/atk-1.0/atk/atkobject.h:589:NC */ extern guint atk_object_connect_property_change_handler (AtkObject *, AtkPropertyChangeHandler *);
/* /usr/include/atk-1.0/atk/atkobject.h:591:NC */ extern void atk_object_remove_property_change_handler (AtkObject *, guint);
/* /usr/include/atk-1.0/atk/atkobject.h:594:NC */ extern void atk_object_notify_state_change (AtkObject *, AtkState, gboolean);
/* /usr/include/atk-1.0/atk/atkobject.h:597:NC */ extern void atk_object_initialize (AtkObject *, gpointer);
/* /usr/include/atk-1.0/atk/atkobject.h:600:NC */ extern const gchar *atk_role_get_name (AtkRole);
/* /usr/include/atk-1.0/atk/atkobject.h:601:NC */ extern AtkRole atk_role_for_name (const gchar *);
/* /usr/include/atk-1.0/atk/atkobject.h:605:NC */ extern gboolean atk_object_add_relationship (AtkObject *, AtkRelationType, AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:608:NC */ extern gboolean atk_object_remove_relationship (AtkObject *, AtkRelationType, AtkObject *);
/* /usr/include/atk-1.0/atk/atkobject.h:611:NC */ extern const gchar *atk_role_get_localized_name (AtkRole);
/* /usr/include/atk-1.0/atk/atkaction.h:72:NC */ extern GType atk_action_get_type (void);
/* /usr/include/atk-1.0/atk/atkaction.h:85:NC */ extern gboolean atk_action_do_action (AtkAction *, gint);
/* /usr/include/atk-1.0/atk/atkaction.h:87:NC */ extern gint atk_action_get_n_actions (AtkAction *);
/* /usr/include/atk-1.0/atk/atkaction.h:88:NC */ extern const gchar *atk_action_get_description (AtkAction *, gint);
/* /usr/include/atk-1.0/atk/atkaction.h:90:NC */ extern const gchar *atk_action_get_name (AtkAction *, gint);
/* /usr/include/atk-1.0/atk/atkaction.h:92:NC */ extern const gchar *atk_action_get_keybinding (AtkAction *, gint);
/* /usr/include/atk-1.0/atk/atkaction.h:94:NC */ extern gboolean atk_action_set_description (AtkAction *, gint, const gchar *);
/* /usr/include/atk-1.0/atk/atkaction.h:100:NC */ extern const gchar *atk_action_get_localized_name (AtkAction *, gint);
/* /usr/include/atk-1.0/atk/atkutil.h:153:NC */ extern GType atk_util_get_type (void);
/* /usr/include/atk-1.0/atk/atkutil.h:169:NC */ extern guint atk_add_focus_tracker (AtkEventListener);
/* /usr/include/atk-1.0/atk/atkutil.h:170:NC */ extern void atk_remove_focus_tracker (guint);
/* /usr/include/atk-1.0/atk/atkutil.h:171:NC */ extern void atk_focus_tracker_init (AtkEventListenerInit);
/* /usr/include/atk-1.0/atk/atkutil.h:172:NC */ extern void atk_focus_tracker_notify (AtkObject *);
/* /usr/include/atk-1.0/atk/atkutil.h:173:NC */ extern guint atk_add_global_event_listener (GSignalEmissionHook, const gchar *);
/* /usr/include/atk-1.0/atk/atkutil.h:175:NC */ extern void atk_remove_global_event_listener (guint);
/* /usr/include/atk-1.0/atk/atkutil.h:176:NC */ extern guint atk_add_key_event_listener (AtkKeySnoopFunc, gpointer);
/* /usr/include/atk-1.0/atk/atkutil.h:177:NC */ extern void atk_remove_key_event_listener (guint);
/* /usr/include/atk-1.0/atk/atkutil.h:179:NC */ extern AtkObject *atk_get_root (void);
/* /usr/include/atk-1.0/atk/atkutil.h:180:NC */ extern AtkObject *atk_get_focus_object (void);
/* /usr/include/atk-1.0/atk/atkutil.h:182:NC */ extern const gchar *atk_get_toolkit_name (void);
/* /usr/include/atk-1.0/atk/atkutil.h:183:NC */ extern const gchar *atk_get_toolkit_version (void);
/* /usr/include/atk-1.0/atk/atkutil.h:184:NC */ extern const gchar *atk_get_version (void);
/* /usr/include/atk-1.0/atk/atkcomponent.h:62:NC */ extern GType atk_rectangle_get_type (void);
/* /usr/include/atk-1.0/atk/atkcomponent.h:122:NC */ extern GType atk_component_get_type (void);
/* /usr/include/atk-1.0/atk/atkcomponent.h:126:NC */ extern guint atk_component_add_focus_handler (AtkComponent *, AtkFocusHandler);
/* /usr/include/atk-1.0/atk/atkcomponent.h:128:NC */ extern gboolean atk_component_contains (AtkComponent *, gint, gint, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkcomponent.h:132:NC */ extern AtkObject *atk_component_ref_accessible_at_point (AtkComponent *, gint, gint, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkcomponent.h:136:NC */ extern void atk_component_get_extents (AtkComponent *, gint *, gint *, gint *, gint *, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkcomponent.h:142:NC */ extern void atk_component_get_position (AtkComponent *, gint *, gint *, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkcomponent.h:146:NC */ extern void atk_component_get_size (AtkComponent *, gint *, gint *);
/* /usr/include/atk-1.0/atk/atkcomponent.h:149:NC */ extern AtkLayer atk_component_get_layer (AtkComponent *);
/* /usr/include/atk-1.0/atk/atkcomponent.h:150:NC */ extern gint atk_component_get_mdi_zorder (AtkComponent *);
/* /usr/include/atk-1.0/atk/atkcomponent.h:151:NC */ extern gboolean atk_component_grab_focus (AtkComponent *);
/* /usr/include/atk-1.0/atk/atkcomponent.h:152:NC */ extern void atk_component_remove_focus_handler (AtkComponent *, guint);
/* /usr/include/atk-1.0/atk/atkcomponent.h:154:NC */ extern gboolean atk_component_set_extents (AtkComponent *, gint, gint, gint, gint, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkcomponent.h:160:NC */ extern gboolean atk_component_set_position (AtkComponent *, gint, gint, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkcomponent.h:164:NC */ extern gboolean atk_component_set_size (AtkComponent *, gint, gint);
/* /usr/include/atk-1.0/atk/atkcomponent.h:167:NC */ extern gdouble atk_component_get_alpha (AtkComponent *);
/* /usr/include/atk-1.0/atk/atkdocument.h:69:NC */ extern GType atk_document_get_type (void);
/* /usr/include/atk-1.0/atk/atkdocument.h:71:NC */ extern const gchar *atk_document_get_document_type (AtkDocument *);
/* /usr/include/atk-1.0/atk/atkdocument.h:72:NC */ extern gpointer atk_document_get_document (AtkDocument *);
/* /usr/include/atk-1.0/atk/atkdocument.h:73:NC */ extern const gchar *atk_document_get_locale (AtkDocument *);
/* /usr/include/atk-1.0/atk/atkdocument.h:74:NC */ extern AtkAttributeSet *atk_document_get_attributes (AtkDocument *);
/* /usr/include/atk-1.0/atk/atkdocument.h:75:NC */ extern const gchar *atk_document_get_attribute_value (AtkDocument *, const gchar *);
/* /usr/include/atk-1.0/atk/atkdocument.h:77:NC */ extern gboolean atk_document_set_attribute_value (AtkDocument *, const gchar *, const gchar *);
/* /usr/include/atk-1.0/atk/atktext.h:100:NC */ extern AtkTextAttribute atk_text_attribute_register (const gchar *);
/* /usr/include/atk-1.0/atk/atktext.h:177:NC */ extern GType atk_text_range_get_type (void);
/* /usr/include/atk-1.0/atk/atktext.h:283:NC */ extern GType atk_text_get_type (void);
/* /usr/include/atk-1.0/atk/atktext.h:293:NC */ extern gchar *atk_text_get_text (AtkText *, gint, gint);
/* /usr/include/atk-1.0/atk/atktext.h:296:NC */ extern gunichar atk_text_get_character_at_offset (AtkText *, gint);
/* /usr/include/atk-1.0/atk/atktext.h:298:NC */ extern gchar *atk_text_get_text_after_offset (AtkText *, gint, AtkTextBoundary, gint *, gint *);
/* /usr/include/atk-1.0/atk/atktext.h:303:NC */ extern gchar *atk_text_get_text_at_offset (AtkText *, gint, AtkTextBoundary, gint *, gint *);
/* /usr/include/atk-1.0/atk/atktext.h:308:NC */ extern gchar *atk_text_get_text_before_offset (AtkText *, gint, AtkTextBoundary, gint *, gint *);
/* /usr/include/atk-1.0/atk/atktext.h:313:NC */ extern gint atk_text_get_caret_offset (AtkText *);
/* /usr/include/atk-1.0/atk/atktext.h:314:NC */ extern void atk_text_get_character_extents (AtkText *, gint, gint *, gint *, gint *, gint *, AtkCoordType);
/* /usr/include/atk-1.0/atk/atktext.h:321:NC */ extern AtkAttributeSet *atk_text_get_run_attributes (AtkText *, gint, gint *, gint *);
/* /usr/include/atk-1.0/atk/atktext.h:325:NC */ extern AtkAttributeSet *atk_text_get_default_attributes (AtkText *);
/* /usr/include/atk-1.0/atk/atktext.h:326:NC */ extern gint atk_text_get_character_count (AtkText *);
/* /usr/include/atk-1.0/atk/atktext.h:327:NC */ extern gint atk_text_get_offset_at_point (AtkText *, gint, gint, AtkCoordType);
/* /usr/include/atk-1.0/atk/atktext.h:331:NC */ extern gint atk_text_get_n_selections (AtkText *);
/* /usr/include/atk-1.0/atk/atktext.h:332:NC */ extern gchar *atk_text_get_selection (AtkText *, gint, gint *, gint *);
/* /usr/include/atk-1.0/atk/atktext.h:336:NC */ extern gboolean atk_text_add_selection (AtkText *, gint, gint);
/* /usr/include/atk-1.0/atk/atktext.h:339:NC */ extern gboolean atk_text_remove_selection (AtkText *, gint);
/* /usr/include/atk-1.0/atk/atktext.h:341:NC */ extern gboolean atk_text_set_selection (AtkText *, gint, gint, gint);
/* /usr/include/atk-1.0/atk/atktext.h:345:NC */ extern gboolean atk_text_set_caret_offset (AtkText *, gint);
/* /usr/include/atk-1.0/atk/atktext.h:347:NC */ extern void atk_text_get_range_extents (AtkText *, gint, gint, AtkCoordType, AtkTextRectangle *);
/* /usr/include/atk-1.0/atk/atktext.h:353:NC */ extern AtkTextRange **atk_text_get_bounded_ranges (AtkText *, AtkTextRectangle *, AtkCoordType, AtkTextClipType, AtkTextClipType);
/* /usr/include/atk-1.0/atk/atktext.h:358:NC */ extern void atk_text_free_ranges (AtkTextRange **);
/* /usr/include/atk-1.0/atk/atktext.h:359:NC */ extern void atk_attribute_set_free (AtkAttributeSet *);
/* /usr/include/atk-1.0/atk/atktext.h:360:NC */ extern const gchar *atk_text_attribute_get_name (AtkTextAttribute);
/* /usr/include/atk-1.0/atk/atktext.h:361:NC */ extern AtkTextAttribute atk_text_attribute_for_name (const gchar *);
/* /usr/include/atk-1.0/atk/atktext.h:362:NC */ extern const gchar *atk_text_attribute_get_value (AtkTextAttribute, gint);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:77:NC */ extern GType atk_editable_text_get_type (void);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:80:NC */ extern gboolean atk_editable_text_set_run_attributes (AtkEditableText *, AtkAttributeSet *, gint, gint);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:84:NC */ extern void atk_editable_text_set_text_contents (AtkEditableText *, const gchar *);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:86:NC */ extern void atk_editable_text_insert_text (AtkEditableText *, const gchar *, gint, gint *);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:90:NC */ extern void atk_editable_text_copy_text (AtkEditableText *, gint, gint);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:93:NC */ extern void atk_editable_text_cut_text (AtkEditableText *, gint, gint);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:96:NC */ extern void atk_editable_text_delete_text (AtkEditableText *, gint, gint);
/* /usr/include/atk-1.0/atk/atkeditabletext.h:99:NC */ extern void atk_editable_text_paste_text (AtkEditableText *, gint);
/* /usr/include/atk-1.0/atk/atkgobjectaccessible.h:50:NC */ extern GType atk_gobject_accessible_get_type (void);
/* /usr/include/atk-1.0/atk/atkgobjectaccessible.h:60:NC */ extern AtkObject *atk_gobject_accessible_for_object (GObject *);
/* /usr/include/atk-1.0/atk/atkgobjectaccessible.h:61:NC */ extern GObject *atk_gobject_accessible_get_object (AtkGObjectAccessible *);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:83:NC */ extern GType atk_hyperlink_get_type (void);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:85:NC */ extern gchar *atk_hyperlink_get_uri (AtkHyperlink *, gint);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:88:NC */ extern AtkObject *atk_hyperlink_get_object (AtkHyperlink *, gint);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:91:NC */ extern gint atk_hyperlink_get_end_index (AtkHyperlink *);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:93:NC */ extern gint atk_hyperlink_get_start_index (AtkHyperlink *);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:95:NC */ extern gboolean atk_hyperlink_is_valid (AtkHyperlink *);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:97:NC */ extern gboolean atk_hyperlink_is_inline (AtkHyperlink *);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:99:NC */ extern gint atk_hyperlink_get_n_anchors (AtkHyperlink *);
/* /usr/include/atk-1.0/atk/atkhyperlink.h:101:NC */ extern gboolean atk_hyperlink_is_selected_link (AtkHyperlink *);
/* /usr/include/atk-1.0/atk/atkhyperlinkimpl.h:69:NC */ extern GType atk_hyperlink_impl_get_type (void);
/* /usr/include/atk-1.0/atk/atkhyperlinkimpl.h:71:NC */ extern AtkHyperlink *atk_hyperlink_impl_get_hyperlink (AtkHyperlinkImpl *);
/* /usr/include/atk-1.0/atk/atkhypertext.h:68:NC */ extern GType atk_hypertext_get_type (void);
/* /usr/include/atk-1.0/atk/atkhypertext.h:70:NC */ extern AtkHyperlink *atk_hypertext_get_link (AtkHypertext *, gint);
/* /usr/include/atk-1.0/atk/atkhypertext.h:72:NC */ extern gint atk_hypertext_get_n_links (AtkHypertext *);
/* /usr/include/atk-1.0/atk/atkhypertext.h:73:NC */ extern gint atk_hypertext_get_link_index (AtkHypertext *, gint);
/* /usr/include/atk-1.0/atk/atkimage.h:68:NC */ extern GType atk_image_get_type (void);
/* /usr/include/atk-1.0/atk/atkimage.h:70:NC */ extern const gchar *atk_image_get_image_description (AtkImage *);
/* /usr/include/atk-1.0/atk/atkimage.h:72:NC */ extern void atk_image_get_image_size (AtkImage *, gint *, gint *);
/* /usr/include/atk-1.0/atk/atkimage.h:76:NC */ extern gboolean atk_image_set_image_description (AtkImage *, const gchar *);
/* /usr/include/atk-1.0/atk/atkimage.h:78:NC */ extern void atk_image_get_image_position (AtkImage *, gint *, gint *, AtkCoordType);
/* /usr/include/atk-1.0/atk/atkimage.h:83:NC */ extern const gchar *atk_image_get_image_locale (AtkImage *);
/* /usr/include/atk-1.0/atk/atknoopobject.h:44:NC */ extern GType atk_no_op_object_get_type (void);
/* /usr/include/atk-1.0/atk/atknoopobject.h:51:NC */ extern AtkObject *atk_no_op_object_new (GObject *);
/* /usr/include/atk-1.0/atk/atkobjectfactory.h:59:NC */ extern GType atk_object_factory_get_type (void);
/* /usr/include/atk-1.0/atk/atkobjectfactory.h:61:NC */ extern AtkObject *atk_object_factory_create_accessible (AtkObjectFactory *, GObject *);
/* /usr/include/atk-1.0/atk/atkobjectfactory.h:62:NC */ extern void atk_object_factory_invalidate (AtkObjectFactory *);
/* /usr/include/atk-1.0/atk/atkobjectfactory.h:63:NC */ extern GType atk_object_factory_get_accessible_type (AtkObjectFactory *);
/* /usr/include/atk-1.0/atk/atknoopobjectfactory.h:51:NC */ extern GType atk_no_op_object_factory_get_type (void);
/* /usr/include/atk-1.0/atk/atknoopobjectfactory.h:53:NC */ extern AtkObjectFactory *atk_no_op_object_factory_new (void);
/* /usr/include/atk-1.0/atk/atkplug.h:44:NC */ extern GType atk_plug_get_type (void);
/* /usr/include/atk-1.0/atk/atkplug.h:56:NC */ extern AtkObject *atk_plug_new (void);
/* /usr/include/atk-1.0/atk/atkplug.h:57:NC */ extern gchar *atk_plug_get_id (AtkPlug *);
/* /usr/include/atk-1.0/atk/atkregistry.h:55:NC */ extern GType atk_registry_get_type (void);
/* /usr/include/atk-1.0/atk/atkregistry.h:56:NC */ extern void atk_registry_set_factory_type (AtkRegistry *, GType, GType);
/* /usr/include/atk-1.0/atk/atkregistry.h:59:NC */ extern GType atk_registry_get_factory_type (AtkRegistry *, GType);
/* /usr/include/atk-1.0/atk/atkregistry.h:61:NC */ extern AtkObjectFactory *atk_registry_get_factory (AtkRegistry *, GType);
/* /usr/include/atk-1.0/atk/atkregistry.h:64:NC */ extern AtkRegistry *atk_get_default_registry (void);
/* /usr/include/atk-1.0/atk/atkrelation.h:61:NC */ extern GType atk_relation_get_type (void);
/* /usr/include/atk-1.0/atk/atkrelation.h:63:NC */ extern AtkRelationType atk_relation_type_register (const gchar *);
/* /usr/include/atk-1.0/atk/atkrelation.h:64:NC */ extern const gchar *atk_relation_type_get_name (AtkRelationType);
/* /usr/include/atk-1.0/atk/atkrelation.h:65:NC */ extern AtkRelationType atk_relation_type_for_name (const gchar *);
/* /usr/include/atk-1.0/atk/atkrelation.h:71:NC */ extern AtkRelation *atk_relation_new (AtkObject **, gint, AtkRelationType);
/* /usr/include/atk-1.0/atk/atkrelation.h:77:NC */ extern AtkRelationType atk_relation_get_relation_type (AtkRelation *);
/* /usr/include/atk-1.0/atk/atkrelation.h:81:NC */ extern GPtrArray *atk_relation_get_target (AtkRelation *);
/* /usr/include/atk-1.0/atk/atkrelation.h:82:NC */ extern void atk_relation_add_target (AtkRelation *, AtkObject *);
/* /usr/include/atk-1.0/atk/atkrelation.h:84:NC */ extern gboolean atk_relation_remove_target (AtkRelation *, AtkObject *);
/* /usr/include/atk-1.0/atk/atkrelationset.h:58:NC */ extern GType atk_relation_set_get_type (void);
/* /usr/include/atk-1.0/atk/atkrelationset.h:60:NC */ extern AtkRelationSet *atk_relation_set_new (void);
/* /usr/include/atk-1.0/atk/atkrelationset.h:61:NC */ extern gboolean atk_relation_set_contains (AtkRelationSet *, AtkRelationType);
/* /usr/include/atk-1.0/atk/atkrelationset.h:63:NC */ extern void atk_relation_set_remove (AtkRelationSet *, AtkRelation *);
/* /usr/include/atk-1.0/atk/atkrelationset.h:65:NC */ extern void atk_relation_set_add (AtkRelationSet *, AtkRelation *);
/* /usr/include/atk-1.0/atk/atkrelationset.h:67:NC */ extern gint atk_relation_set_get_n_relations (AtkRelationSet *);
/* /usr/include/atk-1.0/atk/atkrelationset.h:68:NC */ extern AtkRelation *atk_relation_set_get_relation (AtkRelationSet *, gint);
/* /usr/include/atk-1.0/atk/atkrelationset.h:70:NC */ extern AtkRelation *atk_relation_set_get_relation_by_type (AtkRelationSet *, AtkRelationType);
/* /usr/include/atk-1.0/atk/atkrelationset.h:72:NC */ extern void atk_relation_set_add_relation_by_type (AtkRelationSet *, AtkRelationType, AtkObject *);
/* /usr/include/atk-1.0/atk/atkselection.h:73:NC */ extern GType atk_selection_get_type (void);
/* /usr/include/atk-1.0/atk/atkselection.h:75:NC */ extern gboolean atk_selection_add_selection (AtkSelection *, gint);
/* /usr/include/atk-1.0/atk/atkselection.h:78:NC */ extern gboolean atk_selection_clear_selection (AtkSelection *);
/* /usr/include/atk-1.0/atk/atkselection.h:80:NC */ extern AtkObject *atk_selection_ref_selection (AtkSelection *, gint);
/* /usr/include/atk-1.0/atk/atkselection.h:83:NC */ extern gint atk_selection_get_selection_count (AtkSelection *);
/* /usr/include/atk-1.0/atk/atkselection.h:85:NC */ extern gboolean atk_selection_is_child_selected (AtkSelection *, gint);
/* /usr/include/atk-1.0/atk/atkselection.h:88:NC */ extern gboolean atk_selection_remove_selection (AtkSelection *, gint);
/* /usr/include/atk-1.0/atk/atkselection.h:91:NC */ extern gboolean atk_selection_select_all_selection (AtkSelection *);
/* /usr/include/atk-1.0/atk/atksocket.h:47:NC */ extern GType atk_socket_get_type (void);
/* /usr/include/atk-1.0/atk/atksocket.h:59:NC */ extern AtkObject *atk_socket_new (void);
/* /usr/include/atk-1.0/atk/atksocket.h:60:NC */ extern void atk_socket_embed (AtkSocket *, gchar *);
/* /usr/include/atk-1.0/atk/atksocket.h:61:NC */ extern gboolean atk_socket_is_occupied (AtkSocket *);
/* /usr/include/atk-1.0/atk/atkstateset.h:54:NC */ extern GType atk_state_set_get_type (void);
/* /usr/include/atk-1.0/atk/atkstateset.h:56:NC */ extern AtkStateSet *atk_state_set_new (void);
/* /usr/include/atk-1.0/atk/atkstateset.h:57:NC */ extern gboolean atk_state_set_is_empty (AtkStateSet *);
/* /usr/include/atk-1.0/atk/atkstateset.h:58:NC */ extern gboolean atk_state_set_add_state (AtkStateSet *, AtkStateType);
/* /usr/include/atk-1.0/atk/atkstateset.h:60:NC */ extern void atk_state_set_add_states (AtkStateSet *, AtkStateType *, gint);
/* /usr/include/atk-1.0/atk/atkstateset.h:63:NC */ extern void atk_state_set_clear_states (AtkStateSet *);
/* /usr/include/atk-1.0/atk/atkstateset.h:64:NC */ extern gboolean atk_state_set_contains_state (AtkStateSet *, AtkStateType);
/* /usr/include/atk-1.0/atk/atkstateset.h:66:NC */ extern gboolean atk_state_set_contains_states (AtkStateSet *, AtkStateType *, gint);
/* /usr/include/atk-1.0/atk/atkstateset.h:69:NC */ extern gboolean atk_state_set_remove_state (AtkStateSet *, AtkStateType);
/* /usr/include/atk-1.0/atk/atkstateset.h:71:NC */ extern AtkStateSet *atk_state_set_and_sets (AtkStateSet *, AtkStateSet *);
/* /usr/include/atk-1.0/atk/atkstateset.h:73:NC */ extern AtkStateSet *atk_state_set_or_sets (AtkStateSet *, AtkStateSet *);
/* /usr/include/atk-1.0/atk/atkstateset.h:75:NC */ extern AtkStateSet *atk_state_set_xor_sets (AtkStateSet *, AtkStateSet *);
/* /usr/include/atk-1.0/atk/atkstreamablecontent.h:91:NC */ extern GType atk_streamable_content_get_type (void);
/* /usr/include/atk-1.0/atk/atkstreamablecontent.h:93:NC */ extern gint atk_streamable_content_get_n_mime_types (AtkStreamableContent *);
/* /usr/include/atk-1.0/atk/atkstreamablecontent.h:95:NC */ extern const gchar *atk_streamable_content_get_mime_type (AtkStreamableContent *, gint);
/* /usr/include/atk-1.0/atk/atkstreamablecontent.h:97:NC */ extern GIOChannel *atk_streamable_content_get_stream (AtkStreamableContent *, const gchar *);
/* /usr/include/atk-1.0/atk/atkstreamablecontent.h:100:NC */ extern const gchar *atk_streamable_content_get_uri (AtkStreamableContent *, const gchar *);
/* /usr/include/atk-1.0/atk/atktable.h:142:NC */ extern GType atk_table_get_type (void);
/* /usr/include/atk-1.0/atk/atktable.h:144:NC */ extern AtkObject *atk_table_ref_at (AtkTable *, gint, gint);
/* /usr/include/atk-1.0/atk/atktable.h:147:NC */ extern gint atk_table_get_index_at (AtkTable *, gint, gint);
/* /usr/include/atk-1.0/atk/atktable.h:150:NC */ extern gint atk_table_get_column_at_index (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:152:NC */ extern gint atk_table_get_row_at_index (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:154:NC */ extern gint atk_table_get_n_columns (AtkTable *);
/* /usr/include/atk-1.0/atk/atktable.h:155:NC */ extern gint atk_table_get_n_rows (AtkTable *);
/* /usr/include/atk-1.0/atk/atktable.h:156:NC */ extern gint atk_table_get_column_extent_at (AtkTable *, gint, gint);
/* /usr/include/atk-1.0/atk/atktable.h:159:NC */ extern gint atk_table_get_row_extent_at (AtkTable *, gint, gint);
/* /usr/include/atk-1.0/atk/atktable.h:163:NC */ extern AtkObject *atk_table_get_caption (AtkTable *);
/* /usr/include/atk-1.0/atk/atktable.h:164:NC */ extern const gchar *atk_table_get_column_description (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:167:NC */ extern AtkObject *atk_table_get_column_header (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:169:NC */ extern const gchar *atk_table_get_row_description (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:171:NC */ extern AtkObject *atk_table_get_row_header (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:173:NC */ extern AtkObject *atk_table_get_summary (AtkTable *);
/* /usr/include/atk-1.0/atk/atktable.h:174:NC */ extern void atk_table_set_caption (AtkTable *, AtkObject *);
/* /usr/include/atk-1.0/atk/atktable.h:176:NC */ extern void atk_table_set_column_description (AtkTable *, gint, const gchar *);
/* /usr/include/atk-1.0/atk/atktable.h:180:NC */ extern void atk_table_set_column_header (AtkTable *, gint, AtkObject *);
/* /usr/include/atk-1.0/atk/atktable.h:183:NC */ extern void atk_table_set_row_description (AtkTable *, gint, const gchar *);
/* /usr/include/atk-1.0/atk/atktable.h:186:NC */ extern void atk_table_set_row_header (AtkTable *, gint, AtkObject *);
/* /usr/include/atk-1.0/atk/atktable.h:189:NC */ extern void atk_table_set_summary (AtkTable *, AtkObject *);
/* /usr/include/atk-1.0/atk/atktable.h:191:NC */ extern gint atk_table_get_selected_columns (AtkTable *, gint **);
/* /usr/include/atk-1.0/atk/atktable.h:193:NC */ extern gint atk_table_get_selected_rows (AtkTable *, gint **);
/* /usr/include/atk-1.0/atk/atktable.h:195:NC */ extern gboolean atk_table_is_column_selected (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:197:NC */ extern gboolean atk_table_is_row_selected (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:199:NC */ extern gboolean atk_table_is_selected (AtkTable *, gint, gint);
/* /usr/include/atk-1.0/atk/atktable.h:202:NC */ extern gboolean atk_table_add_row_selection (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:204:NC */ extern gboolean atk_table_remove_row_selection (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:206:NC */ extern gboolean atk_table_add_column_selection (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atktable.h:208:NC */ extern gboolean atk_table_remove_column_selection (AtkTable *, gint);
/* /usr/include/atk-1.0/atk/atkmisc.h:87:NC */ extern GType atk_misc_get_type (void);
/* /usr/include/atk-1.0/atk/atkmisc.h:95:NC */ extern void atk_misc_threads_enter (AtkMisc *);
/* /usr/include/atk-1.0/atk/atkmisc.h:103:NC */ extern void atk_misc_threads_leave (AtkMisc *);
/* /usr/include/atk-1.0/atk/atkmisc.h:108:NC */ extern const AtkMisc *atk_misc_get_instance (void);
/* /usr/include/atk-1.0/atk/atkvalue.h:67:NC */ extern GType atk_value_get_type (void);
/* /usr/include/atk-1.0/atk/atkvalue.h:69:NC */ extern void atk_value_get_current_value (AtkValue *, GValue *);
/* /usr/include/atk-1.0/atk/atkvalue.h:73:NC */ extern void atk_value_get_maximum_value (AtkValue *, GValue *);
/* /usr/include/atk-1.0/atk/atkvalue.h:76:NC */ extern void atk_value_get_minimum_value (AtkValue *, GValue *);
/* /usr/include/atk-1.0/atk/atkvalue.h:79:NC */ extern gboolean atk_value_set_current_value (AtkValue *, const GValue *);
/* /usr/include/atk-1.0/atk/atkvalue.h:82:NC */ extern void atk_value_get_minimum_increment (AtkValue *, GValue *);
/* /usr/include/atk-1.0/atk/atkwindow.h:51:NC */ extern GType atk_window_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:833:NC */ extern GType gtk_widget_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:834:NC */ extern GtkWidget *gtk_widget_new (GType, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:837:NC */ extern void gtk_widget_destroy (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:838:NC */ extern void gtk_widget_destroyed (GtkWidget *, GtkWidget **);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:841:NC */ extern GtkWidget *gtk_widget_ref (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:842:NC */ extern void gtk_widget_unref (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:843:NC */ extern void gtk_widget_set (GtkWidget *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:848:NC */ extern void gtk_widget_hide_all (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:850:NC */ extern void gtk_widget_unparent (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:851:NC */ extern void gtk_widget_show (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:852:NC */ extern void gtk_widget_show_now (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:853:NC */ extern void gtk_widget_hide (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:854:NC */ extern void gtk_widget_show_all (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:855:NC */ extern void gtk_widget_set_no_show_all (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:857:NC */ extern gboolean gtk_widget_get_no_show_all (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:858:NC */ extern void gtk_widget_map (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:859:NC */ extern void gtk_widget_unmap (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:860:NC */ extern void gtk_widget_realize (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:861:NC */ extern void gtk_widget_unrealize (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:864:NC */ extern void gtk_widget_queue_draw (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:865:NC */ extern void gtk_widget_queue_draw_area (GtkWidget *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:871:NC */ extern void gtk_widget_queue_clear (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:872:NC */ extern void gtk_widget_queue_clear_area (GtkWidget *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:880:NC */ extern void gtk_widget_queue_resize (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:881:NC */ extern void gtk_widget_queue_resize_no_redraw (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:883:NC */ extern void gtk_widget_draw (GtkWidget *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:886:NC */ extern void gtk_widget_size_request (GtkWidget *, GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:888:NC */ extern void gtk_widget_size_allocate (GtkWidget *, GtkAllocation *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:890:NC */ extern void gtk_widget_get_child_requisition (GtkWidget *, GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:892:NC */ extern void gtk_widget_add_accelerator (GtkWidget *, const gchar *, GtkAccelGroup *, guint, GdkModifierType, GtkAccelFlags);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:898:NC */ extern gboolean gtk_widget_remove_accelerator (GtkWidget *, GtkAccelGroup *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:902:NC */ extern void gtk_widget_set_accel_path (GtkWidget *, const gchar *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:905:NC */ extern const gchar *_gtk_widget_get_accel_path (GtkWidget *, gboolean *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:907:NC */ extern GList *gtk_widget_list_accel_closures (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:908:NC */ extern gboolean gtk_widget_can_activate_accel (GtkWidget *, guint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:910:NC */ extern gboolean gtk_widget_mnemonic_activate (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:912:NC */ extern gboolean gtk_widget_event (GtkWidget *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:914:NC */ extern gint gtk_widget_send_expose (GtkWidget *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:916:NC */ extern gboolean gtk_widget_send_focus_change (GtkWidget *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:919:NC */ extern gboolean gtk_widget_activate (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:920:NC */ extern gboolean gtk_widget_set_scroll_adjustments (GtkWidget *, GtkAdjustment *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:924:NC */ extern void gtk_widget_reparent (GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:926:NC */ extern gboolean gtk_widget_intersect (GtkWidget *, const GdkRectangle *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:929:NC */ extern GdkRegion *gtk_widget_region_intersect (GtkWidget *, const GdkRegion *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:932:NC */ extern void gtk_widget_freeze_child_notify (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:933:NC */ extern void gtk_widget_child_notify (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:935:NC */ extern void gtk_widget_thaw_child_notify (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:937:NC */ extern void gtk_widget_set_can_focus (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:939:NC */ extern gboolean gtk_widget_get_can_focus (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:940:NC */ extern gboolean gtk_widget_has_focus (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:941:NC */ extern gboolean gtk_widget_is_focus (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:942:NC */ extern void gtk_widget_grab_focus (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:944:NC */ extern void gtk_widget_set_can_default (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:946:NC */ extern gboolean gtk_widget_get_can_default (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:947:NC */ extern gboolean gtk_widget_has_default (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:948:NC */ extern void gtk_widget_grab_default (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:950:NC */ extern void gtk_widget_set_receives_default (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:952:NC */ extern gboolean gtk_widget_get_receives_default (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:954:NC */ extern gboolean gtk_widget_has_grab (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:956:NC */ extern void gtk_widget_set_name (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:958:NC */ extern const gchar *gtk_widget_get_name (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:960:NC */ extern void gtk_widget_set_state (GtkWidget *, GtkStateType);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:962:NC */ extern GtkStateType gtk_widget_get_state (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:964:NC */ extern void gtk_widget_set_sensitive (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:966:NC */ extern gboolean gtk_widget_get_sensitive (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:967:NC */ extern gboolean gtk_widget_is_sensitive (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:969:NC */ extern void gtk_widget_set_visible (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:971:NC */ extern gboolean gtk_widget_get_visible (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:973:NC */ extern void gtk_widget_set_has_window (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:975:NC */ extern gboolean gtk_widget_get_has_window (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:977:NC */ extern gboolean gtk_widget_is_toplevel (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:978:NC */ extern gboolean gtk_widget_is_drawable (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:979:NC */ extern void gtk_widget_set_realized (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:981:NC */ extern gboolean gtk_widget_get_realized (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:982:NC */ extern void gtk_widget_set_mapped (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:984:NC */ extern gboolean gtk_widget_get_mapped (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:986:NC */ extern void gtk_widget_set_app_paintable (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:988:NC */ extern gboolean gtk_widget_get_app_paintable (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:990:NC */ extern void gtk_widget_set_double_buffered (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:992:NC */ extern gboolean gtk_widget_get_double_buffered (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:994:NC */ extern void gtk_widget_set_redraw_on_allocate (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:997:NC */ extern void gtk_widget_set_parent (GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:999:NC */ extern GtkWidget *gtk_widget_get_parent (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1001:NC */ extern void gtk_widget_set_parent_window (GtkWidget *, GdkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1003:NC */ extern GdkWindow *gtk_widget_get_parent_window (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1005:NC */ extern void gtk_widget_set_child_visible (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1007:NC */ extern gboolean gtk_widget_get_child_visible (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1009:NC */ extern void gtk_widget_set_window (GtkWidget *, GdkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1011:NC */ extern GdkWindow *gtk_widget_get_window (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1013:NC */ extern void gtk_widget_get_allocation (GtkWidget *, GtkAllocation *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1015:NC */ extern void gtk_widget_set_allocation (GtkWidget *, const GtkAllocation *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1018:NC */ extern void gtk_widget_get_requisition (GtkWidget *, GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1021:NC */ extern gboolean gtk_widget_child_focus (GtkWidget *, GtkDirectionType);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1023:NC */ extern gboolean gtk_widget_keynav_failed (GtkWidget *, GtkDirectionType);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1025:NC */ extern void gtk_widget_error_bell (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1027:NC */ extern void gtk_widget_set_size_request (GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1030:NC */ extern void gtk_widget_get_size_request (GtkWidget *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1034:NC */ extern void gtk_widget_set_uposition (GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1037:NC */ extern void gtk_widget_set_usize (GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1042:NC */ extern void gtk_widget_set_events (GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1044:NC */ extern void gtk_widget_add_events (GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1046:NC */ extern void gtk_widget_set_extension_events (GtkWidget *, GdkExtensionMode);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1049:NC */ extern GdkExtensionMode gtk_widget_get_extension_events (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1050:NC */ extern GtkWidget *gtk_widget_get_toplevel (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1051:NC */ extern GtkWidget *gtk_widget_get_ancestor (GtkWidget *, GType);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1053:NC */ extern GdkColormap *gtk_widget_get_colormap (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1054:NC */ extern GdkVisual *gtk_widget_get_visual (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1056:NC */ extern GdkScreen *gtk_widget_get_screen (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1057:NC */ extern gboolean gtk_widget_has_screen (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1058:NC */ extern GdkDisplay *gtk_widget_get_display (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1059:NC */ extern GdkWindow *gtk_widget_get_root_window (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1060:NC */ extern GtkSettings *gtk_widget_get_settings (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1061:NC */ extern GtkClipboard *gtk_widget_get_clipboard (GtkWidget *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1063:NC */ extern GdkPixmap *gtk_widget_get_snapshot (GtkWidget *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1103:NC */ extern AtkObject *gtk_widget_get_accessible (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1111:NC */ extern void gtk_widget_set_colormap (GtkWidget *, GdkColormap *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1114:NC */ extern gint gtk_widget_get_events (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1115:NC */ extern void gtk_widget_get_pointer (GtkWidget *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1119:NC */ extern gboolean gtk_widget_is_ancestor (GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1122:NC */ extern gboolean gtk_widget_translate_coordinates (GtkWidget *, GtkWidget *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1131:NC */ extern gboolean gtk_widget_hide_on_delete (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1135:NC */ extern void gtk_widget_style_attach (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1137:NC */ extern gboolean gtk_widget_has_rc_style (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1138:NC */ extern void gtk_widget_set_style (GtkWidget *, GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1140:NC */ extern void gtk_widget_ensure_style (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1141:NC */ extern GtkStyle *gtk_widget_get_style (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1143:NC */ extern void gtk_widget_modify_style (GtkWidget *, GtkRcStyle *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1145:NC */ extern GtkRcStyle *gtk_widget_get_modifier_style (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1146:NC */ extern void gtk_widget_modify_fg (GtkWidget *, GtkStateType, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1149:NC */ extern void gtk_widget_modify_bg (GtkWidget *, GtkStateType, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1152:NC */ extern void gtk_widget_modify_text (GtkWidget *, GtkStateType, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1155:NC */ extern void gtk_widget_modify_base (GtkWidget *, GtkStateType, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1158:NC */ extern void gtk_widget_modify_cursor (GtkWidget *, const GdkColor *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1161:NC */ extern void gtk_widget_modify_font (GtkWidget *, PangoFontDescription *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1187:NC */ extern PangoContext *gtk_widget_create_pango_context (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1188:NC */ extern PangoContext *gtk_widget_get_pango_context (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1189:NC */ extern PangoLayout *gtk_widget_create_pango_layout (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1192:NC */ extern GdkPixbuf *gtk_widget_render_icon (GtkWidget *, const gchar *, GtkIconSize, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1200:NC */ extern void gtk_widget_set_composite_name (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1202:NC */ extern gchar *gtk_widget_get_composite_name (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1205:NC */ extern void gtk_widget_reset_rc_styles (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1211:NC */ extern void gtk_widget_push_colormap (GdkColormap *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1212:NC */ extern void gtk_widget_push_composite_child (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1213:NC */ extern void gtk_widget_pop_composite_child (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1214:NC */ extern void gtk_widget_pop_colormap (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1218:NC */ extern void gtk_widget_class_install_style_property (GtkWidgetClass *, GParamSpec *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1220:NC */ extern void gtk_widget_class_install_style_property_parser (GtkWidgetClass *, GParamSpec *, GtkRcPropertyParser);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1223:NC */ extern GParamSpec *gtk_widget_class_find_style_property (GtkWidgetClass *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1225:NC */ extern GParamSpec **gtk_widget_class_list_style_properties (GtkWidgetClass *, guint *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1227:NC */ extern void gtk_widget_style_get_property (GtkWidget *, const gchar *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1230:NC */ extern void gtk_widget_style_get_valist (GtkWidget *, const gchar *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1233:NC */ extern void gtk_widget_style_get (GtkWidget *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1240:NC */ extern void gtk_widget_set_default_colormap (GdkColormap *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1241:NC */ extern GtkStyle *gtk_widget_get_default_style (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1243:NC */ extern GdkColormap *gtk_widget_get_default_colormap (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1244:NC */ extern GdkVisual *gtk_widget_get_default_visual (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1250:NC */ extern void gtk_widget_set_direction (GtkWidget *, GtkTextDirection);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1252:NC */ extern GtkTextDirection gtk_widget_get_direction (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1254:NC */ extern void gtk_widget_set_default_direction (GtkTextDirection);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1255:NC */ extern GtkTextDirection gtk_widget_get_default_direction (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1258:NC */ extern gboolean gtk_widget_is_composited (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1262:NC */ extern void gtk_widget_shape_combine_mask (GtkWidget *, GdkBitmap *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1266:NC */ extern void gtk_widget_input_shape_combine_mask (GtkWidget *, GdkBitmap *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1273:NC */ extern void gtk_widget_reset_shapes (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1279:NC */ extern void gtk_widget_path (GtkWidget *, guint *, gchar **, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1283:NC */ extern void gtk_widget_class_path (GtkWidget *, guint *, gchar **, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1288:NC */ extern GList *gtk_widget_list_mnemonic_labels (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1289:NC */ extern void gtk_widget_add_mnemonic_label (GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1291:NC */ extern void gtk_widget_remove_mnemonic_label (GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1294:NC */ extern void gtk_widget_set_tooltip_window (GtkWidget *, GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1296:NC */ extern GtkWindow *gtk_widget_get_tooltip_window (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1297:NC */ extern void gtk_widget_trigger_tooltip_query (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1298:NC */ extern void gtk_widget_set_tooltip_text (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1300:NC */ extern gchar *gtk_widget_get_tooltip_text (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1301:NC */ extern void gtk_widget_set_tooltip_markup (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1303:NC */ extern gchar *gtk_widget_get_tooltip_markup (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1304:NC */ extern void gtk_widget_set_has_tooltip (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1306:NC */ extern gboolean gtk_widget_get_has_tooltip (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1308:NC */ extern GType gtk_requisition_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1309:NC */ extern GtkRequisition *gtk_requisition_copy (const GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1310:NC */ extern void gtk_requisition_free (GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1317:NC */ extern void _gtk_widget_set_has_default (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1319:NC */ extern void _gtk_widget_set_has_grab (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1321:NC */ extern void _gtk_widget_set_is_toplevel (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1324:NC */ extern void _gtk_widget_grab_notify (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1327:NC */ extern GtkWidgetAuxInfo *_gtk_widget_get_aux_info (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1329:NC */ extern void _gtk_widget_propagate_hierarchy_changed (GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1331:NC */ extern void _gtk_widget_propagate_screen_changed (GtkWidget *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1333:NC */ extern void _gtk_widget_propagate_composited_changed (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1335:NC */ extern void _gtk_widget_set_pointer_window (GtkWidget *, GdkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1337:NC */ extern GdkWindow *_gtk_widget_get_pointer_window (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1338:NC */ extern gboolean _gtk_widget_is_pointer_widget (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1339:NC */ extern void _gtk_widget_synthesize_crossing (GtkWidget *, GtkWidget *, GdkCrossingMode);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1343:NC */ extern GdkColormap *_gtk_widget_peek_colormap (void);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1345:NC */ extern void _gtk_widget_buildable_finish_accelerator (GtkWidget *, GtkWidget *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkwidget.h:1349:NC */ extern void ubuntu_gtk_widget_set_has_grab (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:107:NC */ extern GType gtk_container_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:108:NC */ extern void gtk_container_set_border_width (GtkContainer *, guint);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:110:NC */ extern guint gtk_container_get_border_width (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:111:NC */ extern void gtk_container_add (GtkContainer *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:113:NC */ extern void gtk_container_remove (GtkContainer *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:116:NC */ extern void gtk_container_set_resize_mode (GtkContainer *, GtkResizeMode);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:118:NC */ extern GtkResizeMode gtk_container_get_resize_mode (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:120:NC */ extern void gtk_container_check_resize (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:122:NC */ extern void gtk_container_foreach (GtkContainer *, GtkCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:126:NC */ extern void gtk_container_foreach_full (GtkContainer *, GtkCallback, GtkCallbackMarshal, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:132:NC */ extern GList *gtk_container_get_children (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:138:NC */ extern void gtk_container_propagate_expose (GtkContainer *, GtkWidget *, GdkEventExpose *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:142:NC */ extern void gtk_container_set_focus_chain (GtkContainer *, GList *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:144:NC */ extern gboolean gtk_container_get_focus_chain (GtkContainer *, GList **);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:146:NC */ extern void gtk_container_unset_focus_chain (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:150:NC */ extern void gtk_container_set_reallocate_redraws (GtkContainer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:152:NC */ extern void gtk_container_set_focus_child (GtkContainer *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:155:NC */ extern GtkWidget *gtk_container_get_focus_child (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:156:NC */ extern void gtk_container_set_focus_vadjustment (GtkContainer *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:158:NC */ extern GtkAdjustment *gtk_container_get_focus_vadjustment (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:159:NC */ extern void gtk_container_set_focus_hadjustment (GtkContainer *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:161:NC */ extern GtkAdjustment *gtk_container_get_focus_hadjustment (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:163:NC */ extern void gtk_container_resize_children (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:165:NC */ extern GType gtk_container_child_type (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:168:NC */ extern void gtk_container_class_install_child_property (GtkContainerClass *, guint, GParamSpec *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:171:NC */ extern GParamSpec *gtk_container_class_find_child_property (GObjectClass *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:173:NC */ extern GParamSpec **gtk_container_class_list_child_properties (GObjectClass *, guint *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:175:NC */ extern void gtk_container_add_with_properties (GtkContainer *, GtkWidget *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:179:NC */ extern void gtk_container_child_set (GtkContainer *, GtkWidget *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:183:NC */ extern void gtk_container_child_get (GtkContainer *, GtkWidget *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:187:NC */ extern void gtk_container_child_set_valist (GtkContainer *, GtkWidget *, const gchar *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:191:NC */ extern void gtk_container_child_get_valist (GtkContainer *, GtkWidget *, const gchar *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:195:NC */ extern void gtk_container_child_set_property (GtkContainer *, GtkWidget *, const gchar *, const GValue *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:199:NC */ extern void gtk_container_child_get_property (GtkContainer *, GtkWidget *, const gchar *, GValue *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:208:NC */ extern void gtk_container_forall (GtkContainer *, GtkCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:213:NC */ extern void _gtk_container_queue_resize (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:214:NC */ extern void _gtk_container_clear_resize_widgets (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:215:NC */ extern gchar *_gtk_container_child_composite_name (GtkContainer *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:217:NC */ extern void _gtk_container_dequeue_resize_handler (GtkContainer *);
/* /usr/include/gtk-2.0/gtk/gtkcontainer.h:218:NC */ extern GList *_gtk_container_focus_sort (GtkContainer *, GList *, GtkDirectionType, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkbin.h:64:NC */ extern GType gtk_bin_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkbin.h:66:NC */ extern GtkWidget *gtk_bin_get_child (GtkBin *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:178:NC */ extern GType gtk_window_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:179:NC */ extern GtkWidget *gtk_window_new (GtkWindowType);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:180:NC */ extern void gtk_window_set_title (GtkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:182:NC */ extern const gchar *gtk_window_get_title (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:183:NC */ extern void gtk_window_set_wmclass (GtkWindow *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:186:NC */ extern void gtk_window_set_role (GtkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:188:NC */ extern void gtk_window_set_startup_id (GtkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:190:NC */ extern const gchar *gtk_window_get_role (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:191:NC */ extern void gtk_window_add_accel_group (GtkWindow *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:193:NC */ extern void gtk_window_remove_accel_group (GtkWindow *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:195:NC */ extern void gtk_window_set_position (GtkWindow *, GtkWindowPosition);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:197:NC */ extern gboolean gtk_window_activate_focus (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:198:NC */ extern void gtk_window_set_focus (GtkWindow *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:200:NC */ extern GtkWidget *gtk_window_get_focus (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:201:NC */ extern void gtk_window_set_default (GtkWindow *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:203:NC */ extern GtkWidget *gtk_window_get_default_widget (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:204:NC */ extern gboolean gtk_window_activate_default (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:206:NC */ extern void gtk_window_set_transient_for (GtkWindow *, GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:208:NC */ extern GtkWindow *gtk_window_get_transient_for (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:209:NC */ extern void gtk_window_set_opacity (GtkWindow *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:211:NC */ extern gdouble gtk_window_get_opacity (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:212:NC */ extern void gtk_window_set_type_hint (GtkWindow *, GdkWindowTypeHint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:214:NC */ extern GdkWindowTypeHint gtk_window_get_type_hint (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:215:NC */ extern void gtk_window_set_skip_taskbar_hint (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:217:NC */ extern gboolean gtk_window_get_skip_taskbar_hint (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:218:NC */ extern void gtk_window_set_skip_pager_hint (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:220:NC */ extern gboolean gtk_window_get_skip_pager_hint (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:221:NC */ extern void gtk_window_set_urgency_hint (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:223:NC */ extern gboolean gtk_window_get_urgency_hint (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:224:NC */ extern void gtk_window_set_accept_focus (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:226:NC */ extern gboolean gtk_window_get_accept_focus (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:227:NC */ extern void gtk_window_set_focus_on_map (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:229:NC */ extern gboolean gtk_window_get_focus_on_map (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:230:NC */ extern void gtk_window_set_destroy_with_parent (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:232:NC */ extern gboolean gtk_window_get_destroy_with_parent (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:233:NC */ extern void gtk_window_set_mnemonics_visible (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:235:NC */ extern gboolean gtk_window_get_mnemonics_visible (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:237:NC */ extern void gtk_window_set_resizable (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:239:NC */ extern gboolean gtk_window_get_resizable (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:241:NC */ extern void gtk_window_set_gravity (GtkWindow *, GdkGravity);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:243:NC */ extern GdkGravity gtk_window_get_gravity (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:246:NC */ extern void gtk_window_set_geometry_hints (GtkWindow *, GtkWidget *, GdkGeometry *, GdkWindowHints);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:251:NC */ extern void gtk_window_set_screen (GtkWindow *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:253:NC */ extern GdkScreen *gtk_window_get_screen (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:255:NC */ extern gboolean gtk_window_is_active (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:256:NC */ extern gboolean gtk_window_has_toplevel_focus (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:261:NC */ extern void gtk_window_set_has_frame (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:263:NC */ extern gboolean gtk_window_get_has_frame (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:264:NC */ extern void gtk_window_set_frame_dimensions (GtkWindow *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:269:NC */ extern void gtk_window_get_frame_dimensions (GtkWindow *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:275:NC */ extern void gtk_window_set_decorated (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:277:NC */ extern gboolean gtk_window_get_decorated (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:278:NC */ extern void gtk_window_set_deletable (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:280:NC */ extern gboolean gtk_window_get_deletable (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:282:NC */ extern void gtk_window_set_icon_list (GtkWindow *, GList *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:284:NC */ extern GList *gtk_window_get_icon_list (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:285:NC */ extern void gtk_window_set_icon (GtkWindow *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:287:NC */ extern void gtk_window_set_icon_name (GtkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:289:NC */ extern gboolean gtk_window_set_icon_from_file (GtkWindow *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:292:NC */ extern GdkPixbuf *gtk_window_get_icon (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:294:NC */ extern const gchar *gtk_window_get_icon_name (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:295:NC */ extern void gtk_window_set_default_icon_list (GList *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:296:NC */ extern GList *gtk_window_get_default_icon_list (void);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:297:NC */ extern void gtk_window_set_default_icon (GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:298:NC */ extern void gtk_window_set_default_icon_name (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:300:NC */ extern const gchar *gtk_window_get_default_icon_name (void);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:301:NC */ extern gboolean gtk_window_set_default_icon_from_file (const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:304:NC */ extern void gtk_window_set_auto_startup_notification (gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:307:NC */ extern void gtk_window_set_modal (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:309:NC */ extern gboolean gtk_window_get_modal (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:310:NC */ extern GList *gtk_window_list_toplevels (void);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:312:NC */ extern void gtk_window_add_mnemonic (GtkWindow *, guint, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:315:NC */ extern void gtk_window_remove_mnemonic (GtkWindow *, guint, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:318:NC */ extern gboolean gtk_window_mnemonic_activate (GtkWindow *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:321:NC */ extern void gtk_window_set_mnemonic_modifier (GtkWindow *, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:323:NC */ extern GdkModifierType gtk_window_get_mnemonic_modifier (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:325:NC */ extern gboolean gtk_window_activate_key (GtkWindow *, GdkEventKey *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:327:NC */ extern gboolean gtk_window_propagate_key_event (GtkWindow *, GdkEventKey *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:330:NC */ extern void gtk_window_present (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:331:NC */ extern void gtk_window_present_with_time (GtkWindow *, guint32);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:333:NC */ extern void gtk_window_iconify (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:334:NC */ extern void gtk_window_deiconify (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:335:NC */ extern void gtk_window_stick (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:336:NC */ extern void gtk_window_unstick (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:337:NC */ extern void gtk_window_maximize (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:338:NC */ extern void gtk_window_unmaximize (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:339:NC */ extern void gtk_window_fullscreen (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:340:NC */ extern void gtk_window_unfullscreen (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:341:NC */ extern void gtk_window_set_keep_above (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:342:NC */ extern void gtk_window_set_keep_below (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:344:NC */ extern void gtk_window_begin_resize_drag (GtkWindow *, GdkWindowEdge, gint, gint, gint, guint32);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:350:NC */ extern void gtk_window_begin_move_drag (GtkWindow *, gint, gint, gint, guint32);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:357:NC */ extern void gtk_window_set_policy (GtkWindow *, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:367:NC */ extern void gtk_window_set_default_size (GtkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:370:NC */ extern void gtk_window_get_default_size (GtkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:373:NC */ extern void gtk_window_resize (GtkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:376:NC */ extern void gtk_window_get_size (GtkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:379:NC */ extern void gtk_window_move (GtkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:382:NC */ extern void gtk_window_get_position (GtkWindow *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:385:NC */ extern gboolean gtk_window_parse_geometry (GtkWindow *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:387:NC */ extern GtkWindowGroup *gtk_window_get_group (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:388:NC */ extern gboolean gtk_window_has_group (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:391:NC */ extern void gtk_window_reshow_with_initial_size (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:393:NC */ extern GtkWindowType gtk_window_get_window_type (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:397:NC */ extern GType gtk_window_group_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:399:NC */ extern GtkWindowGroup *gtk_window_group_new (void);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:400:NC */ extern void gtk_window_group_add_window (GtkWindowGroup *, GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:402:NC */ extern void gtk_window_group_remove_window (GtkWindowGroup *, GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:404:NC */ extern GList *gtk_window_group_list_windows (GtkWindowGroup *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:410:NC */ extern void gtk_window_set_has_resize_grip (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:412:NC */ extern gboolean gtk_window_get_has_resize_grip (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:413:NC */ extern gboolean gtk_window_resize_grip_is_visible (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:414:NC */ extern gboolean gtk_window_get_resize_grip_area (GtkWindow *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:419:NC */ extern void _gtk_window_internal_set_focus (GtkWindow *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:421:NC */ extern void gtk_window_remove_embedded_xid (GtkWindow *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:423:NC */ extern void gtk_window_add_embedded_xid (GtkWindow *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:425:NC */ extern void _gtk_window_reposition (GtkWindow *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:428:NC */ extern void _gtk_window_constrain_size (GtkWindow *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:433:NC */ extern GtkWidget *gtk_window_group_get_current_grab (GtkWindowGroup *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:435:NC */ extern void _gtk_window_set_has_toplevel_focus (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:437:NC */ extern void _gtk_window_unset_focus_and_default (GtkWindow *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:440:NC */ extern void _gtk_window_set_is_active (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:443:NC */ extern void _gtk_window_set_is_toplevel (GtkWindow *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:452:NC */ extern void _gtk_window_keys_foreach (GtkWindow *, GtkWindowKeysForeachFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkwindow.h:457:NC */ extern gboolean _gtk_window_query_nonaccels (GtkWindow *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:127:NC */ extern GType gtk_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:128:NC */ extern GtkWidget *gtk_dialog_new (void);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:130:NC */ extern GtkWidget *gtk_dialog_new_with_buttons (const gchar *, GtkWindow *, GtkDialogFlags, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:136:NC */ extern void gtk_dialog_add_action_widget (GtkDialog *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:139:NC */ extern GtkWidget *gtk_dialog_add_button (GtkDialog *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:142:NC */ extern void gtk_dialog_add_buttons (GtkDialog *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:146:NC */ extern void gtk_dialog_set_response_sensitive (GtkDialog *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:149:NC */ extern void gtk_dialog_set_default_response (GtkDialog *, gint);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:151:NC */ extern GtkWidget *gtk_dialog_get_widget_for_response (GtkDialog *, gint);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:153:NC */ extern gint gtk_dialog_get_response_for_widget (GtkDialog *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:157:NC */ extern void gtk_dialog_set_has_separator (GtkDialog *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:159:NC */ extern gboolean gtk_dialog_get_has_separator (GtkDialog *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:162:NC */ extern gboolean gtk_alternative_dialog_button_order (GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:163:NC */ extern void gtk_dialog_set_alternative_button_order (GtkDialog *, gint, ...);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:166:NC */ extern void gtk_dialog_set_alternative_button_order_from_array (GtkDialog *, gint, gint *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:171:NC */ extern void gtk_dialog_response (GtkDialog *, gint);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:175:NC */ extern gint gtk_dialog_run (GtkDialog *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:177:NC */ extern GtkWidget *gtk_dialog_get_action_area (GtkDialog *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:178:NC */ extern GtkWidget *gtk_dialog_get_content_area (GtkDialog *);
/* /usr/include/gtk-2.0/gtk/gtkdialog.h:181:NC */ extern void _gtk_dialog_set_ignore_separator (GtkDialog *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:73:NC */ extern GType gtk_about_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:74:NC */ extern GtkWidget *gtk_about_dialog_new (void);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:75:NC */ extern void gtk_show_about_dialog (GtkWindow *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:80:NC */ extern const gchar *gtk_about_dialog_get_name (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:81:NC */ extern void gtk_about_dialog_set_name (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:84:NC */ extern const gchar *gtk_about_dialog_get_program_name (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:85:NC */ extern void gtk_about_dialog_set_program_name (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:87:NC */ extern const gchar *gtk_about_dialog_get_version (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:88:NC */ extern void gtk_about_dialog_set_version (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:90:NC */ extern const gchar *gtk_about_dialog_get_copyright (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:91:NC */ extern void gtk_about_dialog_set_copyright (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:93:NC */ extern const gchar *gtk_about_dialog_get_comments (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:94:NC */ extern void gtk_about_dialog_set_comments (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:96:NC */ extern const gchar *gtk_about_dialog_get_license (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:97:NC */ extern void gtk_about_dialog_set_license (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:100:NC */ extern gboolean gtk_about_dialog_get_wrap_license (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:101:NC */ extern void gtk_about_dialog_set_wrap_license (GtkAboutDialog *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:104:NC */ extern const gchar *gtk_about_dialog_get_website (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:105:NC */ extern void gtk_about_dialog_set_website (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:107:NC */ extern const gchar *gtk_about_dialog_get_website_label (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:108:NC */ extern void gtk_about_dialog_set_website_label (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:110:NC */ extern const gchar *const *gtk_about_dialog_get_authors (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:111:NC */ extern void gtk_about_dialog_set_authors (GtkAboutDialog *, const gchar **);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:113:NC */ extern const gchar *const *gtk_about_dialog_get_documenters (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:114:NC */ extern void gtk_about_dialog_set_documenters (GtkAboutDialog *, const gchar **);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:116:NC */ extern const gchar *const *gtk_about_dialog_get_artists (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:117:NC */ extern void gtk_about_dialog_set_artists (GtkAboutDialog *, const gchar **);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:119:NC */ extern const gchar *gtk_about_dialog_get_translator_credits (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:120:NC */ extern void gtk_about_dialog_set_translator_credits (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:122:NC */ extern GdkPixbuf *gtk_about_dialog_get_logo (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:123:NC */ extern void gtk_about_dialog_set_logo (GtkAboutDialog *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:125:NC */ extern const gchar *gtk_about_dialog_get_logo_icon_name (GtkAboutDialog *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:126:NC */ extern void gtk_about_dialog_set_logo_icon_name (GtkAboutDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:145:NC */ extern GtkAboutDialogActivateLinkFunc gtk_about_dialog_set_email_hook (GtkAboutDialogActivateLinkFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkaboutdialog.h:148:NC */ extern GtkAboutDialogActivateLinkFunc gtk_about_dialog_set_url_hook (GtkAboutDialogActivateLinkFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkmisc.h:68:NC */ extern GType gtk_misc_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmisc.h:69:NC */ extern void gtk_misc_set_alignment (GtkMisc *, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkmisc.h:72:NC */ extern void gtk_misc_get_alignment (GtkMisc *, gfloat *, gfloat *);
/* /usr/include/gtk-2.0/gtk/gtkmisc.h:75:NC */ extern void gtk_misc_set_padding (GtkMisc *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkmisc.h:78:NC */ extern void gtk_misc_get_padding (GtkMisc *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:100:NC */ extern GType gtk_menu_shell_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:101:NC */ extern void gtk_menu_shell_append (GtkMenuShell *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:103:NC */ extern void gtk_menu_shell_prepend (GtkMenuShell *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:105:NC */ extern void gtk_menu_shell_insert (GtkMenuShell *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:108:NC */ extern void gtk_menu_shell_deactivate (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:109:NC */ extern void gtk_menu_shell_select_item (GtkMenuShell *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:111:NC */ extern void gtk_menu_shell_deselect (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:112:NC */ extern void gtk_menu_shell_activate_item (GtkMenuShell *, GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:115:NC */ extern void gtk_menu_shell_select_first (GtkMenuShell *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:117:NC */ extern void _gtk_menu_shell_select_last (GtkMenuShell *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:119:NC */ extern void _gtk_menu_shell_activate (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:120:NC */ extern gint _gtk_menu_shell_get_popup_delay (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:121:NC */ extern void gtk_menu_shell_cancel (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:123:NC */ extern void _gtk_menu_shell_add_mnemonic (GtkMenuShell *, guint, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:126:NC */ extern void _gtk_menu_shell_remove_mnemonic (GtkMenuShell *, guint, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:130:NC */ extern gboolean gtk_menu_shell_get_take_focus (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:131:NC */ extern void gtk_menu_shell_set_take_focus (GtkMenuShell *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:134:NC */ extern void _gtk_menu_shell_update_mnemonics (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:135:NC */ extern void _gtk_menu_shell_set_keyboard_mode (GtkMenuShell *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenushell.h:137:NC */ extern gboolean _gtk_menu_shell_get_keyboard_mode (GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:125:NC */ extern GType gtk_menu_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:126:NC */ extern GtkWidget *gtk_menu_new (void);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:129:NC */ extern void gtk_menu_popup (GtkMenu *, GtkWidget *, GtkWidget *, GtkMenuPositionFunc, gpointer, guint, guint32);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:140:NC */ extern void gtk_menu_reposition (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:142:NC */ extern void gtk_menu_popdown (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:147:NC */ extern GtkWidget *gtk_menu_get_active (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:148:NC */ extern void gtk_menu_set_active (GtkMenu *, guint);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:154:NC */ extern void gtk_menu_set_accel_group (GtkMenu *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:156:NC */ extern GtkAccelGroup *gtk_menu_get_accel_group (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:157:NC */ extern void gtk_menu_set_accel_path (GtkMenu *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:159:NC */ extern const gchar *gtk_menu_get_accel_path (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:165:NC */ extern void gtk_menu_attach_to_widget (GtkMenu *, GtkWidget *, GtkMenuDetachFunc);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:168:NC */ extern void gtk_menu_detach (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:174:NC */ extern GtkWidget *gtk_menu_get_attach_widget (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:176:NC */ extern void gtk_menu_set_tearoff_state (GtkMenu *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:178:NC */ extern gboolean gtk_menu_get_tearoff_state (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:183:NC */ extern void gtk_menu_set_title (GtkMenu *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:185:NC */ extern const gchar *gtk_menu_get_title (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:187:NC */ extern void gtk_menu_reorder_child (GtkMenu *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:191:NC */ extern void gtk_menu_set_screen (GtkMenu *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:194:NC */ extern void gtk_menu_attach (GtkMenu *, GtkWidget *, guint, guint, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:201:NC */ extern void gtk_menu_set_monitor (GtkMenu *, gint);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:203:NC */ extern gint gtk_menu_get_monitor (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:204:NC */ extern GList *gtk_menu_get_for_attach_widget (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:212:NC */ extern void gtk_menu_set_reserve_toggle_size (GtkMenu *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenu.h:214:NC */ extern gboolean gtk_menu_get_reserve_toggle_size (GtkMenu *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:109:NC */ extern GType gtk_label_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:110:NC */ extern GtkWidget *gtk_label_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:111:NC */ extern GtkWidget *gtk_label_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:112:NC */ extern void gtk_label_set_text (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:114:NC */ extern const gchar *gtk_label_get_text (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:115:NC */ extern void gtk_label_set_attributes (GtkLabel *, PangoAttrList *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:117:NC */ extern PangoAttrList *gtk_label_get_attributes (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:118:NC */ extern void gtk_label_set_label (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:120:NC */ extern const gchar *gtk_label_get_label (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:121:NC */ extern void gtk_label_set_markup (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:123:NC */ extern void gtk_label_set_use_markup (GtkLabel *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:125:NC */ extern gboolean gtk_label_get_use_markup (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:126:NC */ extern void gtk_label_set_use_underline (GtkLabel *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:128:NC */ extern gboolean gtk_label_get_use_underline (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:130:NC */ extern void gtk_label_set_markup_with_mnemonic (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:132:NC */ extern guint gtk_label_get_mnemonic_keyval (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:133:NC */ extern void gtk_label_set_mnemonic_widget (GtkLabel *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:135:NC */ extern GtkWidget *gtk_label_get_mnemonic_widget (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:136:NC */ extern void gtk_label_set_text_with_mnemonic (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:138:NC */ extern void gtk_label_set_justify (GtkLabel *, GtkJustification);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:140:NC */ extern GtkJustification gtk_label_get_justify (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:141:NC */ extern void gtk_label_set_ellipsize (GtkLabel *, PangoEllipsizeMode);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:143:NC */ extern PangoEllipsizeMode gtk_label_get_ellipsize (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:144:NC */ extern void gtk_label_set_width_chars (GtkLabel *, gint);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:146:NC */ extern gint gtk_label_get_width_chars (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:147:NC */ extern void gtk_label_set_max_width_chars (GtkLabel *, gint);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:149:NC */ extern gint gtk_label_get_max_width_chars (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:150:NC */ extern void gtk_label_set_pattern (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:152:NC */ extern void gtk_label_set_line_wrap (GtkLabel *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:154:NC */ extern gboolean gtk_label_get_line_wrap (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:155:NC */ extern void gtk_label_set_line_wrap_mode (GtkLabel *, PangoWrapMode);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:157:NC */ extern PangoWrapMode gtk_label_get_line_wrap_mode (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:158:NC */ extern void gtk_label_set_selectable (GtkLabel *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:160:NC */ extern gboolean gtk_label_get_selectable (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:161:NC */ extern void gtk_label_set_angle (GtkLabel *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:163:NC */ extern gdouble gtk_label_get_angle (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:164:NC */ extern void gtk_label_select_region (GtkLabel *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:167:NC */ extern gboolean gtk_label_get_selection_bounds (GtkLabel *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:171:NC */ extern PangoLayout *gtk_label_get_layout (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:172:NC */ extern void gtk_label_get_layout_offsets (GtkLabel *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:176:NC */ extern void gtk_label_set_single_line_mode (GtkLabel *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:178:NC */ extern gboolean gtk_label_get_single_line_mode (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:180:NC */ extern const gchar *gtk_label_get_current_uri (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:181:NC */ extern void gtk_label_set_track_visited_links (GtkLabel *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:183:NC */ extern gboolean gtk_label_get_track_visited_links (GtkLabel *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:188:NC */ extern void gtk_label_get (GtkLabel *, gchar **);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:195:NC */ extern guint gtk_label_parse_uline (GtkLabel *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklabel.h:202:NC */ extern void _gtk_label_mnemonics_visible_apply_recursively (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:97:NC */ extern GType gtk_accel_label_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:98:NC */ extern GtkWidget *gtk_accel_label_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:99:NC */ extern GtkWidget *gtk_accel_label_get_accel_widget (GtkAccelLabel *);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:100:NC */ extern guint gtk_accel_label_get_accel_width (GtkAccelLabel *);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:101:NC */ extern void gtk_accel_label_set_accel_widget (GtkAccelLabel *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:103:NC */ extern void gtk_accel_label_set_accel_closure (GtkAccelLabel *, GClosure *);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:105:NC */ extern gboolean gtk_accel_label_refetch (GtkAccelLabel *);
/* /usr/include/gtk-2.0/gtk/gtkaccellabel.h:108:NC */ extern gchar *_gtk_accel_label_class_get_accelerator_label (GtkAccelLabelClass *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:59:NC */ extern void gtk_accel_map_add_entry (const gchar *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:62:NC */ extern gboolean gtk_accel_map_lookup_entry (const gchar *, GtkAccelKey *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:64:NC */ extern gboolean gtk_accel_map_change_entry (const gchar *, guint, GdkModifierType, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:68:NC */ extern void gtk_accel_map_load (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:69:NC */ extern void gtk_accel_map_save (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:70:NC */ extern void gtk_accel_map_foreach (gpointer, GtkAccelMapForeach);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:72:NC */ extern void gtk_accel_map_load_fd (gint);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:73:NC */ extern void gtk_accel_map_load_scanner (GScanner *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:74:NC */ extern void gtk_accel_map_save_fd (gint);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:76:NC */ extern void gtk_accel_map_lock_path (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:77:NC */ extern void gtk_accel_map_unlock_path (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:80:NC */ extern void gtk_accel_map_add_filter (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:81:NC */ extern void gtk_accel_map_foreach_unfiltered (gpointer, GtkAccelMapForeach);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:85:NC */ extern GType gtk_accel_map_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:86:NC */ extern GtkAccelMap *gtk_accel_map_get (void);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:90:NC */ extern void _gtk_accel_map_init (void);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:92:NC */ extern void _gtk_accel_map_add_group (const gchar *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:94:NC */ extern void _gtk_accel_map_remove_group (const gchar *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaccelmap.h:96:NC */ extern gboolean _gtk_accel_path_is_valid (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaccessible.h:69:NC */ extern GType gtk_accessible_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaccessible.h:71:NC */ extern void gtk_accessible_set_widget (GtkAccessible *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaccessible.h:73:NC */ extern GtkWidget *gtk_accessible_get_widget (GtkAccessible *);
/* /usr/include/gtk-2.0/gtk/gtkaccessible.h:74:NC */ extern void gtk_accessible_connect_widget_destroyed (GtkAccessible *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:88:NC */ extern GType gtk_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:89:NC */ extern GtkAction *gtk_action_new (const gchar *, const gchar *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:93:NC */ extern const gchar *gtk_action_get_name (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:94:NC */ extern gboolean gtk_action_is_sensitive (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:95:NC */ extern gboolean gtk_action_get_sensitive (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:96:NC */ extern void gtk_action_set_sensitive (GtkAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:98:NC */ extern gboolean gtk_action_is_visible (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:99:NC */ extern gboolean gtk_action_get_visible (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:100:NC */ extern void gtk_action_set_visible (GtkAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:102:NC */ extern void gtk_action_activate (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:103:NC */ extern GtkWidget *gtk_action_create_icon (GtkAction *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:105:NC */ extern GtkWidget *gtk_action_create_menu_item (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:106:NC */ extern GtkWidget *gtk_action_create_tool_item (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:107:NC */ extern GtkWidget *gtk_action_create_menu (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:108:NC */ extern GSList *gtk_action_get_proxies (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:109:NC */ extern void gtk_action_connect_accelerator (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:110:NC */ extern void gtk_action_disconnect_accelerator (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:111:NC */ extern const gchar *gtk_action_get_accel_path (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:112:NC */ extern GClosure *gtk_action_get_accel_closure (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:115:NC */ extern GtkAction *gtk_widget_get_action (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:116:NC */ extern void gtk_action_connect_proxy (GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:118:NC */ extern void gtk_action_disconnect_proxy (GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:120:NC */ extern void gtk_action_block_activate_from (GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:122:NC */ extern void gtk_action_unblock_activate_from (GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:125:NC */ extern void gtk_action_block_activate (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:126:NC */ extern void gtk_action_unblock_activate (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:129:NC */ extern void _gtk_action_add_to_proxy_list (GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:131:NC */ extern void _gtk_action_remove_from_proxy_list (GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:135:NC */ extern void _gtk_action_emit_activate (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:138:NC */ extern void gtk_action_set_accel_path (GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:140:NC */ extern void gtk_action_set_accel_group (GtkAction *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:142:NC */ extern void _gtk_action_sync_menu_visible (GtkAction *, GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:146:NC */ extern void gtk_action_set_label (GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:148:NC */ extern const gchar *gtk_action_get_label (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:149:NC */ extern void gtk_action_set_short_label (GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:151:NC */ extern const gchar *gtk_action_get_short_label (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:152:NC */ extern void gtk_action_set_tooltip (GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:154:NC */ extern const gchar *gtk_action_get_tooltip (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:155:NC */ extern void gtk_action_set_stock_id (GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:157:NC */ extern const gchar *gtk_action_get_stock_id (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:158:NC */ extern void gtk_action_set_gicon (GtkAction *, GIcon *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:160:NC */ extern GIcon *gtk_action_get_gicon (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:161:NC */ extern void gtk_action_set_icon_name (GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:163:NC */ extern const gchar *gtk_action_get_icon_name (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:164:NC */ extern void gtk_action_set_visible_horizontal (GtkAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:166:NC */ extern gboolean gtk_action_get_visible_horizontal (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:167:NC */ extern void gtk_action_set_visible_vertical (GtkAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:169:NC */ extern gboolean gtk_action_get_visible_vertical (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:170:NC */ extern void gtk_action_set_is_important (GtkAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:172:NC */ extern gboolean gtk_action_get_is_important (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:173:NC */ extern void gtk_action_set_always_show_image (GtkAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaction.h:175:NC */ extern gboolean gtk_action_get_always_show_image (GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:111:NC */ extern GType gtk_action_group_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:112:NC */ extern GtkActionGroup *gtk_action_group_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:113:NC */ extern const gchar *gtk_action_group_get_name (GtkActionGroup *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:114:NC */ extern gboolean gtk_action_group_get_sensitive (GtkActionGroup *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:115:NC */ extern void gtk_action_group_set_sensitive (GtkActionGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:117:NC */ extern gboolean gtk_action_group_get_visible (GtkActionGroup *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:118:NC */ extern void gtk_action_group_set_visible (GtkActionGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:120:NC */ extern GtkAction *gtk_action_group_get_action (GtkActionGroup *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:122:NC */ extern GList *gtk_action_group_list_actions (GtkActionGroup *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:123:NC */ extern void gtk_action_group_add_action (GtkActionGroup *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:125:NC */ extern void gtk_action_group_add_action_with_accel (GtkActionGroup *, GtkAction *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:128:NC */ extern void gtk_action_group_remove_action (GtkActionGroup *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:130:NC */ extern void gtk_action_group_add_actions (GtkActionGroup *, const GtkActionEntry *, guint, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:134:NC */ extern void gtk_action_group_add_toggle_actions (GtkActionGroup *, const GtkToggleActionEntry *, guint, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:138:NC */ extern void gtk_action_group_add_radio_actions (GtkActionGroup *, const GtkRadioActionEntry *, guint, gint, GCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:144:NC */ extern void gtk_action_group_add_actions_full (GtkActionGroup *, const GtkActionEntry *, guint, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:149:NC */ extern void gtk_action_group_add_toggle_actions_full (GtkActionGroup *, const GtkToggleActionEntry *, guint, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:154:NC */ extern void gtk_action_group_add_radio_actions_full (GtkActionGroup *, const GtkRadioActionEntry *, guint, gint, GCallback, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:161:NC */ extern void gtk_action_group_set_translate_func (GtkActionGroup *, GtkTranslateFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:165:NC */ extern void gtk_action_group_set_translation_domain (GtkActionGroup *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:167:NC */ extern const gchar *gtk_action_group_translate_string (GtkActionGroup *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:171:NC */ extern void _gtk_action_group_emit_connect_proxy (GtkActionGroup *, GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:174:NC */ extern void _gtk_action_group_emit_disconnect_proxy (GtkActionGroup *, GtkAction *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:177:NC */ extern void _gtk_action_group_emit_pre_activate (GtkActionGroup *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactiongroup.h:179:NC */ extern void _gtk_action_group_emit_post_activate (GtkActionGroup *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:69:NC */ extern GType gtk_activatable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:71:NC */ extern void gtk_activatable_sync_action_properties (GtkActivatable *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:74:NC */ extern void gtk_activatable_set_related_action (GtkActivatable *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:76:NC */ extern GtkAction *gtk_activatable_get_related_action (GtkActivatable *);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:78:NC */ extern void gtk_activatable_set_use_action_appearance (GtkActivatable *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:80:NC */ extern gboolean gtk_activatable_get_use_action_appearance (GtkActivatable *);
/* /usr/include/gtk-2.0/gtk/gtkactivatable.h:83:NC */ extern void gtk_activatable_do_set_related_action (GtkActivatable *, GtkAction *);
/* /usr/include/gtk-2.0/gtk/gtkalignment.h:68:NC */ extern GType gtk_alignment_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkalignment.h:69:NC */ extern GtkWidget *gtk_alignment_new (gfloat, gfloat, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkalignment.h:73:NC */ extern void gtk_alignment_set (GtkAlignment *, gfloat, gfloat, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkalignment.h:79:NC */ extern void gtk_alignment_set_padding (GtkAlignment *, guint, guint, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkalignment.h:85:NC */ extern void gtk_alignment_get_padding (GtkAlignment *, guint *, guint *, guint *, guint *);
/* /usr/include/gtk-2.0/gtk/gtkarrow.h:66:NC */ extern GType gtk_arrow_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkarrow.h:67:NC */ extern GtkWidget *gtk_arrow_new (GtkArrowType, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkarrow.h:69:NC */ extern void gtk_arrow_set (GtkArrow *, GtkArrowType, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:72:NC */ extern GType gtk_frame_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:73:NC */ extern GtkWidget *gtk_frame_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:75:NC */ extern void gtk_frame_set_label (GtkFrame *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:77:NC */ extern const gchar *gtk_frame_get_label (GtkFrame *);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:79:NC */ extern void gtk_frame_set_label_widget (GtkFrame *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:81:NC */ extern GtkWidget *gtk_frame_get_label_widget (GtkFrame *);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:82:NC */ extern void gtk_frame_set_label_align (GtkFrame *, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:85:NC */ extern void gtk_frame_get_label_align (GtkFrame *, gfloat *, gfloat *);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:88:NC */ extern void gtk_frame_set_shadow_type (GtkFrame *, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkframe.h:90:NC */ extern GtkShadowType gtk_frame_get_shadow_type (GtkFrame *);
/* /usr/include/gtk-2.0/gtk/gtkaspectframe.h:69:NC */ extern GType gtk_aspect_frame_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkaspectframe.h:70:NC */ extern GtkWidget *gtk_aspect_frame_new (const gchar *, gfloat, gfloat, gfloat, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkaspectframe.h:75:NC */ extern void gtk_aspect_frame_set (GtkAspectFrame *, gfloat, gfloat, gfloat, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:122:NC */ extern GType gtk_assistant_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:123:NC */ extern GtkWidget *gtk_assistant_new (void);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:124:NC */ extern gint gtk_assistant_get_current_page (GtkAssistant *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:125:NC */ extern void gtk_assistant_set_current_page (GtkAssistant *, gint);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:127:NC */ extern gint gtk_assistant_get_n_pages (GtkAssistant *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:128:NC */ extern GtkWidget *gtk_assistant_get_nth_page (GtkAssistant *, gint);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:130:NC */ extern gint gtk_assistant_prepend_page (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:132:NC */ extern gint gtk_assistant_append_page (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:134:NC */ extern gint gtk_assistant_insert_page (GtkAssistant *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:137:NC */ extern void gtk_assistant_set_forward_page_func (GtkAssistant *, GtkAssistantPageFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:141:NC */ extern void gtk_assistant_set_page_type (GtkAssistant *, GtkWidget *, GtkAssistantPageType);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:144:NC */ extern GtkAssistantPageType gtk_assistant_get_page_type (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:146:NC */ extern void gtk_assistant_set_page_title (GtkAssistant *, GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:149:NC */ extern const gchar *gtk_assistant_get_page_title (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:151:NC */ extern void gtk_assistant_set_page_header_image (GtkAssistant *, GtkWidget *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:154:NC */ extern GdkPixbuf *gtk_assistant_get_page_header_image (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:156:NC */ extern void gtk_assistant_set_page_side_image (GtkAssistant *, GtkWidget *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:159:NC */ extern GdkPixbuf *gtk_assistant_get_page_side_image (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:161:NC */ extern void gtk_assistant_set_page_complete (GtkAssistant *, GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:164:NC */ extern gboolean gtk_assistant_get_page_complete (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:166:NC */ extern void gtk_assistant_add_action_widget (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:168:NC */ extern void gtk_assistant_remove_action_widget (GtkAssistant *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:171:NC */ extern void gtk_assistant_update_buttons_state (GtkAssistant *);
/* /usr/include/gtk-2.0/gtk/gtkassistant.h:172:NC */ extern void gtk_assistant_commit (GtkAssistant *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:104:NC */ extern GType gtk_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:105:NC */ extern GtkWidget *_gtk_box_new (GtkOrientation, gboolean, gint);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:109:NC */ extern void gtk_box_pack_start (GtkBox *, GtkWidget *, gboolean, gboolean, guint);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:114:NC */ extern void gtk_box_pack_end (GtkBox *, GtkWidget *, gboolean, gboolean, guint);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:121:NC */ extern void gtk_box_pack_start_defaults (GtkBox *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:123:NC */ extern void gtk_box_pack_end_defaults (GtkBox *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:127:NC */ extern void gtk_box_set_homogeneous (GtkBox *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:129:NC */ extern gboolean gtk_box_get_homogeneous (GtkBox *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:130:NC */ extern void gtk_box_set_spacing (GtkBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:132:NC */ extern gint gtk_box_get_spacing (GtkBox *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:134:NC */ extern void gtk_box_reorder_child (GtkBox *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:138:NC */ extern void gtk_box_query_child_packing (GtkBox *, GtkWidget *, gboolean *, gboolean *, guint *, GtkPackType *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:144:NC */ extern void gtk_box_set_child_packing (GtkBox *, GtkWidget *, gboolean, gboolean, guint, GtkPackType);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:152:NC */ extern void _gtk_box_set_old_defaults (GtkBox *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:153:NC */ extern gboolean _gtk_box_get_spacing_set (GtkBox *);
/* /usr/include/gtk-2.0/gtk/gtkbox.h:154:NC */ extern void _gtk_box_set_spacing_set (GtkBox *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:68:NC */ extern GType gtk_button_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:70:NC */ extern GtkButtonBoxStyle gtk_button_box_get_layout (GtkButtonBox *);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:71:NC */ extern void gtk_button_box_set_layout (GtkButtonBox *, GtkButtonBoxStyle);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:73:NC */ extern gboolean gtk_button_box_get_child_secondary (GtkButtonBox *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:75:NC */ extern void gtk_button_box_set_child_secondary (GtkButtonBox *, GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:83:NC */ extern void gtk_button_box_set_child_size (GtkButtonBox *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:86:NC */ extern void gtk_button_box_set_child_ipadding (GtkButtonBox *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:89:NC */ extern void gtk_button_box_get_child_size (GtkButtonBox *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:92:NC */ extern void gtk_button_box_get_child_ipadding (GtkButtonBox *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkbbox.h:98:NC */ extern void _gtk_button_box_child_requisition (GtkWidget *, int *, int *, int *, int *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:101:NC */ extern GtkBindingSet *gtk_binding_set_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:102:NC */ extern GtkBindingSet *gtk_binding_set_by_class (gpointer);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:103:NC */ extern GtkBindingSet *gtk_binding_set_find (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:104:NC */ extern gboolean gtk_bindings_activate (GtkObject *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:107:NC */ extern gboolean gtk_bindings_activate_event (GtkObject *, GdkEventKey *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:109:NC */ extern gboolean gtk_binding_set_activate (GtkBindingSet *, guint, GdkModifierType, GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:116:NC */ extern void gtk_binding_entry_clear (GtkBindingSet *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:119:NC */ extern guint gtk_binding_parse_binding (GScanner *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:122:NC */ extern void gtk_binding_entry_skip (GtkBindingSet *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:125:NC */ extern void gtk_binding_entry_add_signal (GtkBindingSet *, guint, GdkModifierType, const gchar *, guint, ...);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:131:NC */ extern void gtk_binding_entry_add_signall (GtkBindingSet *, guint, GdkModifierType, const gchar *, GSList *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:136:NC */ extern void gtk_binding_entry_remove (GtkBindingSet *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:140:NC */ extern void gtk_binding_set_add_path (GtkBindingSet *, GtkPathType, const gchar *, GtkPathPriorityType);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:148:NC */ extern guint _gtk_binding_parse_binding (GScanner *);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:149:NC */ extern void _gtk_binding_reset_parsed (void);
/* /usr/include/gtk-2.0/gtk/gtkbindings.h:150:NC */ extern void _gtk_binding_entry_add_signall (GtkBindingSet *, guint, GdkModifierType, const gchar *, GSList *);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:59:NC */ extern GQuark gtk_builder_error_quark (void);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:94:NC */ extern GType gtk_builder_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:95:NC */ extern GtkBuilder *gtk_builder_new (void);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:97:NC */ extern guint gtk_builder_add_from_file (GtkBuilder *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:100:NC */ extern guint gtk_builder_add_from_string (GtkBuilder *, const gchar *, gsize, GError **);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:104:NC */ extern guint gtk_builder_add_objects_from_file (GtkBuilder *, const gchar *, gchar **, GError **);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:108:NC */ extern guint gtk_builder_add_objects_from_string (GtkBuilder *, const gchar *, gsize, gchar **, GError **);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:113:NC */ extern GObject *gtk_builder_get_object (GtkBuilder *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:115:NC */ extern GSList *gtk_builder_get_objects (GtkBuilder *);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:116:NC */ extern void gtk_builder_connect_signals (GtkBuilder *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:118:NC */ extern void gtk_builder_connect_signals_full (GtkBuilder *, GtkBuilderConnectFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:121:NC */ extern void gtk_builder_set_translation_domain (GtkBuilder *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:123:NC */ extern const gchar *gtk_builder_get_translation_domain (GtkBuilder *);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:124:NC */ extern GType gtk_builder_get_type_from_name (GtkBuilder *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:127:NC */ extern gboolean gtk_builder_value_from_string (GtkBuilder *, GParamSpec *, const gchar *, GValue *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkbuilder.h:132:NC */ extern gboolean gtk_builder_value_from_string_type (GtkBuilder *, GType, const gchar *, GValue *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:136:NC */ extern GType gtk_buildable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:138:NC */ extern void gtk_buildable_set_name (GtkBuildable *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:140:NC */ extern const gchar *gtk_buildable_get_name (GtkBuildable *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:141:NC */ extern void gtk_buildable_add_child (GtkBuildable *, GtkBuilder *, GObject *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:145:NC */ extern void gtk_buildable_set_buildable_property (GtkBuildable *, GtkBuilder *, const gchar *, const GValue *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:149:NC */ extern GObject *gtk_buildable_construct_child (GtkBuildable *, GtkBuilder *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:152:NC */ extern gboolean gtk_buildable_custom_tag_start (GtkBuildable *, GtkBuilder *, GObject *, const gchar *, GMarkupParser *, gpointer *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:158:NC */ extern void gtk_buildable_custom_tag_end (GtkBuildable *, GtkBuilder *, GObject *, const gchar *, gpointer *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:163:NC */ extern void gtk_buildable_custom_finished (GtkBuildable *, GtkBuilder *, GObject *, const gchar *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:168:NC */ extern void gtk_buildable_parser_finished (GtkBuildable *, GtkBuilder *);
/* /usr/include/gtk-2.0/gtk/gtkbuildable.h:170:NC */ extern GObject *gtk_buildable_get_internal_child (GtkBuildable *, GtkBuilder *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:190:NC */ extern GType gtk_image_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:192:NC */ extern GtkWidget *gtk_image_new (void);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:193:NC */ extern GtkWidget *gtk_image_new_from_pixmap (GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:195:NC */ extern GtkWidget *gtk_image_new_from_image (GdkImage *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:197:NC */ extern GtkWidget *gtk_image_new_from_file (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:198:NC */ extern GtkWidget *gtk_image_new_from_pixbuf (GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:199:NC */ extern GtkWidget *gtk_image_new_from_stock (const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:201:NC */ extern GtkWidget *gtk_image_new_from_icon_set (GtkIconSet *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:203:NC */ extern GtkWidget *gtk_image_new_from_animation (GdkPixbufAnimation *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:204:NC */ extern GtkWidget *gtk_image_new_from_icon_name (const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:206:NC */ extern GtkWidget *gtk_image_new_from_gicon (GIcon *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:209:NC */ extern void gtk_image_clear (GtkImage *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:210:NC */ extern void gtk_image_set_from_pixmap (GtkImage *, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:213:NC */ extern void gtk_image_set_from_image (GtkImage *, GdkImage *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:216:NC */ extern void gtk_image_set_from_file (GtkImage *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:218:NC */ extern void gtk_image_set_from_pixbuf (GtkImage *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:220:NC */ extern void gtk_image_set_from_stock (GtkImage *, const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:223:NC */ extern void gtk_image_set_from_icon_set (GtkImage *, GtkIconSet *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:226:NC */ extern void gtk_image_set_from_animation (GtkImage *, GdkPixbufAnimation *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:228:NC */ extern void gtk_image_set_from_icon_name (GtkImage *, const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:231:NC */ extern void gtk_image_set_from_gicon (GtkImage *, GIcon *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:234:NC */ extern void gtk_image_set_pixel_size (GtkImage *, gint);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:237:NC */ extern GtkImageType gtk_image_get_storage_type (GtkImage *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:239:NC */ extern void gtk_image_get_pixmap (GtkImage *, GdkPixmap **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:242:NC */ extern void gtk_image_get_image (GtkImage *, GdkImage **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:245:NC */ extern GdkPixbuf *gtk_image_get_pixbuf (GtkImage *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:246:NC */ extern void gtk_image_get_stock (GtkImage *, gchar **, GtkIconSize *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:249:NC */ extern void gtk_image_get_icon_set (GtkImage *, GtkIconSet **, GtkIconSize *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:252:NC */ extern GdkPixbufAnimation *gtk_image_get_animation (GtkImage *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:253:NC */ extern void gtk_image_get_icon_name (GtkImage *, const gchar **, GtkIconSize *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:256:NC */ extern void gtk_image_get_gicon (GtkImage *, GIcon **, GtkIconSize *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:259:NC */ extern gint gtk_image_get_pixel_size (GtkImage *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:264:NC */ extern void gtk_image_set (GtkImage *, GdkImage *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkimage.h:267:NC */ extern void gtk_image_get (GtkImage *, GdkImage **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:91:NC */ extern GType gtk_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:92:NC */ extern GtkWidget *gtk_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:93:NC */ extern GtkWidget *gtk_button_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:94:NC */ extern GtkWidget *gtk_button_new_from_stock (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:95:NC */ extern GtkWidget *gtk_button_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:97:NC */ extern void gtk_button_pressed (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:98:NC */ extern void gtk_button_released (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:100:NC */ extern void gtk_button_clicked (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:102:NC */ extern void gtk_button_enter (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:103:NC */ extern void gtk_button_leave (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:106:NC */ extern void gtk_button_set_relief (GtkButton *, GtkReliefStyle);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:108:NC */ extern GtkReliefStyle gtk_button_get_relief (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:109:NC */ extern void gtk_button_set_label (GtkButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:111:NC */ extern const gchar *gtk_button_get_label (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:112:NC */ extern void gtk_button_set_use_underline (GtkButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:114:NC */ extern gboolean gtk_button_get_use_underline (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:115:NC */ extern void gtk_button_set_use_stock (GtkButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:117:NC */ extern gboolean gtk_button_get_use_stock (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:118:NC */ extern void gtk_button_set_focus_on_click (GtkButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:120:NC */ extern gboolean gtk_button_get_focus_on_click (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:121:NC */ extern void gtk_button_set_alignment (GtkButton *, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:124:NC */ extern void gtk_button_get_alignment (GtkButton *, gfloat *, gfloat *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:127:NC */ extern void gtk_button_set_image (GtkButton *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:129:NC */ extern GtkWidget *gtk_button_get_image (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:130:NC */ extern void gtk_button_set_image_position (GtkButton *, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:132:NC */ extern GtkPositionType gtk_button_get_image_position (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:134:NC */ extern GdkWindow *gtk_button_get_event_window (GtkButton *);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:136:NC */ extern void _gtk_button_set_depressed (GtkButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkbutton.h:138:NC */ extern void _gtk_button_paint (GtkButton *, const GdkRectangle *, GtkStateType, GtkShadowType, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:11:NC */ extern void gtk_marshal_BOOLEAN__VOID (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:20:NC */ extern void gtk_marshal_BOOLEAN__POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:29:NC */ extern void gtk_marshal_BOOLEAN__POINTER_POINTER_INT_INT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:38:NC */ extern void gtk_marshal_BOOLEAN__POINTER_INT_INT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:47:NC */ extern void gtk_marshal_BOOLEAN__POINTER_INT_INT_UINT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:56:NC */ extern void gtk_marshal_BOOLEAN__POINTER_STRING_STRING_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:65:NC */ extern void gtk_marshal_ENUM__ENUM (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:73:NC */ extern void gtk_marshal_INT__POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:81:NC */ extern void gtk_marshal_INT__POINTER_CHAR_CHAR (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:101:NC */ extern void gtk_marshal_VOID__ENUM_FLOAT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:110:NC */ extern void gtk_marshal_VOID__ENUM_FLOAT_BOOLEAN (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:123:NC */ extern void gtk_marshal_VOID__INT_INT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:132:NC */ extern void gtk_marshal_VOID__INT_INT_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:153:NC */ extern void gtk_marshal_VOID__POINTER_INT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:162:NC */ extern void gtk_marshal_VOID__POINTER_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:171:NC */ extern void gtk_marshal_VOID__POINTER_POINTER_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:180:NC */ extern void gtk_marshal_VOID__POINTER_STRING_STRING (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:189:NC */ extern void gtk_marshal_VOID__POINTER_UINT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:198:NC */ extern void gtk_marshal_VOID__POINTER_UINT_ENUM (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:207:NC */ extern void gtk_marshal_VOID__POINTER_POINTER_UINT_UINT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:216:NC */ extern void gtk_marshal_VOID__POINTER_INT_INT_POINTER_UINT_UINT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:225:NC */ extern void gtk_marshal_VOID__POINTER_UINT_UINT (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:240:NC */ extern void gtk_marshal_VOID__STRING_INT_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:253:NC */ extern void gtk_marshal_VOID__UINT_POINTER_UINT_ENUM_ENUM_POINTER (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:262:NC */ extern void gtk_marshal_VOID__UINT_POINTER_UINT_UINT_ENUM (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmarshal.h:271:NC */ extern void gtk_marshal_VOID__UINT_STRING (GClosure *, GValue *, guint, const GValue *, gpointer, gpointer);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:92:NC */ extern guint gtk_signal_newv (const gchar *, GtkSignalRunType, GType, guint, GSignalCMarshaller, GType, guint, GType *);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:100:NC */ extern guint gtk_signal_new (const gchar *, GtkSignalRunType, GType, guint, GSignalCMarshaller, GType, guint, ...);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:108:NC */ extern void gtk_signal_emit_stop_by_name (GtkObject *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:110:NC */ extern void gtk_signal_connect_object_while_alive (GtkObject *, const gchar *, GCallback, GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:114:NC */ extern void gtk_signal_connect_while_alive (GtkObject *, const gchar *, GCallback, gpointer, GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:119:NC */ extern gulong gtk_signal_connect_full (GtkObject *, const gchar *, GCallback, GtkCallbackMarshal, gpointer, GDestroyNotify, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:127:NC */ extern void gtk_signal_emitv (GtkObject *, guint, GtkArg *);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:130:NC */ extern void gtk_signal_emit (GtkObject *, guint, ...);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:133:NC */ extern void gtk_signal_emit_by_name (GtkObject *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:136:NC */ extern void gtk_signal_emitv_by_name (GtkObject *, const gchar *, GtkArg *);
/* /usr/include/gtk-2.0/gtk/gtksignal.h:139:NC */ extern void gtk_signal_compat_matched (GtkObject *, GCallback, gpointer, GSignalMatchType, guint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:159:NC */ extern GType gtk_calendar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:160:NC */ extern GtkWidget *gtk_calendar_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:162:NC */ extern gboolean gtk_calendar_select_month (GtkCalendar *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:165:NC */ extern void gtk_calendar_select_day (GtkCalendar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:168:NC */ extern gboolean gtk_calendar_mark_day (GtkCalendar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:170:NC */ extern gboolean gtk_calendar_unmark_day (GtkCalendar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:172:NC */ extern void gtk_calendar_clear_marks (GtkCalendar *);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:175:NC */ extern void gtk_calendar_set_display_options (GtkCalendar *, GtkCalendarDisplayOptions);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:178:NC */ extern GtkCalendarDisplayOptions gtk_calendar_get_display_options (GtkCalendar *);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:180:NC */ extern void gtk_calendar_display_options (GtkCalendar *, GtkCalendarDisplayOptions);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:184:NC */ extern void gtk_calendar_get_date (GtkCalendar *, guint *, guint *, guint *);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:189:NC */ extern void gtk_calendar_set_detail_func (GtkCalendar *, GtkCalendarDetailFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:194:NC */ extern void gtk_calendar_set_detail_width_chars (GtkCalendar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:196:NC */ extern void gtk_calendar_set_detail_height_rows (GtkCalendar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:199:NC */ extern gint gtk_calendar_get_detail_width_chars (GtkCalendar *);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:200:NC */ extern gint gtk_calendar_get_detail_height_rows (GtkCalendar *);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:203:NC */ extern void gtk_calendar_freeze (GtkCalendar *);
/* /usr/include/gtk-2.0/gtk/gtkcalendar.h:204:NC */ extern void gtk_calendar_thaw (GtkCalendar *);
/* /usr/include/gtk-2.0/gtk/gtkcelleditable.h:54:NC */ extern GType gtk_cell_editable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcelleditable.h:56:NC */ extern void gtk_cell_editable_start_editing (GtkCellEditable *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkcelleditable.h:58:NC */ extern void gtk_cell_editable_editing_done (GtkCellEditable *);
/* /usr/include/gtk-2.0/gtk/gtkcelleditable.h:59:NC */ extern void gtk_cell_editable_remove_widget (GtkCellEditable *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:125:NC */ extern GType gtk_cell_renderer_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:127:NC */ extern void gtk_cell_renderer_get_size (GtkCellRenderer *, GtkWidget *, const GdkRectangle *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:134:NC */ extern void gtk_cell_renderer_render (GtkCellRenderer *, GdkWindow *, GtkWidget *, const GdkRectangle *, const GdkRectangle *, const GdkRectangle *, GtkCellRendererState);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:141:NC */ extern gboolean gtk_cell_renderer_activate (GtkCellRenderer *, GdkEvent *, GtkWidget *, const gchar *, const GdkRectangle *, const GdkRectangle *, GtkCellRendererState);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:148:NC */ extern GtkCellEditable *gtk_cell_renderer_start_editing (GtkCellRenderer *, GdkEvent *, GtkWidget *, const gchar *, const GdkRectangle *, const GdkRectangle *, GtkCellRendererState);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:156:NC */ extern void gtk_cell_renderer_set_fixed_size (GtkCellRenderer *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:159:NC */ extern void gtk_cell_renderer_get_fixed_size (GtkCellRenderer *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:163:NC */ extern void gtk_cell_renderer_set_alignment (GtkCellRenderer *, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:166:NC */ extern void gtk_cell_renderer_get_alignment (GtkCellRenderer *, gfloat *, gfloat *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:170:NC */ extern void gtk_cell_renderer_set_padding (GtkCellRenderer *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:173:NC */ extern void gtk_cell_renderer_get_padding (GtkCellRenderer *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:177:NC */ extern void gtk_cell_renderer_set_visible (GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:179:NC */ extern gboolean gtk_cell_renderer_get_visible (GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:181:NC */ extern void gtk_cell_renderer_set_sensitive (GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:183:NC */ extern gboolean gtk_cell_renderer_get_sensitive (GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:187:NC */ extern void gtk_cell_renderer_editing_canceled (GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderer.h:189:NC */ extern void gtk_cell_renderer_stop_editing (GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:125:NC */ extern GtkTreePath *gtk_tree_path_new (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:126:NC */ extern GtkTreePath *gtk_tree_path_new_from_string (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:127:NC */ extern GtkTreePath *gtk_tree_path_new_from_indices (gint, ...);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:129:NC */ extern gchar *gtk_tree_path_to_string (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:130:NC */ extern GtkTreePath *gtk_tree_path_new_first (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:131:NC */ extern void gtk_tree_path_append_index (GtkTreePath *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:133:NC */ extern void gtk_tree_path_prepend_index (GtkTreePath *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:135:NC */ extern gint gtk_tree_path_get_depth (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:136:NC */ extern gint *gtk_tree_path_get_indices (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:137:NC */ extern gint *gtk_tree_path_get_indices_with_depth (GtkTreePath *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:139:NC */ extern void gtk_tree_path_free (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:140:NC */ extern GtkTreePath *gtk_tree_path_copy (const GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:141:NC */ extern GType gtk_tree_path_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:142:NC */ extern gint gtk_tree_path_compare (const GtkTreePath *, const GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:144:NC */ extern void gtk_tree_path_next (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:145:NC */ extern gboolean gtk_tree_path_prev (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:146:NC */ extern gboolean gtk_tree_path_up (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:147:NC */ extern void gtk_tree_path_down (GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:149:NC */ extern gboolean gtk_tree_path_is_ancestor (GtkTreePath *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:151:NC */ extern gboolean gtk_tree_path_is_descendant (GtkTreePath *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:163:NC */ extern GType gtk_tree_row_reference_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:164:NC */ extern GtkTreeRowReference *gtk_tree_row_reference_new (GtkTreeModel *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:166:NC */ extern GtkTreeRowReference *gtk_tree_row_reference_new_proxy (GObject *, GtkTreeModel *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:169:NC */ extern GtkTreePath *gtk_tree_row_reference_get_path (GtkTreeRowReference *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:170:NC */ extern GtkTreeModel *gtk_tree_row_reference_get_model (GtkTreeRowReference *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:171:NC */ extern gboolean gtk_tree_row_reference_valid (GtkTreeRowReference *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:172:NC */ extern GtkTreeRowReference *gtk_tree_row_reference_copy (GtkTreeRowReference *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:173:NC */ extern void gtk_tree_row_reference_free (GtkTreeRowReference *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:176:NC */ extern void gtk_tree_row_reference_inserted (GObject *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:178:NC */ extern void gtk_tree_row_reference_deleted (GObject *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:180:NC */ extern void gtk_tree_row_reference_reordered (GObject *, GtkTreePath *, GtkTreeIter *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:186:NC */ extern GtkTreeIter *gtk_tree_iter_copy (GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:187:NC */ extern void gtk_tree_iter_free (GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:188:NC */ extern GType gtk_tree_iter_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:190:NC */ extern GType gtk_tree_model_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:191:NC */ extern GtkTreeModelFlags gtk_tree_model_get_flags (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:192:NC */ extern gint gtk_tree_model_get_n_columns (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:193:NC */ extern GType gtk_tree_model_get_column_type (GtkTreeModel *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:198:NC */ extern gboolean gtk_tree_model_get_iter (GtkTreeModel *, GtkTreeIter *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:201:NC */ extern gboolean gtk_tree_model_get_iter_from_string (GtkTreeModel *, GtkTreeIter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:204:NC */ extern gchar *gtk_tree_model_get_string_from_iter (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:206:NC */ extern gboolean gtk_tree_model_get_iter_first (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:208:NC */ extern GtkTreePath *gtk_tree_model_get_path (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:210:NC */ extern void gtk_tree_model_get_value (GtkTreeModel *, GtkTreeIter *, gint, GValue *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:214:NC */ extern gboolean gtk_tree_model_iter_next (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:216:NC */ extern gboolean gtk_tree_model_iter_children (GtkTreeModel *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:219:NC */ extern gboolean gtk_tree_model_iter_has_child (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:221:NC */ extern gint gtk_tree_model_iter_n_children (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:223:NC */ extern gboolean gtk_tree_model_iter_nth_child (GtkTreeModel *, GtkTreeIter *, GtkTreeIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:227:NC */ extern gboolean gtk_tree_model_iter_parent (GtkTreeModel *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:230:NC */ extern void gtk_tree_model_ref_node (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:232:NC */ extern void gtk_tree_model_unref_node (GtkTreeModel *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:234:NC */ extern void gtk_tree_model_get (GtkTreeModel *, GtkTreeIter *, ...);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:237:NC */ extern void gtk_tree_model_get_valist (GtkTreeModel *, GtkTreeIter *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:242:NC */ extern void gtk_tree_model_foreach (GtkTreeModel *, GtkTreeModelForeachFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:252:NC */ extern void gtk_tree_model_row_changed (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:255:NC */ extern void gtk_tree_model_row_inserted (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:258:NC */ extern void gtk_tree_model_row_has_child_toggled (GtkTreeModel *, GtkTreePath *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:261:NC */ extern void gtk_tree_model_row_deleted (GtkTreeModel *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodel.h:263:NC */ extern void gtk_tree_model_rows_reordered (GtkTreeModel *, GtkTreePath *, GtkTreeIter *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:81:NC */ extern GType gtk_tree_sortable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:83:NC */ extern void gtk_tree_sortable_sort_column_changed (GtkTreeSortable *);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:84:NC */ extern gboolean gtk_tree_sortable_get_sort_column_id (GtkTreeSortable *, gint *, GtkSortType *);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:87:NC */ extern void gtk_tree_sortable_set_sort_column_id (GtkTreeSortable *, gint, GtkSortType);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:90:NC */ extern void gtk_tree_sortable_set_sort_func (GtkTreeSortable *, gint, GtkTreeIterCompareFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:95:NC */ extern void gtk_tree_sortable_set_default_sort_func (GtkTreeSortable *, GtkTreeIterCompareFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreesortable.h:99:NC */ extern gboolean gtk_tree_sortable_has_default_sort_func (GtkTreeSortable *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:126:NC */ extern GType gtk_tree_view_column_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:127:NC */ extern GtkTreeViewColumn *gtk_tree_view_column_new (void);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:128:NC */ extern GtkTreeViewColumn *gtk_tree_view_column_new_with_attributes (const gchar *, GtkCellRenderer *, ...);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:131:NC */ extern void gtk_tree_view_column_pack_start (GtkTreeViewColumn *, GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:134:NC */ extern void gtk_tree_view_column_pack_end (GtkTreeViewColumn *, GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:137:NC */ extern void gtk_tree_view_column_clear (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:139:NC */ extern GList *gtk_tree_view_column_get_cell_renderers (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:141:NC */ extern void gtk_tree_view_column_add_attribute (GtkTreeViewColumn *, GtkCellRenderer *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:145:NC */ extern void gtk_tree_view_column_set_attributes (GtkTreeViewColumn *, GtkCellRenderer *, ...);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:148:NC */ extern void gtk_tree_view_column_set_cell_data_func (GtkTreeViewColumn *, GtkCellRenderer *, GtkTreeCellDataFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:153:NC */ extern void gtk_tree_view_column_clear_attributes (GtkTreeViewColumn *, GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:155:NC */ extern void gtk_tree_view_column_set_spacing (GtkTreeViewColumn *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:157:NC */ extern gint gtk_tree_view_column_get_spacing (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:158:NC */ extern void gtk_tree_view_column_set_visible (GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:160:NC */ extern gboolean gtk_tree_view_column_get_visible (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:161:NC */ extern void gtk_tree_view_column_set_resizable (GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:163:NC */ extern gboolean gtk_tree_view_column_get_resizable (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:164:NC */ extern void gtk_tree_view_column_set_sizing (GtkTreeViewColumn *, GtkTreeViewColumnSizing);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:166:NC */ extern GtkTreeViewColumnSizing gtk_tree_view_column_get_sizing (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:167:NC */ extern gint gtk_tree_view_column_get_width (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:168:NC */ extern gint gtk_tree_view_column_get_fixed_width (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:169:NC */ extern void gtk_tree_view_column_set_fixed_width (GtkTreeViewColumn *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:171:NC */ extern void gtk_tree_view_column_set_min_width (GtkTreeViewColumn *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:173:NC */ extern gint gtk_tree_view_column_get_min_width (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:174:NC */ extern void gtk_tree_view_column_set_max_width (GtkTreeViewColumn *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:176:NC */ extern gint gtk_tree_view_column_get_max_width (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:177:NC */ extern void gtk_tree_view_column_clicked (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:183:NC */ extern void gtk_tree_view_column_set_title (GtkTreeViewColumn *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:185:NC */ extern const gchar *gtk_tree_view_column_get_title (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:186:NC */ extern void gtk_tree_view_column_set_expand (GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:188:NC */ extern gboolean gtk_tree_view_column_get_expand (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:189:NC */ extern void gtk_tree_view_column_set_clickable (GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:191:NC */ extern gboolean gtk_tree_view_column_get_clickable (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:192:NC */ extern void gtk_tree_view_column_set_widget (GtkTreeViewColumn *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:194:NC */ extern GtkWidget *gtk_tree_view_column_get_widget (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:195:NC */ extern void gtk_tree_view_column_set_alignment (GtkTreeViewColumn *, gfloat);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:197:NC */ extern gfloat gtk_tree_view_column_get_alignment (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:198:NC */ extern void gtk_tree_view_column_set_reorderable (GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:200:NC */ extern gboolean gtk_tree_view_column_get_reorderable (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:207:NC */ extern void gtk_tree_view_column_set_sort_column_id (GtkTreeViewColumn *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:209:NC */ extern gint gtk_tree_view_column_get_sort_column_id (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:210:NC */ extern void gtk_tree_view_column_set_sort_indicator (GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:212:NC */ extern gboolean gtk_tree_view_column_get_sort_indicator (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:213:NC */ extern void gtk_tree_view_column_set_sort_order (GtkTreeViewColumn *, GtkSortType);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:215:NC */ extern GtkSortType gtk_tree_view_column_get_sort_order (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:220:NC */ extern void gtk_tree_view_column_cell_set_cell_data (GtkTreeViewColumn *, GtkTreeModel *, GtkTreeIter *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:225:NC */ extern void gtk_tree_view_column_cell_get_size (GtkTreeViewColumn *, const GdkRectangle *, gint *, gint *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:231:NC */ extern gboolean gtk_tree_view_column_cell_is_visible (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:232:NC */ extern void gtk_tree_view_column_focus_cell (GtkTreeViewColumn *, GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:234:NC */ extern gboolean gtk_tree_view_column_cell_get_position (GtkTreeViewColumn *, GtkCellRenderer *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:238:NC */ extern void gtk_tree_view_column_queue_resize (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeviewcolumn.h:239:NC */ extern GtkWidget *gtk_tree_view_column_get_tree_view (GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:78:NC */ extern GType gtk_cell_layout_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:79:NC */ extern void gtk_cell_layout_pack_start (GtkCellLayout *, GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:82:NC */ extern void gtk_cell_layout_pack_end (GtkCellLayout *, GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:85:NC */ extern GList *gtk_cell_layout_get_cells (GtkCellLayout *);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:86:NC */ extern void gtk_cell_layout_clear (GtkCellLayout *);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:87:NC */ extern void gtk_cell_layout_set_attributes (GtkCellLayout *, GtkCellRenderer *, ...);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:90:NC */ extern void gtk_cell_layout_add_attribute (GtkCellLayout *, GtkCellRenderer *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:94:NC */ extern void gtk_cell_layout_set_cell_data_func (GtkCellLayout *, GtkCellRenderer *, GtkCellLayoutDataFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:99:NC */ extern void gtk_cell_layout_clear_attributes (GtkCellLayout *, GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:101:NC */ extern void gtk_cell_layout_reorder (GtkCellLayout *, GtkCellRenderer *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:104:NC */ extern gboolean _gtk_cell_layout_buildable_custom_tag_start (GtkBuildable *, GtkBuilder *, GObject *, const gchar *, GMarkupParser *, gpointer *);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:110:NC */ extern void _gtk_cell_layout_buildable_custom_tag_end (GtkBuildable *, GtkBuilder *, GObject *, const gchar *, gpointer *);
/* /usr/include/gtk-2.0/gtk/gtkcelllayout.h:115:NC */ extern void _gtk_cell_layout_buildable_add_child (GtkBuildable *, GtkBuilder *, GObject *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertext.h:96:NC */ extern GType gtk_cell_renderer_text_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertext.h:97:NC */ extern GtkCellRenderer *gtk_cell_renderer_text_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertext.h:99:NC */ extern void gtk_cell_renderer_text_set_fixed_height_from_font (GtkCellRendererText *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcellrendereraccel.h:85:NC */ extern GType gtk_cell_renderer_accel_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendereraccel.h:86:NC */ extern GtkCellRenderer *gtk_cell_renderer_accel_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderercombo.h:59:NC */ extern GType gtk_cell_renderer_combo_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderercombo.h:60:NC */ extern GtkCellRenderer *gtk_cell_renderer_combo_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererpixbuf.h:64:NC */ extern GType gtk_cell_renderer_pixbuf_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererpixbuf.h:65:NC */ extern GtkCellRenderer *gtk_cell_renderer_pixbuf_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererprogress.h:69:NC */ extern GType gtk_cell_renderer_progress_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererprogress.h:70:NC */ extern GtkCellRenderer *gtk_cell_renderer_progress_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererspin.h:52:NC */ extern GType gtk_cell_renderer_spin_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererspin.h:53:NC */ extern GtkCellRenderer *gtk_cell_renderer_spin_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererspinner.h:62:NC */ extern GType gtk_cell_renderer_spinner_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrendererspinner.h:63:NC */ extern GtkCellRenderer *gtk_cell_renderer_spinner_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:67:NC */ extern GType gtk_cell_renderer_toggle_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:68:NC */ extern GtkCellRenderer *gtk_cell_renderer_toggle_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:70:NC */ extern gboolean gtk_cell_renderer_toggle_get_radio (GtkCellRendererToggle *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:71:NC */ extern void gtk_cell_renderer_toggle_set_radio (GtkCellRendererToggle *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:74:NC */ extern gboolean gtk_cell_renderer_toggle_get_active (GtkCellRendererToggle *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:75:NC */ extern void gtk_cell_renderer_toggle_set_active (GtkCellRendererToggle *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:78:NC */ extern gboolean gtk_cell_renderer_toggle_get_activatable (GtkCellRendererToggle *);
/* /usr/include/gtk-2.0/gtk/gtkcellrenderertoggle.h:79:NC */ extern void gtk_cell_renderer_toggle_set_activatable (GtkCellRendererToggle *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:57:NC */ extern GType gtk_cell_view_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:58:NC */ extern GtkWidget *gtk_cell_view_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:59:NC */ extern GtkWidget *gtk_cell_view_new_with_text (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:60:NC */ extern GtkWidget *gtk_cell_view_new_with_markup (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:61:NC */ extern GtkWidget *gtk_cell_view_new_with_pixbuf (GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:63:NC */ extern void gtk_cell_view_set_model (GtkCellView *, GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:65:NC */ extern GtkTreeModel *gtk_cell_view_get_model (GtkCellView *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:66:NC */ extern void gtk_cell_view_set_displayed_row (GtkCellView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:68:NC */ extern GtkTreePath *gtk_cell_view_get_displayed_row (GtkCellView *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:69:NC */ extern gboolean gtk_cell_view_get_size_of_row (GtkCellView *, GtkTreePath *, GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:73:NC */ extern void gtk_cell_view_set_background_color (GtkCellView *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcellview.h:76:NC */ extern GList *gtk_cell_view_get_cell_renderers (GtkCellView *);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:74:NC */ extern GType gtk_toggle_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:76:NC */ extern GtkWidget *gtk_toggle_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:77:NC */ extern GtkWidget *gtk_toggle_button_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:78:NC */ extern GtkWidget *gtk_toggle_button_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:79:NC */ extern void gtk_toggle_button_set_mode (GtkToggleButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:81:NC */ extern gboolean gtk_toggle_button_get_mode (GtkToggleButton *);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:82:NC */ extern void gtk_toggle_button_set_active (GtkToggleButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:84:NC */ extern gboolean gtk_toggle_button_get_active (GtkToggleButton *);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:85:NC */ extern void gtk_toggle_button_toggled (GtkToggleButton *);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:86:NC */ extern void gtk_toggle_button_set_inconsistent (GtkToggleButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktogglebutton.h:88:NC */ extern gboolean gtk_toggle_button_get_inconsistent (GtkToggleButton *);
/* /usr/include/gtk-2.0/gtk/gtkcheckbutton.h:71:NC */ extern GType gtk_check_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcheckbutton.h:72:NC */ extern GtkWidget *gtk_check_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcheckbutton.h:73:NC */ extern GtkWidget *gtk_check_button_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcheckbutton.h:74:NC */ extern GtkWidget *gtk_check_button_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcheckbutton.h:76:NC */ extern void _gtk_check_button_get_props (GtkCheckButton *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkitem.h:72:NC */ extern GType gtk_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkitem.h:74:NC */ extern void gtk_item_select (GtkItem *);
/* /usr/include/gtk-2.0/gtk/gtkitem.h:75:NC */ extern void gtk_item_deselect (GtkItem *);
/* /usr/include/gtk-2.0/gtk/gtkitem.h:76:NC */ extern void gtk_item_toggle (GtkItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:99:NC */ extern GType gtk_menu_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:100:NC */ extern GtkWidget *gtk_menu_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:101:NC */ extern GtkWidget *gtk_menu_item_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:102:NC */ extern GtkWidget *gtk_menu_item_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:103:NC */ extern void gtk_menu_item_set_submenu (GtkMenuItem *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:105:NC */ extern GtkWidget *gtk_menu_item_get_submenu (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:106:NC */ extern void gtk_menu_item_select (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:107:NC */ extern void gtk_menu_item_deselect (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:108:NC */ extern void gtk_menu_item_activate (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:109:NC */ extern void gtk_menu_item_toggle_size_request (GtkMenuItem *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:111:NC */ extern void gtk_menu_item_toggle_size_allocate (GtkMenuItem *, gint);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:113:NC */ extern void gtk_menu_item_set_right_justified (GtkMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:115:NC */ extern gboolean gtk_menu_item_get_right_justified (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:116:NC */ extern void gtk_menu_item_set_accel_path (GtkMenuItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:118:NC */ extern const gchar *gtk_menu_item_get_accel_path (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:120:NC */ extern void gtk_menu_item_set_label (GtkMenuItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:122:NC */ extern const gchar *gtk_menu_item_get_label (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:124:NC */ extern void gtk_menu_item_set_use_underline (GtkMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:126:NC */ extern gboolean gtk_menu_item_get_use_underline (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:129:NC */ extern void _gtk_menu_item_refresh_accel_path (GtkMenuItem *, const gchar *, GtkAccelGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:133:NC */ extern gboolean _gtk_menu_item_is_selectable (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:134:NC */ extern void _gtk_menu_item_popup_submenu (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:136:NC */ extern void _gtk_menu_item_popdown_submenu (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenuitem.h:139:NC */ extern void gtk_menu_item_remove_submenu (GtkMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:77:NC */ extern GType gtk_check_menu_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:79:NC */ extern GtkWidget *gtk_check_menu_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:80:NC */ extern GtkWidget *gtk_check_menu_item_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:81:NC */ extern GtkWidget *gtk_check_menu_item_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:82:NC */ extern void gtk_check_menu_item_set_active (GtkCheckMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:84:NC */ extern gboolean gtk_check_menu_item_get_active (GtkCheckMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:85:NC */ extern void gtk_check_menu_item_toggled (GtkCheckMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:86:NC */ extern void gtk_check_menu_item_set_inconsistent (GtkCheckMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:88:NC */ extern gboolean gtk_check_menu_item_get_inconsistent (GtkCheckMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:89:NC */ extern void gtk_check_menu_item_set_draw_as_radio (GtkCheckMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:91:NC */ extern gboolean gtk_check_menu_item_get_draw_as_radio (GtkCheckMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkcheckmenuitem.h:95:NC */ extern void gtk_check_menu_item_set_show_toggle (GtkCheckMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxy.h:62:NC */ extern GType ubuntu_menu_proxy_get_type (void);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxy.h:63:NC */ extern UbuntuMenuProxy *ubuntu_menu_proxy_get (void);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxy.h:64:NC */ extern void ubuntu_menu_proxy_insert (UbuntuMenuProxy *, GtkWidget *, GtkWidget *, guint);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxy.h:68:NC */ extern gboolean ubuntu_menu_proxy_show_local (UbuntuMenuProxy *);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxy.h:69:NC */ extern void ubuntu_menu_proxy_activate_menu (UbuntuMenuProxy *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxymodule.h:63:NC */ extern GType ubuntu_menu_proxy_module_get_type (void);
/* /usr/include/gtk-2.0/gtk/ubuntumenuproxymodule.h:65:NC */ extern UbuntuMenuProxyModule *ubuntu_menu_proxy_module_get (void);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:156:NC */ extern GType gtk_text_tag_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:157:NC */ extern GtkTextTag *gtk_text_tag_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:158:NC */ extern gint gtk_text_tag_get_priority (GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:159:NC */ extern void gtk_text_tag_set_priority (GtkTextTag *, gint);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:161:NC */ extern gboolean gtk_text_tag_event (GtkTextTag *, GObject *, GdkEvent *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:276:NC */ extern GtkTextAttributes *gtk_text_attributes_new (void);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:277:NC */ extern GtkTextAttributes *gtk_text_attributes_copy (GtkTextAttributes *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:278:NC */ extern void gtk_text_attributes_copy_values (GtkTextAttributes *, GtkTextAttributes *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:280:NC */ extern void gtk_text_attributes_unref (GtkTextAttributes *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:281:NC */ extern GtkTextAttributes *gtk_text_attributes_ref (GtkTextAttributes *);
/* /usr/include/gtk-2.0/gtk/gtktexttag.h:283:NC */ extern GType gtk_text_attributes_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktextchild.h:73:NC */ extern GType gtk_text_child_anchor_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktextchild.h:75:NC */ extern GtkTextChildAnchor *gtk_text_child_anchor_new (void);
/* /usr/include/gtk-2.0/gtk/gtktextchild.h:77:NC */ extern GList *gtk_text_child_anchor_get_widgets (GtkTextChildAnchor *);
/* /usr/include/gtk-2.0/gtk/gtktextchild.h:78:NC */ extern gboolean gtk_text_child_anchor_get_deleted (GtkTextChildAnchor *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:81:NC */ extern GtkTextBuffer *gtk_text_iter_get_buffer (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:87:NC */ extern GtkTextIter *gtk_text_iter_copy (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:88:NC */ extern void gtk_text_iter_free (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:90:NC */ extern GType gtk_text_iter_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:96:NC */ extern gint gtk_text_iter_get_offset (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:97:NC */ extern gint gtk_text_iter_get_line (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:98:NC */ extern gint gtk_text_iter_get_line_offset (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:99:NC */ extern gint gtk_text_iter_get_line_index (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:101:NC */ extern gint gtk_text_iter_get_visible_line_offset (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:102:NC */ extern gint gtk_text_iter_get_visible_line_index (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:108:NC */ extern gunichar gtk_text_iter_get_char (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:113:NC */ extern gchar *gtk_text_iter_get_slice (const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:117:NC */ extern gchar *gtk_text_iter_get_text (const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:120:NC */ extern gchar *gtk_text_iter_get_visible_slice (const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:122:NC */ extern gchar *gtk_text_iter_get_visible_text (const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:125:NC */ extern GdkPixbuf *gtk_text_iter_get_pixbuf (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:126:NC */ extern GSList *gtk_text_iter_get_marks (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:128:NC */ extern GtkTextChildAnchor *gtk_text_iter_get_child_anchor (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:133:NC */ extern GSList *gtk_text_iter_get_toggled_tags (const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:136:NC */ extern gboolean gtk_text_iter_begins_tag (const GtkTextIter *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:139:NC */ extern gboolean gtk_text_iter_ends_tag (const GtkTextIter *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:142:NC */ extern gboolean gtk_text_iter_toggles_tag (const GtkTextIter *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:145:NC */ extern gboolean gtk_text_iter_has_tag (const GtkTextIter *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:147:NC */ extern GSList *gtk_text_iter_get_tags (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:149:NC */ extern gboolean gtk_text_iter_editable (const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:151:NC */ extern gboolean gtk_text_iter_can_insert (const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:154:NC */ extern gboolean gtk_text_iter_starts_word (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:155:NC */ extern gboolean gtk_text_iter_ends_word (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:156:NC */ extern gboolean gtk_text_iter_inside_word (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:157:NC */ extern gboolean gtk_text_iter_starts_sentence (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:158:NC */ extern gboolean gtk_text_iter_ends_sentence (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:159:NC */ extern gboolean gtk_text_iter_inside_sentence (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:160:NC */ extern gboolean gtk_text_iter_starts_line (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:161:NC */ extern gboolean gtk_text_iter_ends_line (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:162:NC */ extern gboolean gtk_text_iter_is_cursor_position (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:164:NC */ extern gint gtk_text_iter_get_chars_in_line (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:165:NC */ extern gint gtk_text_iter_get_bytes_in_line (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:167:NC */ extern gboolean gtk_text_iter_get_attributes (const GtkTextIter *, GtkTextAttributes *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:169:NC */ extern PangoLanguage *gtk_text_iter_get_language (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:170:NC */ extern gboolean gtk_text_iter_is_end (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:171:NC */ extern gboolean gtk_text_iter_is_start (const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:177:NC */ extern gboolean gtk_text_iter_forward_char (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:178:NC */ extern gboolean gtk_text_iter_backward_char (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:179:NC */ extern gboolean gtk_text_iter_forward_chars (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:181:NC */ extern gboolean gtk_text_iter_backward_chars (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:183:NC */ extern gboolean gtk_text_iter_forward_line (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:184:NC */ extern gboolean gtk_text_iter_backward_line (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:185:NC */ extern gboolean gtk_text_iter_forward_lines (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:187:NC */ extern gboolean gtk_text_iter_backward_lines (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:189:NC */ extern gboolean gtk_text_iter_forward_word_end (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:190:NC */ extern gboolean gtk_text_iter_backward_word_start (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:191:NC */ extern gboolean gtk_text_iter_forward_word_ends (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:193:NC */ extern gboolean gtk_text_iter_backward_word_starts (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:196:NC */ extern gboolean gtk_text_iter_forward_visible_line (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:197:NC */ extern gboolean gtk_text_iter_backward_visible_line (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:198:NC */ extern gboolean gtk_text_iter_forward_visible_lines (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:200:NC */ extern gboolean gtk_text_iter_backward_visible_lines (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:203:NC */ extern gboolean gtk_text_iter_forward_visible_word_end (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:204:NC */ extern gboolean gtk_text_iter_backward_visible_word_start (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:205:NC */ extern gboolean gtk_text_iter_forward_visible_word_ends (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:207:NC */ extern gboolean gtk_text_iter_backward_visible_word_starts (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:210:NC */ extern gboolean gtk_text_iter_forward_sentence_end (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:211:NC */ extern gboolean gtk_text_iter_backward_sentence_start (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:212:NC */ extern gboolean gtk_text_iter_forward_sentence_ends (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:214:NC */ extern gboolean gtk_text_iter_backward_sentence_starts (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:221:NC */ extern gboolean gtk_text_iter_forward_cursor_position (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:222:NC */ extern gboolean gtk_text_iter_backward_cursor_position (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:223:NC */ extern gboolean gtk_text_iter_forward_cursor_positions (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:225:NC */ extern gboolean gtk_text_iter_backward_cursor_positions (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:228:NC */ extern gboolean gtk_text_iter_forward_visible_cursor_position (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:229:NC */ extern gboolean gtk_text_iter_backward_visible_cursor_position (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:230:NC */ extern gboolean gtk_text_iter_forward_visible_cursor_positions (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:232:NC */ extern gboolean gtk_text_iter_backward_visible_cursor_positions (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:236:NC */ extern void gtk_text_iter_set_offset (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:238:NC */ extern void gtk_text_iter_set_line (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:240:NC */ extern void gtk_text_iter_set_line_offset (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:242:NC */ extern void gtk_text_iter_set_line_index (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:244:NC */ extern void gtk_text_iter_forward_to_end (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:245:NC */ extern gboolean gtk_text_iter_forward_to_line_end (GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:247:NC */ extern void gtk_text_iter_set_visible_line_offset (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:249:NC */ extern void gtk_text_iter_set_visible_line_index (GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:256:NC */ extern gboolean gtk_text_iter_forward_to_tag_toggle (GtkTextIter *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:259:NC */ extern gboolean gtk_text_iter_backward_to_tag_toggle (GtkTextIter *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:264:NC */ extern gboolean gtk_text_iter_forward_find_char (GtkTextIter *, GtkTextCharPredicate, gpointer, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:268:NC */ extern gboolean gtk_text_iter_backward_find_char (GtkTextIter *, GtkTextCharPredicate, gpointer, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:273:NC */ extern gboolean gtk_text_iter_forward_search (const GtkTextIter *, const gchar *, GtkTextSearchFlags, GtkTextIter *, GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:280:NC */ extern gboolean gtk_text_iter_backward_search (const GtkTextIter *, const gchar *, GtkTextSearchFlags, GtkTextIter *, GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:291:NC */ extern gboolean gtk_text_iter_equal (const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:293:NC */ extern gint gtk_text_iter_compare (const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:295:NC */ extern gboolean gtk_text_iter_in_range (const GtkTextIter *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextiter.h:300:NC */ extern void gtk_text_iter_order (GtkTextIter *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:93:NC */ extern GtkTargetList *gtk_target_list_new (const GtkTargetEntry *, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:95:NC */ extern GtkTargetList *gtk_target_list_ref (GtkTargetList *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:96:NC */ extern void gtk_target_list_unref (GtkTargetList *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:97:NC */ extern void gtk_target_list_add (GtkTargetList *, GdkAtom, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:101:NC */ extern void gtk_target_list_add_text_targets (GtkTargetList *, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:103:NC */ extern void gtk_target_list_add_rich_text_targets (GtkTargetList *, guint, gboolean, GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:107:NC */ extern void gtk_target_list_add_image_targets (GtkTargetList *, guint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:110:NC */ extern void gtk_target_list_add_uri_targets (GtkTargetList *, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:112:NC */ extern void gtk_target_list_add_table (GtkTargetList *, const GtkTargetEntry *, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:115:NC */ extern void gtk_target_list_remove (GtkTargetList *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:117:NC */ extern gboolean gtk_target_list_find (GtkTargetList *, GdkAtom, guint *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:121:NC */ extern GtkTargetEntry *gtk_target_table_new_from_list (GtkTargetList *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:123:NC */ extern void gtk_target_table_free (GtkTargetEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:128:NC */ extern gboolean gtk_selection_owner_set (GtkWidget *, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:131:NC */ extern gboolean gtk_selection_owner_set_for_display (GdkDisplay *, GtkWidget *, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:136:NC */ extern void gtk_selection_add_target (GtkWidget *, GdkAtom, GdkAtom, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:140:NC */ extern void gtk_selection_add_targets (GtkWidget *, GdkAtom, const GtkTargetEntry *, guint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:144:NC */ extern void gtk_selection_clear_targets (GtkWidget *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:146:NC */ extern gboolean gtk_selection_convert (GtkWidget *, GdkAtom, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:151:NC */ extern GdkAtom gtk_selection_data_get_selection (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:152:NC */ extern GdkAtom gtk_selection_data_get_target (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:153:NC */ extern GdkAtom gtk_selection_data_get_data_type (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:154:NC */ extern gint gtk_selection_data_get_format (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:155:NC */ extern const guchar *gtk_selection_data_get_data (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:156:NC */ extern gint gtk_selection_data_get_length (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:157:NC */ extern GdkDisplay *gtk_selection_data_get_display (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:159:NC */ extern void gtk_selection_data_set (GtkSelectionData *, GdkAtom, gint, const guchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:164:NC */ extern gboolean gtk_selection_data_set_text (GtkSelectionData *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:167:NC */ extern guchar *gtk_selection_data_get_text (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:168:NC */ extern gboolean gtk_selection_data_set_pixbuf (GtkSelectionData *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:170:NC */ extern GdkPixbuf *gtk_selection_data_get_pixbuf (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:171:NC */ extern gboolean gtk_selection_data_set_uris (GtkSelectionData *, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:173:NC */ extern gchar **gtk_selection_data_get_uris (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:175:NC */ extern gboolean gtk_selection_data_get_targets (GtkSelectionData *, GdkAtom **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:178:NC */ extern gboolean gtk_selection_data_targets_include_text (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:179:NC */ extern gboolean gtk_selection_data_targets_include_rich_text (GtkSelectionData *, GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:181:NC */ extern gboolean gtk_selection_data_targets_include_image (GtkSelectionData *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:183:NC */ extern gboolean gtk_selection_data_targets_include_uri (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:184:NC */ extern gboolean gtk_targets_include_text (GdkAtom *, gint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:186:NC */ extern gboolean gtk_targets_include_rich_text (GdkAtom *, gint, GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:189:NC */ extern gboolean gtk_targets_include_image (GdkAtom *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:192:NC */ extern gboolean gtk_targets_include_uri (GdkAtom *, gint);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:197:NC */ extern void gtk_selection_remove_all (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:201:NC */ extern gboolean gtk_selection_clear (GtkWidget *, GdkEventSelection *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:204:NC */ extern gboolean _gtk_selection_request (GtkWidget *, GdkEventSelection *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:206:NC */ extern gboolean _gtk_selection_incr_event (GdkWindow *, GdkEventProperty *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:208:NC */ extern gboolean _gtk_selection_notify (GtkWidget *, GdkEventSelection *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:210:NC */ extern gboolean _gtk_selection_property_notify (GtkWidget *, GdkEventProperty *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:213:NC */ extern GType gtk_selection_data_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:214:NC */ extern GtkSelectionData *gtk_selection_data_copy (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:215:NC */ extern void gtk_selection_data_free (GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtkselection.h:217:NC */ extern GType gtk_target_list_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:70:NC */ extern GType gtk_clipboard_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:72:NC */ extern GtkClipboard *gtk_clipboard_get_for_display (GdkDisplay *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:75:NC */ extern GtkClipboard *gtk_clipboard_get (GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:78:NC */ extern GdkDisplay *gtk_clipboard_get_display (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:81:NC */ extern gboolean gtk_clipboard_set_with_data (GtkClipboard *, const GtkTargetEntry *, guint, GtkClipboardGetFunc, GtkClipboardClearFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:87:NC */ extern gboolean gtk_clipboard_set_with_owner (GtkClipboard *, const GtkTargetEntry *, guint, GtkClipboardGetFunc, GtkClipboardClearFunc, GObject *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:93:NC */ extern GObject *gtk_clipboard_get_owner (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:94:NC */ extern void gtk_clipboard_clear (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:95:NC */ extern void gtk_clipboard_set_text (GtkClipboard *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:98:NC */ extern void gtk_clipboard_set_image (GtkClipboard *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:101:NC */ extern void gtk_clipboard_request_contents (GtkClipboard *, GdkAtom, GtkClipboardReceivedFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:105:NC */ extern void gtk_clipboard_request_text (GtkClipboard *, GtkClipboardTextReceivedFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:108:NC */ extern void gtk_clipboard_request_rich_text (GtkClipboard *, GtkTextBuffer *, GtkClipboardRichTextReceivedFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:112:NC */ extern void gtk_clipboard_request_image (GtkClipboard *, GtkClipboardImageReceivedFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:115:NC */ extern void gtk_clipboard_request_uris (GtkClipboard *, GtkClipboardURIReceivedFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:118:NC */ extern void gtk_clipboard_request_targets (GtkClipboard *, GtkClipboardTargetsReceivedFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:122:NC */ extern GtkSelectionData *gtk_clipboard_wait_for_contents (GtkClipboard *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:124:NC */ extern gchar *gtk_clipboard_wait_for_text (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:125:NC */ extern guint8 *gtk_clipboard_wait_for_rich_text (GtkClipboard *, GtkTextBuffer *, GdkAtom *, gsize *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:129:NC */ extern GdkPixbuf *gtk_clipboard_wait_for_image (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:130:NC */ extern gchar **gtk_clipboard_wait_for_uris (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:131:NC */ extern gboolean gtk_clipboard_wait_for_targets (GtkClipboard *, GdkAtom **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:135:NC */ extern gboolean gtk_clipboard_wait_is_text_available (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:136:NC */ extern gboolean gtk_clipboard_wait_is_rich_text_available (GtkClipboard *, GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:138:NC */ extern gboolean gtk_clipboard_wait_is_image_available (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:139:NC */ extern gboolean gtk_clipboard_wait_is_uris_available (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:140:NC */ extern gboolean gtk_clipboard_wait_is_target_available (GtkClipboard *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:144:NC */ extern void gtk_clipboard_set_can_store (GtkClipboard *, const GtkTargetEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:148:NC */ extern void gtk_clipboard_store (GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:151:NC */ extern void _gtk_clipboard_handle_event (GdkEventOwnerChange *);
/* /usr/include/gtk-2.0/gtk/gtkclipboard.h:153:NC */ extern void _gtk_clipboard_store_all (void);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:83:NC */ extern GType gtk_color_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:84:NC */ extern GtkWidget *gtk_color_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:85:NC */ extern GtkWidget *gtk_color_button_new_with_color (const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:86:NC */ extern void gtk_color_button_set_color (GtkColorButton *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:88:NC */ extern void gtk_color_button_set_alpha (GtkColorButton *, guint16);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:90:NC */ extern void gtk_color_button_get_color (GtkColorButton *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:92:NC */ extern guint16 gtk_color_button_get_alpha (GtkColorButton *);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:93:NC */ extern void gtk_color_button_set_use_alpha (GtkColorButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:95:NC */ extern gboolean gtk_color_button_get_use_alpha (GtkColorButton *);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:96:NC */ extern void gtk_color_button_set_title (GtkColorButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcolorbutton.h:98:NC */ extern const gchar *gtk_color_button_get_title (GtkColorButton *);
/* /usr/include/gtk-2.0/gtk/gtkvbox.h:62:NC */ extern GType gtk_vbox_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvbox.h:63:NC */ extern GtkWidget *gtk_vbox_new (gboolean, gint);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:82:NC */ extern GType gtk_color_selection_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:83:NC */ extern GtkWidget *gtk_color_selection_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:84:NC */ extern gboolean gtk_color_selection_get_has_opacity_control (GtkColorSelection *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:85:NC */ extern void gtk_color_selection_set_has_opacity_control (GtkColorSelection *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:87:NC */ extern gboolean gtk_color_selection_get_has_palette (GtkColorSelection *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:88:NC */ extern void gtk_color_selection_set_has_palette (GtkColorSelection *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:92:NC */ extern void gtk_color_selection_set_current_color (GtkColorSelection *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:94:NC */ extern void gtk_color_selection_set_current_alpha (GtkColorSelection *, guint16);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:96:NC */ extern void gtk_color_selection_get_current_color (GtkColorSelection *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:98:NC */ extern guint16 gtk_color_selection_get_current_alpha (GtkColorSelection *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:99:NC */ extern void gtk_color_selection_set_previous_color (GtkColorSelection *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:101:NC */ extern void gtk_color_selection_set_previous_alpha (GtkColorSelection *, guint16);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:103:NC */ extern void gtk_color_selection_get_previous_color (GtkColorSelection *, GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:105:NC */ extern guint16 gtk_color_selection_get_previous_alpha (GtkColorSelection *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:107:NC */ extern gboolean gtk_color_selection_is_adjusting (GtkColorSelection *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:109:NC */ extern gboolean gtk_color_selection_palette_from_string (const gchar *, GdkColor **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:112:NC */ extern gchar *gtk_color_selection_palette_to_string (const GdkColor *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:117:NC */ extern GtkColorSelectionChangePaletteFunc gtk_color_selection_set_change_palette_hook (GtkColorSelectionChangePaletteFunc);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:121:NC */ extern GtkColorSelectionChangePaletteWithScreenFunc gtk_color_selection_set_change_palette_with_screen_hook (GtkColorSelectionChangePaletteWithScreenFunc);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:125:NC */ extern void gtk_color_selection_set_color (GtkColorSelection *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:127:NC */ extern void gtk_color_selection_get_color (GtkColorSelection *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkcolorsel.h:129:NC */ extern void gtk_color_selection_set_update_policy (GtkColorSelection *, GtkUpdateType);
/* /usr/include/gtk-2.0/gtk/gtkcolorseldialog.h:75:NC */ extern GType gtk_color_selection_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcolorseldialog.h:76:NC */ extern GtkWidget *gtk_color_selection_dialog_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcolorseldialog.h:77:NC */ extern GtkWidget *gtk_color_selection_dialog_get_color_selection (GtkColorSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:60:NC */ extern void gtk_drag_get_data (GtkWidget *, GdkDragContext *, GdkAtom, guint32);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:64:NC */ extern void gtk_drag_finish (GdkDragContext *, gboolean, gboolean, guint32);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:69:NC */ extern GtkWidget *gtk_drag_get_source_widget (GdkDragContext *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:71:NC */ extern void gtk_drag_highlight (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:72:NC */ extern void gtk_drag_unhighlight (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:74:NC */ extern void gtk_drag_dest_set (GtkWidget *, GtkDestDefaults, const GtkTargetEntry *, gint, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:80:NC */ extern void gtk_drag_dest_set_proxy (GtkWidget *, GdkWindow *, GdkDragProtocol, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:85:NC */ extern void gtk_drag_dest_unset (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:87:NC */ extern GdkAtom gtk_drag_dest_find_target (GtkWidget *, GdkDragContext *, GtkTargetList *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:90:NC */ extern GtkTargetList *gtk_drag_dest_get_target_list (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:91:NC */ extern void gtk_drag_dest_set_target_list (GtkWidget *, GtkTargetList *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:93:NC */ extern void gtk_drag_dest_add_text_targets (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:94:NC */ extern void gtk_drag_dest_add_image_targets (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:95:NC */ extern void gtk_drag_dest_add_uri_targets (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:97:NC */ extern void gtk_drag_dest_set_track_motion (GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:99:NC */ extern gboolean gtk_drag_dest_get_track_motion (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:103:NC */ extern void gtk_drag_source_set (GtkWidget *, GdkModifierType, const GtkTargetEntry *, gint, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:109:NC */ extern void gtk_drag_source_unset (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:111:NC */ extern GtkTargetList *gtk_drag_source_get_target_list (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:112:NC */ extern void gtk_drag_source_set_target_list (GtkWidget *, GtkTargetList *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:114:NC */ extern void gtk_drag_source_add_text_targets (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:115:NC */ extern void gtk_drag_source_add_image_targets (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:116:NC */ extern void gtk_drag_source_add_uri_targets (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:118:NC */ extern void gtk_drag_source_set_icon (GtkWidget *, GdkColormap *, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:122:NC */ extern void gtk_drag_source_set_icon_pixbuf (GtkWidget *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:124:NC */ extern void gtk_drag_source_set_icon_stock (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:126:NC */ extern void gtk_drag_source_set_icon_name (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:133:NC */ extern GdkDragContext *gtk_drag_begin (GtkWidget *, GtkTargetList *, GdkDragAction, gint, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:141:NC */ extern void gtk_drag_set_icon_widget (GdkDragContext *, GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:145:NC */ extern void gtk_drag_set_icon_pixmap (GdkDragContext *, GdkColormap *, GdkPixmap *, GdkBitmap *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:151:NC */ extern void gtk_drag_set_icon_pixbuf (GdkDragContext *, GdkPixbuf *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:155:NC */ extern void gtk_drag_set_icon_stock (GdkDragContext *, const gchar *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:159:NC */ extern void gtk_drag_set_icon_name (GdkDragContext *, const gchar *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:164:NC */ extern void gtk_drag_set_icon_default (GdkDragContext *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:166:NC */ extern gboolean gtk_drag_check_threshold (GtkWidget *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:173:NC */ extern void _gtk_drag_source_handle_event (GtkWidget *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:175:NC */ extern void _gtk_drag_dest_handle_event (GtkWidget *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkdnd.h:179:NC */ extern void gtk_drag_set_default_icon (GdkColormap *, GdkPixmap *, GdkBitmap *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:87:NC */ extern GType gtk_editable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:88:NC */ extern void gtk_editable_select_region (GtkEditable *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:91:NC */ extern gboolean gtk_editable_get_selection_bounds (GtkEditable *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:94:NC */ extern void gtk_editable_insert_text (GtkEditable *, const gchar *, gint, gint *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:98:NC */ extern void gtk_editable_delete_text (GtkEditable *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:101:NC */ extern gchar *gtk_editable_get_chars (GtkEditable *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:104:NC */ extern void gtk_editable_cut_clipboard (GtkEditable *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:105:NC */ extern void gtk_editable_copy_clipboard (GtkEditable *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:106:NC */ extern void gtk_editable_paste_clipboard (GtkEditable *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:107:NC */ extern void gtk_editable_delete_selection (GtkEditable *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:108:NC */ extern void gtk_editable_set_position (GtkEditable *, gint);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:110:NC */ extern gint gtk_editable_get_position (GtkEditable *);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:111:NC */ extern void gtk_editable_set_editable (GtkEditable *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkeditable.h:113:NC */ extern gboolean gtk_editable_get_editable (GtkEditable *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:102:NC */ extern GType gtk_im_context_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:104:NC */ extern void gtk_im_context_set_client_window (GtkIMContext *, GdkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:106:NC */ extern void gtk_im_context_get_preedit_string (GtkIMContext *, gchar **, PangoAttrList **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:110:NC */ extern gboolean gtk_im_context_filter_keypress (GtkIMContext *, GdkEventKey *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:112:NC */ extern void gtk_im_context_focus_in (GtkIMContext *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:113:NC */ extern void gtk_im_context_focus_out (GtkIMContext *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:114:NC */ extern void gtk_im_context_reset (GtkIMContext *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:115:NC */ extern void gtk_im_context_set_cursor_location (GtkIMContext *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:117:NC */ extern void gtk_im_context_set_use_preedit (GtkIMContext *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:119:NC */ extern void gtk_im_context_set_surrounding (GtkIMContext *, const gchar *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:123:NC */ extern gboolean gtk_im_context_get_surrounding (GtkIMContext *, gchar **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkimcontext.h:126:NC */ extern gboolean gtk_im_context_delete_surrounding (GtkIMContext *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:93:NC */ extern GType gtk_entry_buffer_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:95:NC */ extern GtkEntryBuffer *gtk_entry_buffer_new (const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:98:NC */ extern gsize gtk_entry_buffer_get_bytes (GtkEntryBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:100:NC */ extern guint gtk_entry_buffer_get_length (GtkEntryBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:102:NC */ extern const gchar *gtk_entry_buffer_get_text (GtkEntryBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:104:NC */ extern void gtk_entry_buffer_set_text (GtkEntryBuffer *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:108:NC */ extern void gtk_entry_buffer_set_max_length (GtkEntryBuffer *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:111:NC */ extern gint gtk_entry_buffer_get_max_length (GtkEntryBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:113:NC */ extern guint gtk_entry_buffer_insert_text (GtkEntryBuffer *, guint, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:118:NC */ extern guint gtk_entry_buffer_delete_text (GtkEntryBuffer *, guint, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:122:NC */ extern void gtk_entry_buffer_emit_inserted_text (GtkEntryBuffer *, guint, const gchar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkentrybuffer.h:127:NC */ extern void gtk_entry_buffer_emit_deleted_text (GtkEntryBuffer *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:77:NC */ extern GType gtk_list_store_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:78:NC */ extern GtkListStore *gtk_list_store_new (gint, ...);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:80:NC */ extern GtkListStore *gtk_list_store_newv (gint, GType *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:82:NC */ extern void gtk_list_store_set_column_types (GtkListStore *, gint, GType *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:88:NC */ extern void gtk_list_store_set_value (GtkListStore *, GtkTreeIter *, gint, GValue *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:92:NC */ extern void gtk_list_store_set (GtkListStore *, GtkTreeIter *, ...);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:95:NC */ extern void gtk_list_store_set_valuesv (GtkListStore *, GtkTreeIter *, gint *, GValue *, gint);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:100:NC */ extern void gtk_list_store_set_valist (GtkListStore *, GtkTreeIter *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:103:NC */ extern gboolean gtk_list_store_remove (GtkListStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:105:NC */ extern void gtk_list_store_insert (GtkListStore *, GtkTreeIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:108:NC */ extern void gtk_list_store_insert_before (GtkListStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:111:NC */ extern void gtk_list_store_insert_after (GtkListStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:114:NC */ extern void gtk_list_store_insert_with_values (GtkListStore *, GtkTreeIter *, gint, ...);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:118:NC */ extern void gtk_list_store_insert_with_valuesv (GtkListStore *, GtkTreeIter *, gint, gint *, GValue *, gint);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:124:NC */ extern void gtk_list_store_prepend (GtkListStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:126:NC */ extern void gtk_list_store_append (GtkListStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:128:NC */ extern void gtk_list_store_clear (GtkListStore *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:129:NC */ extern gboolean gtk_list_store_iter_is_valid (GtkListStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:131:NC */ extern void gtk_list_store_reorder (GtkListStore *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:133:NC */ extern void gtk_list_store_swap (GtkListStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:136:NC */ extern void gtk_list_store_move_after (GtkListStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkliststore.h:139:NC */ extern void gtk_list_store_move_before (GtkListStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:73:NC */ extern GType gtk_tree_model_filter_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:74:NC */ extern GtkTreeModel *gtk_tree_model_filter_new (GtkTreeModel *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:76:NC */ extern void gtk_tree_model_filter_set_visible_func (GtkTreeModelFilter *, GtkTreeModelFilterVisibleFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:80:NC */ extern void gtk_tree_model_filter_set_modify_func (GtkTreeModelFilter *, gint, GType *, GtkTreeModelFilterModifyFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:86:NC */ extern void gtk_tree_model_filter_set_visible_column (GtkTreeModelFilter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:89:NC */ extern GtkTreeModel *gtk_tree_model_filter_get_model (GtkTreeModelFilter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:92:NC */ extern gboolean gtk_tree_model_filter_convert_child_iter_to_iter (GtkTreeModelFilter *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:95:NC */ extern void gtk_tree_model_filter_convert_iter_to_child_iter (GtkTreeModelFilter *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:98:NC */ extern GtkTreePath *gtk_tree_model_filter_convert_child_path_to_path (GtkTreeModelFilter *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:100:NC */ extern GtkTreePath *gtk_tree_model_filter_convert_path_to_child_path (GtkTreeModelFilter *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:104:NC */ extern void gtk_tree_model_filter_refilter (GtkTreeModelFilter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelfilter.h:105:NC */ extern void gtk_tree_model_filter_clear_cache (GtkTreeModelFilter *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:80:NC */ extern GType gtk_entry_completion_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:81:NC */ extern GtkEntryCompletion *gtk_entry_completion_new (void);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:83:NC */ extern GtkWidget *gtk_entry_completion_get_entry (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:85:NC */ extern void gtk_entry_completion_set_model (GtkEntryCompletion *, GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:87:NC */ extern GtkTreeModel *gtk_entry_completion_get_model (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:89:NC */ extern void gtk_entry_completion_set_match_func (GtkEntryCompletion *, GtkEntryCompletionMatchFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:93:NC */ extern void gtk_entry_completion_set_minimum_key_length (GtkEntryCompletion *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:95:NC */ extern gint gtk_entry_completion_get_minimum_key_length (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:96:NC */ extern void gtk_entry_completion_complete (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:97:NC */ extern void gtk_entry_completion_insert_prefix (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:99:NC */ extern void gtk_entry_completion_insert_action_text (GtkEntryCompletion *, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:102:NC */ extern void gtk_entry_completion_insert_action_markup (GtkEntryCompletion *, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:105:NC */ extern void gtk_entry_completion_delete_action (GtkEntryCompletion *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:108:NC */ extern void gtk_entry_completion_set_inline_completion (GtkEntryCompletion *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:110:NC */ extern gboolean gtk_entry_completion_get_inline_completion (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:111:NC */ extern void gtk_entry_completion_set_inline_selection (GtkEntryCompletion *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:113:NC */ extern gboolean gtk_entry_completion_get_inline_selection (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:114:NC */ extern void gtk_entry_completion_set_popup_completion (GtkEntryCompletion *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:116:NC */ extern gboolean gtk_entry_completion_get_popup_completion (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:117:NC */ extern void gtk_entry_completion_set_popup_set_width (GtkEntryCompletion *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:119:NC */ extern gboolean gtk_entry_completion_get_popup_set_width (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:120:NC */ extern void gtk_entry_completion_set_popup_single_match (GtkEntryCompletion *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:122:NC */ extern gboolean gtk_entry_completion_get_popup_single_match (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:124:NC */ extern const gchar *gtk_entry_completion_get_completion_prefix (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:126:NC */ extern void gtk_entry_completion_set_text_column (GtkEntryCompletion *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentrycompletion.h:128:NC */ extern gint gtk_entry_completion_get_text_column (GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:166:NC */ extern GType gtk_entry_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:167:NC */ extern GtkWidget *gtk_entry_new (void);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:168:NC */ extern GtkWidget *gtk_entry_new_with_buffer (GtkEntryBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:170:NC */ extern GtkEntryBuffer *gtk_entry_get_buffer (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:171:NC */ extern void gtk_entry_set_buffer (GtkEntry *, GtkEntryBuffer *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:174:NC */ extern GdkWindow *gtk_entry_get_text_window (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:176:NC */ extern void gtk_entry_set_visibility (GtkEntry *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:178:NC */ extern gboolean gtk_entry_get_visibility (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:180:NC */ extern void gtk_entry_set_invisible_char (GtkEntry *, gunichar);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:182:NC */ extern gunichar gtk_entry_get_invisible_char (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:183:NC */ extern void gtk_entry_unset_invisible_char (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:185:NC */ extern void gtk_entry_set_has_frame (GtkEntry *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:187:NC */ extern gboolean gtk_entry_get_has_frame (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:189:NC */ extern void gtk_entry_set_inner_border (GtkEntry *, const GtkBorder *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:191:NC */ extern const GtkBorder *gtk_entry_get_inner_border (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:193:NC */ extern void gtk_entry_set_overwrite_mode (GtkEntry *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:195:NC */ extern gboolean gtk_entry_get_overwrite_mode (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:198:NC */ extern void gtk_entry_set_max_length (GtkEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:200:NC */ extern gint gtk_entry_get_max_length (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:201:NC */ extern guint16 gtk_entry_get_text_length (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:203:NC */ extern void gtk_entry_set_activates_default (GtkEntry *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:205:NC */ extern gboolean gtk_entry_get_activates_default (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:207:NC */ extern void gtk_entry_set_width_chars (GtkEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:209:NC */ extern gint gtk_entry_get_width_chars (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:213:NC */ extern void gtk_entry_set_text (GtkEntry *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:216:NC */ extern const gchar *gtk_entry_get_text (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:218:NC */ extern PangoLayout *gtk_entry_get_layout (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:219:NC */ extern void gtk_entry_get_layout_offsets (GtkEntry *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:222:NC */ extern void gtk_entry_set_alignment (GtkEntry *, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:224:NC */ extern gfloat gtk_entry_get_alignment (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:226:NC */ extern void gtk_entry_set_completion (GtkEntry *, GtkEntryCompletion *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:228:NC */ extern GtkEntryCompletion *gtk_entry_get_completion (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:230:NC */ extern gint gtk_entry_layout_index_to_text_index (GtkEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:232:NC */ extern gint gtk_entry_text_index_to_layout_index (GtkEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:237:NC */ extern void gtk_entry_set_cursor_hadjustment (GtkEntry *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:239:NC */ extern GtkAdjustment *gtk_entry_get_cursor_hadjustment (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:243:NC */ extern void gtk_entry_set_progress_fraction (GtkEntry *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:245:NC */ extern gdouble gtk_entry_get_progress_fraction (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:247:NC */ extern void gtk_entry_set_progress_pulse_step (GtkEntry *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:249:NC */ extern gdouble gtk_entry_get_progress_pulse_step (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:251:NC */ extern void gtk_entry_progress_pulse (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:255:NC */ extern void gtk_entry_set_icon_from_pixbuf (GtkEntry *, GtkEntryIconPosition, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:258:NC */ extern void gtk_entry_set_icon_from_stock (GtkEntry *, GtkEntryIconPosition, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:261:NC */ extern void gtk_entry_set_icon_from_icon_name (GtkEntry *, GtkEntryIconPosition, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:264:NC */ extern void gtk_entry_set_icon_from_gicon (GtkEntry *, GtkEntryIconPosition, GIcon *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:267:NC */ extern GtkImageType gtk_entry_get_icon_storage_type (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:269:NC */ extern GdkPixbuf *gtk_entry_get_icon_pixbuf (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:271:NC */ extern const gchar *gtk_entry_get_icon_stock (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:273:NC */ extern const gchar *gtk_entry_get_icon_name (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:275:NC */ extern GIcon *gtk_entry_get_icon_gicon (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:277:NC */ extern void gtk_entry_set_icon_activatable (GtkEntry *, GtkEntryIconPosition, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:280:NC */ extern gboolean gtk_entry_get_icon_activatable (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:282:NC */ extern void gtk_entry_set_icon_sensitive (GtkEntry *, GtkEntryIconPosition, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:285:NC */ extern gboolean gtk_entry_get_icon_sensitive (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:287:NC */ extern gint gtk_entry_get_icon_at_pos (GtkEntry *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:290:NC */ extern void gtk_entry_set_icon_tooltip_text (GtkEntry *, GtkEntryIconPosition, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:293:NC */ extern gchar *gtk_entry_get_icon_tooltip_text (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:295:NC */ extern void gtk_entry_set_icon_tooltip_markup (GtkEntry *, GtkEntryIconPosition, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:298:NC */ extern gchar *gtk_entry_get_icon_tooltip_markup (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:300:NC */ extern void gtk_entry_set_icon_drag_source (GtkEntry *, GtkEntryIconPosition, GtkTargetList *, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:304:NC */ extern gint gtk_entry_get_current_icon_drag_source (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:306:NC */ extern GdkWindow *gtk_entry_get_icon_window (GtkEntry *, GtkEntryIconPosition);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:309:NC */ extern gboolean gtk_entry_im_context_filter_keypress (GtkEntry *, GdkEventKey *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:311:NC */ extern void gtk_entry_reset_im_context (GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:318:NC */ extern GtkWidget *gtk_entry_new_with_max_length (gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:319:NC */ extern void gtk_entry_append_text (GtkEntry *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:321:NC */ extern void gtk_entry_prepend_text (GtkEntry *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:323:NC */ extern void gtk_entry_set_position (GtkEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:325:NC */ extern void gtk_entry_select_region (GtkEntry *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkentry.h:328:NC */ extern void gtk_entry_set_editable (GtkEntry *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:140:NC */ extern GType gtk_tree_view_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:141:NC */ extern GtkWidget *gtk_tree_view_new (void);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:142:NC */ extern GtkWidget *gtk_tree_view_new_with_model (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:145:NC */ extern GtkTreeModel *gtk_tree_view_get_model (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:146:NC */ extern void gtk_tree_view_set_model (GtkTreeView *, GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:148:NC */ extern GtkTreeSelection *gtk_tree_view_get_selection (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:149:NC */ extern GtkAdjustment *gtk_tree_view_get_hadjustment (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:150:NC */ extern void gtk_tree_view_set_hadjustment (GtkTreeView *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:152:NC */ extern GtkAdjustment *gtk_tree_view_get_vadjustment (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:153:NC */ extern void gtk_tree_view_set_vadjustment (GtkTreeView *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:155:NC */ extern gboolean gtk_tree_view_get_headers_visible (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:156:NC */ extern void gtk_tree_view_set_headers_visible (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:158:NC */ extern void gtk_tree_view_columns_autosize (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:159:NC */ extern gboolean gtk_tree_view_get_headers_clickable (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:160:NC */ extern void gtk_tree_view_set_headers_clickable (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:162:NC */ extern void gtk_tree_view_set_rules_hint (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:164:NC */ extern gboolean gtk_tree_view_get_rules_hint (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:167:NC */ extern gint gtk_tree_view_append_column (GtkTreeView *, GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:169:NC */ extern gint gtk_tree_view_remove_column (GtkTreeView *, GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:171:NC */ extern gint gtk_tree_view_insert_column (GtkTreeView *, GtkTreeViewColumn *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:174:NC */ extern gint gtk_tree_view_insert_column_with_attributes (GtkTreeView *, gint, const gchar *, GtkCellRenderer *, ...);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:179:NC */ extern gint gtk_tree_view_insert_column_with_data_func (GtkTreeView *, gint, const gchar *, GtkCellRenderer *, GtkTreeCellDataFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:186:NC */ extern GtkTreeViewColumn *gtk_tree_view_get_column (GtkTreeView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:188:NC */ extern GList *gtk_tree_view_get_columns (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:189:NC */ extern void gtk_tree_view_move_column_after (GtkTreeView *, GtkTreeViewColumn *, GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:192:NC */ extern void gtk_tree_view_set_expander_column (GtkTreeView *, GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:194:NC */ extern GtkTreeViewColumn *gtk_tree_view_get_expander_column (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:195:NC */ extern void gtk_tree_view_set_column_drag_function (GtkTreeView *, GtkTreeViewColumnDropFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:201:NC */ extern void gtk_tree_view_scroll_to_point (GtkTreeView *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:204:NC */ extern void gtk_tree_view_scroll_to_cell (GtkTreeView *, GtkTreePath *, GtkTreeViewColumn *, gboolean, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:210:NC */ extern void gtk_tree_view_row_activated (GtkTreeView *, GtkTreePath *, GtkTreeViewColumn *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:213:NC */ extern void gtk_tree_view_expand_all (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:214:NC */ extern void gtk_tree_view_collapse_all (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:215:NC */ extern void gtk_tree_view_expand_to_path (GtkTreeView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:217:NC */ extern gboolean gtk_tree_view_expand_row (GtkTreeView *, GtkTreePath *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:220:NC */ extern gboolean gtk_tree_view_collapse_row (GtkTreeView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:222:NC */ extern void gtk_tree_view_map_expanded_rows (GtkTreeView *, GtkTreeViewMappingFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:225:NC */ extern gboolean gtk_tree_view_row_expanded (GtkTreeView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:227:NC */ extern void gtk_tree_view_set_reorderable (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:229:NC */ extern gboolean gtk_tree_view_get_reorderable (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:230:NC */ extern void gtk_tree_view_set_cursor (GtkTreeView *, GtkTreePath *, GtkTreeViewColumn *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:234:NC */ extern void gtk_tree_view_set_cursor_on_cell (GtkTreeView *, GtkTreePath *, GtkTreeViewColumn *, GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:239:NC */ extern void gtk_tree_view_get_cursor (GtkTreeView *, GtkTreePath **, GtkTreeViewColumn **);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:245:NC */ extern GdkWindow *gtk_tree_view_get_bin_window (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:246:NC */ extern gboolean gtk_tree_view_get_path_at_pos (GtkTreeView *, gint, gint, GtkTreePath **, GtkTreeViewColumn **, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:253:NC */ extern void gtk_tree_view_get_cell_area (GtkTreeView *, GtkTreePath *, GtkTreeViewColumn *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:257:NC */ extern void gtk_tree_view_get_background_area (GtkTreeView *, GtkTreePath *, GtkTreeViewColumn *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:261:NC */ extern void gtk_tree_view_get_visible_rect (GtkTreeView *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:265:NC */ extern void gtk_tree_view_widget_to_tree_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:270:NC */ extern void gtk_tree_view_tree_to_widget_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:276:NC */ extern gboolean gtk_tree_view_get_visible_range (GtkTreeView *, GtkTreePath **, GtkTreePath **);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:281:NC */ extern void gtk_tree_view_enable_model_drag_source (GtkTreeView *, GdkModifierType, const GtkTargetEntry *, gint, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:286:NC */ extern void gtk_tree_view_enable_model_drag_dest (GtkTreeView *, const GtkTargetEntry *, gint, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:290:NC */ extern void gtk_tree_view_unset_rows_drag_source (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:291:NC */ extern void gtk_tree_view_unset_rows_drag_dest (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:295:NC */ extern void gtk_tree_view_set_drag_dest_row (GtkTreeView *, GtkTreePath *, GtkTreeViewDropPosition);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:298:NC */ extern void gtk_tree_view_get_drag_dest_row (GtkTreeView *, GtkTreePath **, GtkTreeViewDropPosition *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:301:NC */ extern gboolean gtk_tree_view_get_dest_row_at_pos (GtkTreeView *, gint, gint, GtkTreePath **, GtkTreeViewDropPosition *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:306:NC */ extern GdkPixmap *gtk_tree_view_create_row_drag_icon (GtkTreeView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:310:NC */ extern void gtk_tree_view_set_enable_search (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:312:NC */ extern gboolean gtk_tree_view_get_enable_search (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:313:NC */ extern gint gtk_tree_view_get_search_column (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:314:NC */ extern void gtk_tree_view_set_search_column (GtkTreeView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:316:NC */ extern GtkTreeViewSearchEqualFunc gtk_tree_view_get_search_equal_func (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:317:NC */ extern void gtk_tree_view_set_search_equal_func (GtkTreeView *, GtkTreeViewSearchEqualFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:322:NC */ extern GtkEntry *gtk_tree_view_get_search_entry (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:323:NC */ extern void gtk_tree_view_set_search_entry (GtkTreeView *, GtkEntry *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:325:NC */ extern GtkTreeViewSearchPositionFunc gtk_tree_view_get_search_position_func (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:326:NC */ extern void gtk_tree_view_set_search_position_func (GtkTreeView *, GtkTreeViewSearchPositionFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:332:NC */ extern void gtk_tree_view_convert_widget_to_tree_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:337:NC */ extern void gtk_tree_view_convert_tree_to_widget_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:342:NC */ extern void gtk_tree_view_convert_widget_to_bin_window_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:347:NC */ extern void gtk_tree_view_convert_bin_window_to_widget_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:352:NC */ extern void gtk_tree_view_convert_tree_to_bin_window_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:357:NC */ extern void gtk_tree_view_convert_bin_window_to_tree_coords (GtkTreeView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:369:NC */ extern void gtk_tree_view_set_destroy_count_func (GtkTreeView *, GtkTreeDestroyCountFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:374:NC */ extern void gtk_tree_view_set_fixed_height_mode (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:376:NC */ extern gboolean gtk_tree_view_get_fixed_height_mode (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:377:NC */ extern void gtk_tree_view_set_hover_selection (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:379:NC */ extern gboolean gtk_tree_view_get_hover_selection (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:380:NC */ extern void gtk_tree_view_set_hover_expand (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:382:NC */ extern gboolean gtk_tree_view_get_hover_expand (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:383:NC */ extern void gtk_tree_view_set_rubber_banding (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:385:NC */ extern gboolean gtk_tree_view_get_rubber_banding (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:387:NC */ extern gboolean gtk_tree_view_is_rubber_banding_active (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:389:NC */ extern GtkTreeViewRowSeparatorFunc gtk_tree_view_get_row_separator_func (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:390:NC */ extern void gtk_tree_view_set_row_separator_func (GtkTreeView *, GtkTreeViewRowSeparatorFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:395:NC */ extern GtkTreeViewGridLines gtk_tree_view_get_grid_lines (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:396:NC */ extern void gtk_tree_view_set_grid_lines (GtkTreeView *, GtkTreeViewGridLines);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:398:NC */ extern gboolean gtk_tree_view_get_enable_tree_lines (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:399:NC */ extern void gtk_tree_view_set_enable_tree_lines (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:401:NC */ extern void gtk_tree_view_set_show_expanders (GtkTreeView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:403:NC */ extern gboolean gtk_tree_view_get_show_expanders (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:404:NC */ extern void gtk_tree_view_set_level_indentation (GtkTreeView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:406:NC */ extern gint gtk_tree_view_get_level_indentation (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:409:NC */ extern void gtk_tree_view_set_tooltip_row (GtkTreeView *, GtkTooltip *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:412:NC */ extern void gtk_tree_view_set_tooltip_cell (GtkTreeView *, GtkTooltip *, GtkTreePath *, GtkTreeViewColumn *, GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:417:NC */ extern gboolean gtk_tree_view_get_tooltip_context (GtkTreeView *, gint *, gint *, gboolean, GtkTreeModel **, GtkTreePath **, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:424:NC */ extern void gtk_tree_view_set_tooltip_column (GtkTreeView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreeview.h:426:NC */ extern gint gtk_tree_view_get_tooltip_column (GtkTreeView *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:70:NC */ extern GType gtk_combo_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:71:NC */ extern GtkWidget *gtk_combo_box_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:72:NC */ extern GtkWidget *gtk_combo_box_new_with_entry (void);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:73:NC */ extern GtkWidget *gtk_combo_box_new_with_model (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:74:NC */ extern GtkWidget *gtk_combo_box_new_with_model_and_entry (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:77:NC */ extern gint gtk_combo_box_get_wrap_width (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:78:NC */ extern void gtk_combo_box_set_wrap_width (GtkComboBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:80:NC */ extern gint gtk_combo_box_get_row_span_column (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:81:NC */ extern void gtk_combo_box_set_row_span_column (GtkComboBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:83:NC */ extern gint gtk_combo_box_get_column_span_column (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:84:NC */ extern void gtk_combo_box_set_column_span_column (GtkComboBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:87:NC */ extern gboolean gtk_combo_box_get_add_tearoffs (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:88:NC */ extern void gtk_combo_box_set_add_tearoffs (GtkComboBox *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:91:NC */ extern const gchar *gtk_combo_box_get_title (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:92:NC */ extern void gtk_combo_box_set_title (GtkComboBox *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:95:NC */ extern gboolean gtk_combo_box_get_focus_on_click (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:96:NC */ extern void gtk_combo_box_set_focus_on_click (GtkComboBox *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:100:NC */ extern gint gtk_combo_box_get_active (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:101:NC */ extern void gtk_combo_box_set_active (GtkComboBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:103:NC */ extern gboolean gtk_combo_box_get_active_iter (GtkComboBox *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:105:NC */ extern void gtk_combo_box_set_active_iter (GtkComboBox *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:109:NC */ extern void gtk_combo_box_set_model (GtkComboBox *, GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:111:NC */ extern GtkTreeModel *gtk_combo_box_get_model (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:113:NC */ extern GtkTreeViewRowSeparatorFunc gtk_combo_box_get_row_separator_func (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:114:NC */ extern void gtk_combo_box_set_row_separator_func (GtkComboBox *, GtkTreeViewRowSeparatorFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:119:NC */ extern void gtk_combo_box_set_button_sensitivity (GtkComboBox *, GtkSensitivityType);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:121:NC */ extern GtkSensitivityType gtk_combo_box_get_button_sensitivity (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:123:NC */ extern gboolean gtk_combo_box_get_has_entry (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:124:NC */ extern void gtk_combo_box_set_entry_text_column (GtkComboBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:126:NC */ extern gint gtk_combo_box_get_entry_text_column (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:131:NC */ extern GtkWidget *gtk_combo_box_new_text (void);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:132:NC */ extern void gtk_combo_box_append_text (GtkComboBox *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:134:NC */ extern void gtk_combo_box_insert_text (GtkComboBox *, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:137:NC */ extern void gtk_combo_box_prepend_text (GtkComboBox *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:139:NC */ extern void gtk_combo_box_remove_text (GtkComboBox *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:141:NC */ extern gchar *gtk_combo_box_get_active_text (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:146:NC */ extern void gtk_combo_box_popup (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:147:NC */ extern void gtk_combo_box_popdown (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcombobox.h:148:NC */ extern AtkObject *gtk_combo_box_get_popup_accessible (GtkComboBox *);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxentry.h:65:NC */ extern GType gtk_combo_box_entry_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxentry.h:66:NC */ extern GtkWidget *gtk_combo_box_entry_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxentry.h:67:NC */ extern GtkWidget *gtk_combo_box_entry_new_with_model (GtkTreeModel *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxentry.h:70:NC */ extern void gtk_combo_box_entry_set_text_column (GtkComboBoxEntry *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxentry.h:72:NC */ extern gint gtk_combo_box_entry_get_text_column (GtkComboBoxEntry *);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxentry.h:75:NC */ extern GtkWidget *gtk_combo_box_entry_new_text (void);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:60:NC */ extern GType gtk_combo_box_text_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:61:NC */ extern GtkWidget *gtk_combo_box_text_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:62:NC */ extern GtkWidget *gtk_combo_box_text_new_with_entry (void);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:63:NC */ extern void gtk_combo_box_text_append_text (GtkComboBoxText *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:65:NC */ extern void gtk_combo_box_text_insert_text (GtkComboBoxText *, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:68:NC */ extern void gtk_combo_box_text_prepend_text (GtkComboBoxText *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:70:NC */ extern void gtk_combo_box_text_remove (GtkComboBoxText *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcomboboxtext.h:72:NC */ extern gchar *gtk_combo_box_text_get_active_text (GtkComboBoxText *);
/* /usr/include/gtk-2.0/gtk/gtkdrawingarea.h:70:NC */ extern GType gtk_drawing_area_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkdrawingarea.h:71:NC */ extern GtkWidget *gtk_drawing_area_new (void);
/* /usr/include/gtk-2.0/gtk/gtkdrawingarea.h:74:NC */ extern void gtk_drawing_area_size (GtkDrawingArea *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkeventbox.h:60:NC */ extern GType gtk_event_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkeventbox.h:61:NC */ extern GtkWidget *gtk_event_box_new (void);
/* /usr/include/gtk-2.0/gtk/gtkeventbox.h:62:NC */ extern gboolean gtk_event_box_get_visible_window (GtkEventBox *);
/* /usr/include/gtk-2.0/gtk/gtkeventbox.h:63:NC */ extern void gtk_event_box_set_visible_window (GtkEventBox *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkeventbox.h:65:NC */ extern gboolean gtk_event_box_get_above_child (GtkEventBox *);
/* /usr/include/gtk-2.0/gtk/gtkeventbox.h:66:NC */ extern void gtk_event_box_set_above_child (GtkEventBox *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:63:NC */ extern GType gtk_expander_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:65:NC */ extern GtkWidget *gtk_expander_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:66:NC */ extern GtkWidget *gtk_expander_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:68:NC */ extern void gtk_expander_set_expanded (GtkExpander *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:70:NC */ extern gboolean gtk_expander_get_expanded (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:73:NC */ extern void gtk_expander_set_spacing (GtkExpander *, gint);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:75:NC */ extern gint gtk_expander_get_spacing (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:77:NC */ extern void gtk_expander_set_label (GtkExpander *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:79:NC */ extern const gchar *gtk_expander_get_label (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:81:NC */ extern void gtk_expander_set_use_underline (GtkExpander *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:83:NC */ extern gboolean gtk_expander_get_use_underline (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:85:NC */ extern void gtk_expander_set_use_markup (GtkExpander *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:87:NC */ extern gboolean gtk_expander_get_use_markup (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:89:NC */ extern void gtk_expander_set_label_widget (GtkExpander *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:91:NC */ extern GtkWidget *gtk_expander_get_label_widget (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:92:NC */ extern void gtk_expander_set_label_fill (GtkExpander *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkexpander.h:94:NC */ extern gboolean gtk_expander_get_label_fill (GtkExpander *);
/* /usr/include/gtk-2.0/gtk/gtkfixed.h:72:NC */ extern GType gtk_fixed_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfixed.h:73:NC */ extern GtkWidget *gtk_fixed_new (void);
/* /usr/include/gtk-2.0/gtk/gtkfixed.h:74:NC */ extern void gtk_fixed_put (GtkFixed *, GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkfixed.h:78:NC */ extern void gtk_fixed_move (GtkFixed *, GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkfixed.h:83:NC */ extern void gtk_fixed_set_has_window (GtkFixed *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfixed.h:85:NC */ extern gboolean gtk_fixed_get_has_window (GtkFixed *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:59:NC */ extern GType gtk_file_filter_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:61:NC */ extern GtkFileFilter *gtk_file_filter_new (void);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:62:NC */ extern void gtk_file_filter_set_name (GtkFileFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:64:NC */ extern const gchar *gtk_file_filter_get_name (GtkFileFilter *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:66:NC */ extern void gtk_file_filter_add_mime_type (GtkFileFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:68:NC */ extern void gtk_file_filter_add_pattern (GtkFileFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:70:NC */ extern void gtk_file_filter_add_pixbuf_formats (GtkFileFilter *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:71:NC */ extern void gtk_file_filter_add_custom (GtkFileFilter *, GtkFileFilterFlags, GtkFileFilterFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:77:NC */ extern GtkFileFilterFlags gtk_file_filter_get_needed (GtkFileFilter *);
/* /usr/include/gtk-2.0/gtk/gtkfilefilter.h:78:NC */ extern gboolean gtk_file_filter_filter (GtkFileFilter *, const GtkFileFilterInfo *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:88:NC */ extern GType gtk_file_chooser_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:116:NC */ extern GQuark gtk_file_chooser_error_quark (void);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:120:NC */ extern void gtk_file_chooser_set_action (GtkFileChooser *, GtkFileChooserAction);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:122:NC */ extern GtkFileChooserAction gtk_file_chooser_get_action (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:123:NC */ extern void gtk_file_chooser_set_local_only (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:125:NC */ extern gboolean gtk_file_chooser_get_local_only (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:126:NC */ extern void gtk_file_chooser_set_select_multiple (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:128:NC */ extern gboolean gtk_file_chooser_get_select_multiple (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:129:NC */ extern void gtk_file_chooser_set_show_hidden (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:131:NC */ extern gboolean gtk_file_chooser_get_show_hidden (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:133:NC */ extern void gtk_file_chooser_set_do_overwrite_confirmation (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:135:NC */ extern gboolean gtk_file_chooser_get_do_overwrite_confirmation (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:137:NC */ extern void gtk_file_chooser_set_create_folders (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:139:NC */ extern gboolean gtk_file_chooser_get_create_folders (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:143:NC */ extern void gtk_file_chooser_set_current_name (GtkFileChooser *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:163:NC */ extern gchar *gtk_file_chooser_get_filename (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:164:NC */ extern gboolean gtk_file_chooser_set_filename (GtkFileChooser *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:166:NC */ extern gboolean gtk_file_chooser_select_filename (GtkFileChooser *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:168:NC */ extern void gtk_file_chooser_unselect_filename (GtkFileChooser *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:170:NC */ extern void gtk_file_chooser_select_all (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:171:NC */ extern void gtk_file_chooser_unselect_all (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:172:NC */ extern GSList *gtk_file_chooser_get_filenames (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:173:NC */ extern gboolean gtk_file_chooser_set_current_folder (GtkFileChooser *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:175:NC */ extern gchar *gtk_file_chooser_get_current_folder (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:180:NC */ extern gchar *gtk_file_chooser_get_uri (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:181:NC */ extern gboolean gtk_file_chooser_set_uri (GtkFileChooser *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:183:NC */ extern gboolean gtk_file_chooser_select_uri (GtkFileChooser *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:185:NC */ extern void gtk_file_chooser_unselect_uri (GtkFileChooser *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:187:NC */ extern GSList *gtk_file_chooser_get_uris (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:188:NC */ extern gboolean gtk_file_chooser_set_current_folder_uri (GtkFileChooser *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:190:NC */ extern gchar *gtk_file_chooser_get_current_folder_uri (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:193:NC */ extern GFile *gtk_file_chooser_get_file (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:194:NC */ extern gboolean gtk_file_chooser_set_file (GtkFileChooser *, GFile *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:197:NC */ extern gboolean gtk_file_chooser_select_file (GtkFileChooser *, GFile *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:200:NC */ extern void gtk_file_chooser_unselect_file (GtkFileChooser *, GFile *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:202:NC */ extern GSList *gtk_file_chooser_get_files (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:203:NC */ extern gboolean gtk_file_chooser_set_current_folder_file (GtkFileChooser *, GFile *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:206:NC */ extern GFile *gtk_file_chooser_get_current_folder_file (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:210:NC */ extern void gtk_file_chooser_set_preview_widget (GtkFileChooser *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:212:NC */ extern GtkWidget *gtk_file_chooser_get_preview_widget (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:213:NC */ extern void gtk_file_chooser_set_preview_widget_active (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:215:NC */ extern gboolean gtk_file_chooser_get_preview_widget_active (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:216:NC */ extern void gtk_file_chooser_set_use_preview_label (GtkFileChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:218:NC */ extern gboolean gtk_file_chooser_get_use_preview_label (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:220:NC */ extern char *gtk_file_chooser_get_preview_filename (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:221:NC */ extern char *gtk_file_chooser_get_preview_uri (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:222:NC */ extern GFile *gtk_file_chooser_get_preview_file (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:226:NC */ extern void gtk_file_chooser_set_extra_widget (GtkFileChooser *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:228:NC */ extern GtkWidget *gtk_file_chooser_get_extra_widget (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:232:NC */ extern void gtk_file_chooser_add_filter (GtkFileChooser *, GtkFileFilter *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:234:NC */ extern void gtk_file_chooser_remove_filter (GtkFileChooser *, GtkFileFilter *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:236:NC */ extern GSList *gtk_file_chooser_list_filters (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:240:NC */ extern void gtk_file_chooser_set_filter (GtkFileChooser *, GtkFileFilter *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:242:NC */ extern GtkFileFilter *gtk_file_chooser_get_filter (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:246:NC */ extern gboolean gtk_file_chooser_add_shortcut_folder (GtkFileChooser *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:249:NC */ extern gboolean gtk_file_chooser_remove_shortcut_folder (GtkFileChooser *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:252:NC */ extern GSList *gtk_file_chooser_list_shortcut_folders (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:254:NC */ extern gboolean gtk_file_chooser_add_shortcut_folder_uri (GtkFileChooser *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:257:NC */ extern gboolean gtk_file_chooser_remove_shortcut_folder_uri (GtkFileChooser *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkfilechooser.h:260:NC */ extern GSList *gtk_file_chooser_list_shortcut_folder_uris (GtkFileChooser *);
/* /usr/include/gtk-2.0/gtk/gtkhbox.h:62:NC */ extern GType gtk_hbox_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhbox.h:63:NC */ extern GtkWidget *gtk_hbox_new (gboolean, gint);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:69:NC */ extern GType gtk_file_chooser_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:70:NC */ extern GtkWidget *gtk_file_chooser_button_new (const gchar *, GtkFileChooserAction);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:74:NC */ extern GtkWidget *gtk_file_chooser_button_new_with_backend (const gchar *, GtkFileChooserAction, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:79:NC */ extern GtkWidget *gtk_file_chooser_button_new_with_dialog (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:80:NC */ extern const gchar *gtk_file_chooser_button_get_title (GtkFileChooserButton *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:81:NC */ extern void gtk_file_chooser_button_set_title (GtkFileChooserButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:83:NC */ extern gint gtk_file_chooser_button_get_width_chars (GtkFileChooserButton *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:84:NC */ extern void gtk_file_chooser_button_set_width_chars (GtkFileChooserButton *, gint);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:86:NC */ extern gboolean gtk_file_chooser_button_get_focus_on_click (GtkFileChooserButton *);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserbutton.h:87:NC */ extern void gtk_file_chooser_button_set_focus_on_click (GtkFileChooserButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserdialog.h:56:NC */ extern GType gtk_file_chooser_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserdialog.h:57:NC */ extern GtkWidget *gtk_file_chooser_dialog_new (const gchar *, GtkWindow *, GtkFileChooserAction, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserdialog.h:64:NC */ extern GtkWidget *gtk_file_chooser_dialog_new_with_backend (const gchar *, GtkWindow *, GtkFileChooserAction, const gchar *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserwidget.h:56:NC */ extern GType gtk_file_chooser_widget_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserwidget.h:57:NC */ extern GtkWidget *gtk_file_chooser_widget_new (GtkFileChooserAction);
/* /usr/include/gtk-2.0/gtk/gtkfilechooserwidget.h:61:NC */ extern GtkWidget *gtk_file_chooser_widget_new_with_backend (GtkFileChooserAction, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:74:NC */ extern GType gtk_font_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:75:NC */ extern GtkWidget *gtk_font_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:76:NC */ extern GtkWidget *gtk_font_button_new_with_font (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:78:NC */ extern const gchar *gtk_font_button_get_title (GtkFontButton *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:79:NC */ extern void gtk_font_button_set_title (GtkFontButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:81:NC */ extern gboolean gtk_font_button_get_use_font (GtkFontButton *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:82:NC */ extern void gtk_font_button_set_use_font (GtkFontButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:84:NC */ extern gboolean gtk_font_button_get_use_size (GtkFontButton *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:85:NC */ extern void gtk_font_button_set_use_size (GtkFontButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:87:NC */ extern const gchar *gtk_font_button_get_font_name (GtkFontButton *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:88:NC */ extern gboolean gtk_font_button_set_font_name (GtkFontButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:90:NC */ extern gboolean gtk_font_button_get_show_style (GtkFontButton *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:91:NC */ extern void gtk_font_button_set_show_style (GtkFontButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:93:NC */ extern gboolean gtk_font_button_get_show_size (GtkFontButton *);
/* /usr/include/gtk-2.0/gtk/gtkfontbutton.h:94:NC */ extern void gtk_font_button_set_show_size (GtkFontButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:145:NC */ extern GType gtk_font_selection_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:146:NC */ extern GtkWidget *gtk_font_selection_new (void);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:147:NC */ extern GtkWidget *gtk_font_selection_get_family_list (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:148:NC */ extern GtkWidget *gtk_font_selection_get_face_list (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:149:NC */ extern GtkWidget *gtk_font_selection_get_size_entry (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:150:NC */ extern GtkWidget *gtk_font_selection_get_size_list (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:151:NC */ extern GtkWidget *gtk_font_selection_get_preview_entry (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:153:NC */ extern PangoFontFamily *gtk_font_selection_get_family (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:155:NC */ extern PangoFontFace *gtk_font_selection_get_face (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:156:NC */ extern gint gtk_font_selection_get_size (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:157:NC */ extern gchar *gtk_font_selection_get_font_name (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:160:NC */ extern GdkFont *gtk_font_selection_get_font (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:163:NC */ extern gboolean gtk_font_selection_set_font_name (GtkFontSelection *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:165:NC */ extern const gchar *gtk_font_selection_get_preview_text (GtkFontSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:166:NC */ extern void gtk_font_selection_set_preview_text (GtkFontSelection *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:175:NC */ extern GType gtk_font_selection_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:176:NC */ extern GtkWidget *gtk_font_selection_dialog_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:178:NC */ extern GtkWidget *gtk_font_selection_dialog_get_ok_button (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:180:NC */ extern GtkWidget *gtk_font_selection_dialog_get_apply_button (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:182:NC */ extern GtkWidget *gtk_font_selection_dialog_get_cancel_button (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:183:NC */ extern GtkWidget *gtk_font_selection_dialog_get_font_selection (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:190:NC */ extern gchar *gtk_font_selection_dialog_get_font_name (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:196:NC */ extern GdkFont *gtk_font_selection_dialog_get_font (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:203:NC */ extern gboolean gtk_font_selection_dialog_set_font_name (GtkFontSelectionDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:209:NC */ extern const gchar *gtk_font_selection_dialog_get_preview_text (GtkFontSelectionDialog *);
/* /usr/include/gtk-2.0/gtk/gtkfontsel.h:213:NC */ extern void gtk_font_selection_dialog_set_preview_text (GtkFontSelectionDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkgc.h:40:NC */ extern GdkGC *gtk_gc_get (gint, GdkColormap *, GdkGCValues *, GdkGCValuesMask);
/* /usr/include/gtk-2.0/gtk/gtkgc.h:44:NC */ extern void gtk_gc_release (GdkGC *);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:97:NC */ extern GType gtk_handle_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:98:NC */ extern GtkWidget *gtk_handle_box_new (void);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:99:NC */ extern void gtk_handle_box_set_shadow_type (GtkHandleBox *, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:101:NC */ extern GtkShadowType gtk_handle_box_get_shadow_type (GtkHandleBox *);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:102:NC */ extern void gtk_handle_box_set_handle_position (GtkHandleBox *, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:104:NC */ extern GtkPositionType gtk_handle_box_get_handle_position (GtkHandleBox *);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:105:NC */ extern void gtk_handle_box_set_snap_edge (GtkHandleBox *, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:107:NC */ extern GtkPositionType gtk_handle_box_get_snap_edge (GtkHandleBox *);
/* /usr/include/gtk-2.0/gtk/gtkhandlebox.h:108:NC */ extern gboolean gtk_handle_box_get_child_detached (GtkHandleBox *);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:62:NC */ extern GType gtk_hbutton_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:63:NC */ extern GtkWidget *gtk_hbutton_box_new (void);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:68:NC */ extern gint gtk_hbutton_box_get_spacing_default (void);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:69:NC */ extern GtkButtonBoxStyle gtk_hbutton_box_get_layout_default (void);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:71:NC */ extern void gtk_hbutton_box_set_spacing_default (gint);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:72:NC */ extern void gtk_hbutton_box_set_layout_default (GtkButtonBoxStyle);
/* /usr/include/gtk-2.0/gtk/gtkhbbox.h:76:NC */ extern GtkButtonBoxStyle _gtk_hbutton_box_get_layout_default (void);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:109:NC */ extern GType gtk_paned_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:110:NC */ extern void gtk_paned_add1 (GtkPaned *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:112:NC */ extern void gtk_paned_add2 (GtkPaned *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:114:NC */ extern void gtk_paned_pack1 (GtkPaned *, GtkWidget *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:118:NC */ extern void gtk_paned_pack2 (GtkPaned *, GtkWidget *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:123:NC */ extern gint gtk_paned_get_position (GtkPaned *);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:124:NC */ extern void gtk_paned_set_position (GtkPaned *, gint);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:127:NC */ extern GtkWidget *gtk_paned_get_child1 (GtkPaned *);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:128:NC */ extern GtkWidget *gtk_paned_get_child2 (GtkPaned *);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:130:NC */ extern GdkWindow *gtk_paned_get_handle_window (GtkPaned *);
/* /usr/include/gtk-2.0/gtk/gtkpaned.h:134:NC */ extern void gtk_paned_compute_position (GtkPaned *, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkhpaned.h:60:NC */ extern GType gtk_hpaned_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhpaned.h:61:NC */ extern GtkWidget *gtk_hpaned_new (void);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:114:NC */ extern GType gtk_ruler_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:115:NC */ extern void gtk_ruler_set_metric (GtkRuler *, GtkMetricType);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:117:NC */ extern GtkMetricType gtk_ruler_get_metric (GtkRuler *);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:118:NC */ extern void gtk_ruler_set_range (GtkRuler *, gdouble, gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:123:NC */ extern void gtk_ruler_get_range (GtkRuler *, gdouble *, gdouble *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:129:NC */ extern void gtk_ruler_draw_ticks (GtkRuler *);
/* /usr/include/gtk-2.0/gtk/gtkruler.h:130:NC */ extern void gtk_ruler_draw_pos (GtkRuler *);
/* /usr/include/gtk-2.0/gtk/gtkhruler.h:75:NC */ extern GType gtk_hruler_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhruler.h:76:NC */ extern GtkWidget *gtk_hruler_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:136:NC */ extern GType gtk_range_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:139:NC */ extern void gtk_range_set_update_policy (GtkRange *, GtkUpdateType);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:141:NC */ extern GtkUpdateType gtk_range_get_update_policy (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:144:NC */ extern void gtk_range_set_adjustment (GtkRange *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:146:NC */ extern GtkAdjustment *gtk_range_get_adjustment (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:148:NC */ extern void gtk_range_set_inverted (GtkRange *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:150:NC */ extern gboolean gtk_range_get_inverted (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:152:NC */ extern void gtk_range_set_flippable (GtkRange *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:154:NC */ extern gboolean gtk_range_get_flippable (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:156:NC */ extern void gtk_range_set_slider_size_fixed (GtkRange *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:158:NC */ extern gboolean gtk_range_get_slider_size_fixed (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:160:NC */ extern void gtk_range_set_min_slider_size (GtkRange *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:162:NC */ extern gint gtk_range_get_min_slider_size (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:164:NC */ extern void gtk_range_get_range_rect (GtkRange *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:166:NC */ extern void gtk_range_get_slider_range (GtkRange *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:170:NC */ extern void gtk_range_set_lower_stepper_sensitivity (GtkRange *, GtkSensitivityType);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:172:NC */ extern GtkSensitivityType gtk_range_get_lower_stepper_sensitivity (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:173:NC */ extern void gtk_range_set_upper_stepper_sensitivity (GtkRange *, GtkSensitivityType);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:175:NC */ extern GtkSensitivityType gtk_range_get_upper_stepper_sensitivity (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:177:NC */ extern void gtk_range_set_increments (GtkRange *, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:180:NC */ extern void gtk_range_set_range (GtkRange *, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:183:NC */ extern void gtk_range_set_value (GtkRange *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:185:NC */ extern gdouble gtk_range_get_value (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:187:NC */ extern void gtk_range_set_show_fill_level (GtkRange *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:189:NC */ extern gboolean gtk_range_get_show_fill_level (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:190:NC */ extern void gtk_range_set_restrict_to_fill_level (GtkRange *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:192:NC */ extern gboolean gtk_range_get_restrict_to_fill_level (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:193:NC */ extern void gtk_range_set_fill_level (GtkRange *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:195:NC */ extern gdouble gtk_range_get_fill_level (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:196:NC */ extern void gtk_range_set_round_digits (GtkRange *, gint);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:198:NC */ extern gint gtk_range_get_round_digits (GtkRange *);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:202:NC */ extern gdouble _gtk_range_get_wheel_delta (GtkRange *, GdkScrollDirection);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:205:NC */ extern void _gtk_range_set_stop_values (GtkRange *, gdouble *, gint);
/* /usr/include/gtk-2.0/gtk/gtkrange.h:208:NC */ extern gint _gtk_range_get_stop_positions (GtkRange *, gint **);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:79:NC */ extern GType gtk_scale_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:80:NC */ extern void gtk_scale_set_digits (GtkScale *, gint);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:82:NC */ extern gint gtk_scale_get_digits (GtkScale *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:83:NC */ extern void gtk_scale_set_draw_value (GtkScale *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:85:NC */ extern gboolean gtk_scale_get_draw_value (GtkScale *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:86:NC */ extern void gtk_scale_set_value_pos (GtkScale *, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:88:NC */ extern GtkPositionType gtk_scale_get_value_pos (GtkScale *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:90:NC */ extern PangoLayout *gtk_scale_get_layout (GtkScale *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:91:NC */ extern void gtk_scale_get_layout_offsets (GtkScale *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:95:NC */ extern void gtk_scale_add_mark (GtkScale *, gdouble, GtkPositionType, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:99:NC */ extern void gtk_scale_clear_marks (GtkScale *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:102:NC */ extern void _gtk_scale_clear_layout (GtkScale *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:103:NC */ extern void _gtk_scale_get_value_size (GtkScale *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkscale.h:106:NC */ extern gchar *_gtk_scale_format_value (GtkScale *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkhscale.h:62:NC */ extern GType gtk_hscale_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhscale.h:63:NC */ extern GtkWidget *gtk_hscale_new (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkhscale.h:64:NC */ extern GtkWidget *gtk_hscale_new_with_range (gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkscrollbar.h:68:NC */ extern GType gtk_scrollbar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhscrollbar.h:63:NC */ extern GType gtk_hscrollbar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhscrollbar.h:64:NC */ extern GtkWidget *gtk_hscrollbar_new (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkseparator.h:62:NC */ extern GType gtk_separator_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhseparator.h:62:NC */ extern GType gtk_hseparator_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhseparator.h:63:NC */ extern GtkWidget *gtk_hseparator_new (void);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:81:NC */ extern GType gtk_hsv_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:82:NC */ extern GtkWidget *gtk_hsv_new (void);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:83:NC */ extern void gtk_hsv_set_color (GtkHSV *, double, double, double);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:87:NC */ extern void gtk_hsv_get_color (GtkHSV *, gdouble *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:91:NC */ extern void gtk_hsv_set_metrics (GtkHSV *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:94:NC */ extern void gtk_hsv_get_metrics (GtkHSV *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:97:NC */ extern gboolean gtk_hsv_is_adjusting (GtkHSV *);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:100:NC */ extern void gtk_hsv_to_rgb (gdouble, gdouble, gdouble, gdouble *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkhsv.h:106:NC */ extern void gtk_rgb_to_hsv (gdouble, gdouble, gdouble, gdouble *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:74:NC */ extern GType gtk_icon_factory_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:75:NC */ extern GtkIconFactory *gtk_icon_factory_new (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:76:NC */ extern void gtk_icon_factory_add (GtkIconFactory *, const gchar *, GtkIconSet *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:79:NC */ extern GtkIconSet *gtk_icon_factory_lookup (GtkIconFactory *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:84:NC */ extern void gtk_icon_factory_add_default (GtkIconFactory *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:85:NC */ extern void gtk_icon_factory_remove_default (GtkIconFactory *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:86:NC */ extern GtkIconSet *gtk_icon_factory_lookup_default (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:100:NC */ extern gboolean gtk_icon_size_lookup (GtkIconSize, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:104:NC */ extern gboolean gtk_icon_size_lookup_for_settings (GtkSettings *, GtkIconSize, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:109:NC */ extern GtkIconSize gtk_icon_size_register (const gchar *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:112:NC */ extern void gtk_icon_size_register_alias (const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:114:NC */ extern GtkIconSize gtk_icon_size_from_name (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:115:NC */ extern const gchar *gtk_icon_size_get_name (GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:119:NC */ extern GType gtk_icon_set_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:120:NC */ extern GtkIconSet *gtk_icon_set_new (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:121:NC */ extern GtkIconSet *gtk_icon_set_new_from_pixbuf (GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:123:NC */ extern GtkIconSet *gtk_icon_set_ref (GtkIconSet *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:124:NC */ extern void gtk_icon_set_unref (GtkIconSet *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:125:NC */ extern GtkIconSet *gtk_icon_set_copy (GtkIconSet *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:130:NC */ extern GdkPixbuf *gtk_icon_set_render_icon (GtkIconSet *, GtkStyle *, GtkTextDirection, GtkStateType, GtkIconSize, GtkWidget *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:139:NC */ extern void gtk_icon_set_add_source (GtkIconSet *, const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:142:NC */ extern void gtk_icon_set_get_sizes (GtkIconSet *, GtkIconSize **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:146:NC */ extern GType gtk_icon_source_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:147:NC */ extern GtkIconSource *gtk_icon_source_new (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:148:NC */ extern GtkIconSource *gtk_icon_source_copy (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:149:NC */ extern void gtk_icon_source_free (GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:151:NC */ extern void gtk_icon_source_set_filename (GtkIconSource *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:153:NC */ extern void gtk_icon_source_set_icon_name (GtkIconSource *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:155:NC */ extern void gtk_icon_source_set_pixbuf (GtkIconSource *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:158:NC */ extern const gchar *gtk_icon_source_get_filename (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:159:NC */ extern const gchar *gtk_icon_source_get_icon_name (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:160:NC */ extern GdkPixbuf *gtk_icon_source_get_pixbuf (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:162:NC */ extern void gtk_icon_source_set_direction_wildcarded (GtkIconSource *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:164:NC */ extern void gtk_icon_source_set_state_wildcarded (GtkIconSource *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:166:NC */ extern void gtk_icon_source_set_size_wildcarded (GtkIconSource *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:168:NC */ extern gboolean gtk_icon_source_get_size_wildcarded (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:169:NC */ extern gboolean gtk_icon_source_get_state_wildcarded (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:170:NC */ extern gboolean gtk_icon_source_get_direction_wildcarded (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:171:NC */ extern void gtk_icon_source_set_direction (GtkIconSource *, GtkTextDirection);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:173:NC */ extern void gtk_icon_source_set_state (GtkIconSource *, GtkStateType);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:175:NC */ extern void gtk_icon_source_set_size (GtkIconSource *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:177:NC */ extern GtkTextDirection gtk_icon_source_get_direction (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:178:NC */ extern GtkStateType gtk_icon_source_get_state (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:179:NC */ extern GtkIconSize gtk_icon_source_get_size (const GtkIconSource *);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:183:NC */ extern void _gtk_icon_set_invalidate_caches (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:184:NC */ extern GList *_gtk_icon_factory_list_ids (void);
/* /usr/include/gtk-2.0/gtk/gtkiconfactory.h:185:NC */ extern void _gtk_icon_factory_ensure_default_icons (void);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:103:NC */ extern GQuark gtk_icon_theme_error_quark (void);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:114:NC */ extern GType gtk_icon_theme_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:116:NC */ extern GtkIconTheme *gtk_icon_theme_new (void);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:117:NC */ extern GtkIconTheme *gtk_icon_theme_get_default (void);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:118:NC */ extern GtkIconTheme *gtk_icon_theme_get_for_screen (GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:119:NC */ extern void gtk_icon_theme_set_screen (GtkIconTheme *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:122:NC */ extern void gtk_icon_theme_set_search_path (GtkIconTheme *, const gchar **, gint);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:125:NC */ extern void gtk_icon_theme_get_search_path (GtkIconTheme *, gchar ***, gint *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:128:NC */ extern void gtk_icon_theme_append_search_path (GtkIconTheme *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:130:NC */ extern void gtk_icon_theme_prepend_search_path (GtkIconTheme *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:133:NC */ extern void gtk_icon_theme_set_custom_theme (GtkIconTheme *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:136:NC */ extern gboolean gtk_icon_theme_has_icon (GtkIconTheme *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:138:NC */ extern gint *gtk_icon_theme_get_icon_sizes (GtkIconTheme *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:140:NC */ extern GtkIconInfo *gtk_icon_theme_lookup_icon (GtkIconTheme *, const gchar *, gint, GtkIconLookupFlags);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:144:NC */ extern GtkIconInfo *gtk_icon_theme_choose_icon (GtkIconTheme *, const gchar **, gint, GtkIconLookupFlags);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:148:NC */ extern GdkPixbuf *gtk_icon_theme_load_icon (GtkIconTheme *, const gchar *, gint, GtkIconLookupFlags, GError **);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:154:NC */ extern GtkIconInfo *gtk_icon_theme_lookup_by_gicon (GtkIconTheme *, GIcon *, gint, GtkIconLookupFlags);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:159:NC */ extern GList *gtk_icon_theme_list_icons (GtkIconTheme *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:161:NC */ extern GList *gtk_icon_theme_list_contexts (GtkIconTheme *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:162:NC */ extern char *gtk_icon_theme_get_example_icon_name (GtkIconTheme *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:164:NC */ extern gboolean gtk_icon_theme_rescan_if_needed (GtkIconTheme *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:166:NC */ extern void gtk_icon_theme_add_builtin_icon (const gchar *, gint, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:170:NC */ extern GType gtk_icon_info_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:171:NC */ extern GtkIconInfo *gtk_icon_info_copy (GtkIconInfo *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:172:NC */ extern void gtk_icon_info_free (GtkIconInfo *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:174:NC */ extern GtkIconInfo *gtk_icon_info_new_for_pixbuf (GtkIconTheme *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:177:NC */ extern gint gtk_icon_info_get_base_size (GtkIconInfo *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:178:NC */ extern const gchar *gtk_icon_info_get_filename (GtkIconInfo *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:179:NC */ extern GdkPixbuf *gtk_icon_info_get_builtin_pixbuf (GtkIconInfo *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:180:NC */ extern GdkPixbuf *gtk_icon_info_load_icon (GtkIconInfo *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:182:NC */ extern void gtk_icon_info_set_raw_coordinates (GtkIconInfo *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:185:NC */ extern gboolean gtk_icon_info_get_embedded_rect (GtkIconInfo *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:187:NC */ extern gboolean gtk_icon_info_get_attach_points (GtkIconInfo *, GdkPoint **, gint *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:190:NC */ extern const gchar *gtk_icon_info_get_display_name (GtkIconInfo *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:193:NC */ extern void _gtk_icon_theme_check_reload (GdkDisplay *);
/* /usr/include/gtk-2.0/gtk/gtkicontheme.h:194:NC */ extern void _gtk_icon_theme_ensure_builtin_cache (void);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:37:NC */ extern GType gtk_tooltip_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:39:NC */ extern void gtk_tooltip_set_markup (GtkTooltip *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:41:NC */ extern void gtk_tooltip_set_text (GtkTooltip *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:43:NC */ extern void gtk_tooltip_set_icon (GtkTooltip *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:45:NC */ extern void gtk_tooltip_set_icon_from_stock (GtkTooltip *, const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:48:NC */ extern void gtk_tooltip_set_icon_from_icon_name (GtkTooltip *, const gchar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:51:NC */ extern void gtk_tooltip_set_icon_from_gicon (GtkTooltip *, GIcon *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:54:NC */ extern void gtk_tooltip_set_custom (GtkTooltip *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:57:NC */ extern void gtk_tooltip_set_tip_area (GtkTooltip *, const GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:60:NC */ extern void gtk_tooltip_trigger_tooltip_query (GdkDisplay *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:63:NC */ extern void _gtk_tooltip_focus_in (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:64:NC */ extern void _gtk_tooltip_focus_out (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:65:NC */ extern void _gtk_tooltip_toggle_keyboard_mode (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:66:NC */ extern void _gtk_tooltip_handle_event (GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:67:NC */ extern void _gtk_tooltip_hide (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktooltip.h:69:NC */ extern GtkWidget *_gtk_widget_find_at_coords (GdkWindow *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:90:NC */ extern GType gtk_icon_view_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:91:NC */ extern GtkWidget *gtk_icon_view_new (void);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:92:NC */ extern GtkWidget *gtk_icon_view_new_with_model (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:94:NC */ extern void gtk_icon_view_set_model (GtkIconView *, GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:96:NC */ extern GtkTreeModel *gtk_icon_view_get_model (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:97:NC */ extern void gtk_icon_view_set_text_column (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:99:NC */ extern gint gtk_icon_view_get_text_column (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:100:NC */ extern void gtk_icon_view_set_markup_column (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:102:NC */ extern gint gtk_icon_view_get_markup_column (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:103:NC */ extern void gtk_icon_view_set_pixbuf_column (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:105:NC */ extern gint gtk_icon_view_get_pixbuf_column (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:107:NC */ extern void gtk_icon_view_set_orientation (GtkIconView *, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:109:NC */ extern GtkOrientation gtk_icon_view_get_orientation (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:110:NC */ extern void gtk_icon_view_set_item_orientation (GtkIconView *, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:112:NC */ extern GtkOrientation gtk_icon_view_get_item_orientation (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:113:NC */ extern void gtk_icon_view_set_columns (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:115:NC */ extern gint gtk_icon_view_get_columns (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:116:NC */ extern void gtk_icon_view_set_item_width (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:118:NC */ extern gint gtk_icon_view_get_item_width (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:119:NC */ extern void gtk_icon_view_set_spacing (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:121:NC */ extern gint gtk_icon_view_get_spacing (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:122:NC */ extern void gtk_icon_view_set_row_spacing (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:124:NC */ extern gint gtk_icon_view_get_row_spacing (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:125:NC */ extern void gtk_icon_view_set_column_spacing (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:127:NC */ extern gint gtk_icon_view_get_column_spacing (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:128:NC */ extern void gtk_icon_view_set_margin (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:130:NC */ extern gint gtk_icon_view_get_margin (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:131:NC */ extern void gtk_icon_view_set_item_padding (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:133:NC */ extern gint gtk_icon_view_get_item_padding (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:136:NC */ extern GtkTreePath *gtk_icon_view_get_path_at_pos (GtkIconView *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:139:NC */ extern gboolean gtk_icon_view_get_item_at_pos (GtkIconView *, gint, gint, GtkTreePath **, GtkCellRenderer **);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:144:NC */ extern gboolean gtk_icon_view_get_visible_range (GtkIconView *, GtkTreePath **, GtkTreePath **);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:148:NC */ extern void gtk_icon_view_selected_foreach (GtkIconView *, GtkIconViewForeachFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:151:NC */ extern void gtk_icon_view_set_selection_mode (GtkIconView *, GtkSelectionMode);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:153:NC */ extern GtkSelectionMode gtk_icon_view_get_selection_mode (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:154:NC */ extern void gtk_icon_view_select_path (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:156:NC */ extern void gtk_icon_view_unselect_path (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:158:NC */ extern gboolean gtk_icon_view_path_is_selected (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:160:NC */ extern gint gtk_icon_view_get_item_row (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:162:NC */ extern gint gtk_icon_view_get_item_column (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:164:NC */ extern GList *gtk_icon_view_get_selected_items (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:165:NC */ extern void gtk_icon_view_select_all (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:166:NC */ extern void gtk_icon_view_unselect_all (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:167:NC */ extern void gtk_icon_view_item_activated (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:169:NC */ extern void gtk_icon_view_set_cursor (GtkIconView *, GtkTreePath *, GtkCellRenderer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:173:NC */ extern gboolean gtk_icon_view_get_cursor (GtkIconView *, GtkTreePath **, GtkCellRenderer **);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:176:NC */ extern void gtk_icon_view_scroll_to_path (GtkIconView *, GtkTreePath *, gboolean, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:183:NC */ extern void gtk_icon_view_enable_model_drag_source (GtkIconView *, GdkModifierType, const GtkTargetEntry *, gint, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:188:NC */ extern void gtk_icon_view_enable_model_drag_dest (GtkIconView *, const GtkTargetEntry *, gint, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:192:NC */ extern void gtk_icon_view_unset_model_drag_source (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:193:NC */ extern void gtk_icon_view_unset_model_drag_dest (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:194:NC */ extern void gtk_icon_view_set_reorderable (GtkIconView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:196:NC */ extern gboolean gtk_icon_view_get_reorderable (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:200:NC */ extern void gtk_icon_view_set_drag_dest_item (GtkIconView *, GtkTreePath *, GtkIconViewDropPosition);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:203:NC */ extern void gtk_icon_view_get_drag_dest_item (GtkIconView *, GtkTreePath **, GtkIconViewDropPosition *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:206:NC */ extern gboolean gtk_icon_view_get_dest_item_at_pos (GtkIconView *, gint, gint, GtkTreePath **, GtkIconViewDropPosition *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:211:NC */ extern GdkPixmap *gtk_icon_view_create_drag_icon (GtkIconView *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:214:NC */ extern void gtk_icon_view_convert_widget_to_bin_window_coords (GtkIconView *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:221:NC */ extern void gtk_icon_view_set_tooltip_item (GtkIconView *, GtkTooltip *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:224:NC */ extern void gtk_icon_view_set_tooltip_cell (GtkIconView *, GtkTooltip *, GtkTreePath *, GtkCellRenderer *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:228:NC */ extern gboolean gtk_icon_view_get_tooltip_context (GtkIconView *, gint *, gint *, gboolean, GtkTreeModel **, GtkTreePath **, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:235:NC */ extern void gtk_icon_view_set_tooltip_column (GtkIconView *, gint);
/* /usr/include/gtk-2.0/gtk/gtkiconview.h:237:NC */ extern gint gtk_icon_view_get_tooltip_column (GtkIconView *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:66:NC */ extern GType gtk_image_menu_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:67:NC */ extern GtkWidget *gtk_image_menu_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:68:NC */ extern GtkWidget *gtk_image_menu_item_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:69:NC */ extern GtkWidget *gtk_image_menu_item_new_with_mnemonic (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:70:NC */ extern GtkWidget *gtk_image_menu_item_new_from_stock (const gchar *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:72:NC */ extern void gtk_image_menu_item_set_always_show_image (GtkImageMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:74:NC */ extern gboolean gtk_image_menu_item_get_always_show_image (GtkImageMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:75:NC */ extern void gtk_image_menu_item_set_image (GtkImageMenuItem *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:77:NC */ extern GtkWidget *gtk_image_menu_item_get_image (GtkImageMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:78:NC */ extern void gtk_image_menu_item_set_use_stock (GtkImageMenuItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:80:NC */ extern gboolean gtk_image_menu_item_get_use_stock (GtkImageMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkimagemenuitem.h:81:NC */ extern void gtk_image_menu_item_set_accel_group (GtkImageMenuItem *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkimcontextsimple.h:65:NC */ extern GType gtk_im_context_simple_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkimcontextsimple.h:66:NC */ extern GtkIMContext *gtk_im_context_simple_new (void);
/* /usr/include/gtk-2.0/gtk/gtkimcontextsimple.h:68:NC */ extern void gtk_im_context_simple_add_table (GtkIMContextSimple *, guint16 *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkimmulticontext.h:66:NC */ extern GType gtk_im_multicontext_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkimmulticontext.h:67:NC */ extern GtkIMContext *gtk_im_multicontext_new (void);
/* /usr/include/gtk-2.0/gtk/gtkimmulticontext.h:69:NC */ extern void gtk_im_multicontext_append_menuitems (GtkIMMulticontext *, GtkMenuShell *);
/* /usr/include/gtk-2.0/gtk/gtkimmulticontext.h:71:NC */ extern const char *gtk_im_multicontext_get_context_id (GtkIMMulticontext *);
/* /usr/include/gtk-2.0/gtk/gtkimmulticontext.h:73:NC */ extern void gtk_im_multicontext_set_context_id (GtkIMMulticontext *, const char *);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:87:NC */ extern GType gtk_info_bar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:88:NC */ extern GtkWidget *gtk_info_bar_new (void);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:90:NC */ extern GtkWidget *gtk_info_bar_new_with_buttons (const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:93:NC */ extern GtkWidget *gtk_info_bar_get_action_area (GtkInfoBar *);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:94:NC */ extern GtkWidget *gtk_info_bar_get_content_area (GtkInfoBar *);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:95:NC */ extern void gtk_info_bar_add_action_widget (GtkInfoBar *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:98:NC */ extern GtkWidget *gtk_info_bar_add_button (GtkInfoBar *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:101:NC */ extern void gtk_info_bar_add_buttons (GtkInfoBar *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:104:NC */ extern void gtk_info_bar_set_response_sensitive (GtkInfoBar *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:107:NC */ extern void gtk_info_bar_set_default_response (GtkInfoBar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:111:NC */ extern void gtk_info_bar_response (GtkInfoBar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:114:NC */ extern void gtk_info_bar_set_message_type (GtkInfoBar *, GtkMessageType);
/* /usr/include/gtk-2.0/gtk/gtkinfobar.h:116:NC */ extern GtkMessageType gtk_info_bar_get_message_type (GtkInfoBar *);
/* /usr/include/gtk-2.0/gtk/gtkinvisible.h:68:NC */ extern GType gtk_invisible_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkinvisible.h:70:NC */ extern GtkWidget *gtk_invisible_new (void);
/* /usr/include/gtk-2.0/gtk/gtkinvisible.h:71:NC */ extern GtkWidget *gtk_invisible_new_for_screen (GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkinvisible.h:72:NC */ extern void gtk_invisible_set_screen (GtkInvisible *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkinvisible.h:74:NC */ extern GdkScreen *gtk_invisible_get_screen (GtkInvisible *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:94:NC */ extern GType gtk_layout_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:95:NC */ extern GtkWidget *gtk_layout_new (GtkAdjustment *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:97:NC */ extern GdkWindow *gtk_layout_get_bin_window (GtkLayout *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:98:NC */ extern void gtk_layout_put (GtkLayout *, GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:103:NC */ extern void gtk_layout_move (GtkLayout *, GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:108:NC */ extern void gtk_layout_set_size (GtkLayout *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:111:NC */ extern void gtk_layout_get_size (GtkLayout *, guint *, guint *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:115:NC */ extern GtkAdjustment *gtk_layout_get_hadjustment (GtkLayout *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:116:NC */ extern GtkAdjustment *gtk_layout_get_vadjustment (GtkLayout *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:117:NC */ extern void gtk_layout_set_hadjustment (GtkLayout *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:119:NC */ extern void gtk_layout_set_vadjustment (GtkLayout *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:132:NC */ extern void gtk_layout_freeze (GtkLayout *);
/* /usr/include/gtk-2.0/gtk/gtklayout.h:133:NC */ extern void gtk_layout_thaw (GtkLayout *);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:68:NC */ extern GType gtk_link_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:70:NC */ extern GtkWidget *gtk_link_button_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:71:NC */ extern GtkWidget *gtk_link_button_new_with_label (const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:74:NC */ extern const gchar *gtk_link_button_get_uri (GtkLinkButton *);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:75:NC */ extern void gtk_link_button_set_uri (GtkLinkButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:79:NC */ extern GtkLinkButtonUriFunc gtk_link_button_set_uri_hook (GtkLinkButtonUriFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:84:NC */ extern gboolean gtk_link_button_get_visited (GtkLinkButton *);
/* /usr/include/gtk-2.0/gtk/gtklinkbutton.h:85:NC */ extern void gtk_link_button_set_visited (GtkLinkButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:83:NC */ extern const gchar *gtk_check_version (guint, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:91:NC */ extern gboolean gtk_parse_args (int *, char ***);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:94:NC */ extern void gtk_init (int *, char ***);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:97:NC */ extern gboolean gtk_init_check (int *, char ***);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:100:NC */ extern gboolean gtk_init_with_args (int *, char ***, const char *, GOptionEntry *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:107:NC */ extern GOptionGroup *gtk_get_option_group (gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:131:NC */ extern void gtk_exit (gint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:132:NC */ extern gchar *gtk_set_locale (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:135:NC */ extern void gtk_disable_setlocale (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:136:NC */ extern PangoLanguage *gtk_get_default_language (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:137:NC */ extern gboolean gtk_events_pending (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:143:NC */ extern void gtk_main_do_event (GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:145:NC */ extern void gtk_main (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:146:NC */ extern guint gtk_main_level (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:147:NC */ extern void gtk_main_quit (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:148:NC */ extern gboolean gtk_main_iteration (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:150:NC */ extern gboolean gtk_main_iteration_do (gboolean);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:152:NC */ extern gboolean gtk_true (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:153:NC */ extern gboolean gtk_false (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:155:NC */ extern void gtk_grab_add (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:156:NC */ extern GtkWidget *gtk_grab_get_current (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:157:NC */ extern void gtk_grab_remove (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:160:NC */ extern void gtk_init_add (GtkFunction, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:162:NC */ extern void gtk_quit_add_destroy (guint, GtkObject *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:164:NC */ extern guint gtk_quit_add (guint, GtkFunction, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:167:NC */ extern guint gtk_quit_add_full (guint, GtkFunction, GtkCallbackMarshal, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:172:NC */ extern void gtk_quit_remove (guint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:173:NC */ extern void gtk_quit_remove_by_data (gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:174:NC */ extern guint gtk_timeout_add (guint32, GtkFunction, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:177:NC */ extern guint gtk_timeout_add_full (guint32, GtkFunction, GtkCallbackMarshal, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:182:NC */ extern void gtk_timeout_remove (guint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:184:NC */ extern guint gtk_idle_add (GtkFunction, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:186:NC */ extern guint gtk_idle_add_priority (gint, GtkFunction, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:189:NC */ extern guint gtk_idle_add_full (gint, GtkFunction, GtkCallbackMarshal, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:194:NC */ extern void gtk_idle_remove (guint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:195:NC */ extern void gtk_idle_remove_by_data (gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:196:NC */ extern guint gtk_input_add_full (gint, GdkInputCondition, GdkInputFunction, GtkCallbackMarshal, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:202:NC */ extern void gtk_input_remove (guint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:205:NC */ extern guint gtk_key_snooper_install (GtkKeySnoopFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:207:NC */ extern void gtk_key_snooper_remove (guint);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:209:NC */ extern GdkEvent *gtk_get_current_event (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:210:NC */ extern guint32 gtk_get_current_event_time (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:211:NC */ extern gboolean gtk_get_current_event_state (GdkModifierType *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:213:NC */ extern GtkWidget *gtk_get_event_widget (GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:218:NC */ extern void gtk_propagate_event (GtkWidget *, GdkEvent *);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:221:NC */ extern gboolean _gtk_boolean_handled_accumulator (GSignalInvocationHint *, GValue *, const GValue *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:226:NC */ extern gchar *_gtk_get_lc_ctype (void);
/* /usr/include/gtk-2.0/gtk/gtkmain.h:228:NC */ extern gboolean _gtk_module_has_mixed_deps (GModule *);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:68:NC */ extern GType gtk_menu_bar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:69:NC */ extern GtkWidget *gtk_menu_bar_new (void);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:71:NC */ extern GtkPackDirection gtk_menu_bar_get_pack_direction (GtkMenuBar *);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:72:NC */ extern void gtk_menu_bar_set_pack_direction (GtkMenuBar *, GtkPackDirection);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:74:NC */ extern GtkPackDirection gtk_menu_bar_get_child_pack_direction (GtkMenuBar *);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:75:NC */ extern void gtk_menu_bar_set_child_pack_direction (GtkMenuBar *, GtkPackDirection);
/* /usr/include/gtk-2.0/gtk/gtkmenubar.h:85:NC */ extern void _gtk_menu_bar_cycle_focus (GtkMenuBar *, GtkDirectionType);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:87:NC */ extern GType gtk_tooltips_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:88:NC */ extern GtkTooltips *gtk_tooltips_new (void);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:90:NC */ extern void gtk_tooltips_enable (GtkTooltips *);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:91:NC */ extern void gtk_tooltips_disable (GtkTooltips *);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:92:NC */ extern void gtk_tooltips_set_delay (GtkTooltips *, guint);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:94:NC */ extern void gtk_tooltips_set_tip (GtkTooltips *, GtkWidget *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:98:NC */ extern GtkTooltipsData *gtk_tooltips_data_get (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:99:NC */ extern void gtk_tooltips_force_window (GtkTooltips *);
/* /usr/include/gtk-2.0/gtk/gtktooltips.h:101:NC */ extern gboolean gtk_tooltips_get_info_from_tip_window (GtkWindow *, GtkTooltips **, GtkWidget **);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:87:NC */ extern GType gtk_size_group_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:89:NC */ extern GtkSizeGroup *gtk_size_group_new (GtkSizeGroupMode);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:90:NC */ extern void gtk_size_group_set_mode (GtkSizeGroup *, GtkSizeGroupMode);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:92:NC */ extern GtkSizeGroupMode gtk_size_group_get_mode (GtkSizeGroup *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:93:NC */ extern void gtk_size_group_set_ignore_hidden (GtkSizeGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:95:NC */ extern gboolean gtk_size_group_get_ignore_hidden (GtkSizeGroup *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:96:NC */ extern void gtk_size_group_add_widget (GtkSizeGroup *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:98:NC */ extern void gtk_size_group_remove_widget (GtkSizeGroup *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:100:NC */ extern GSList *gtk_size_group_get_widgets (GtkSizeGroup *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:103:NC */ extern void _gtk_size_group_get_child_requisition (GtkWidget *, GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:105:NC */ extern void _gtk_size_group_compute_requisition (GtkWidget *, GtkRequisition *);
/* /usr/include/gtk-2.0/gtk/gtksizegroup.h:107:NC */ extern void _gtk_size_group_queue_resize (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:79:NC */ extern GType gtk_tool_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:80:NC */ extern GtkToolItem *gtk_tool_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:82:NC */ extern void gtk_tool_item_set_homogeneous (GtkToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:84:NC */ extern gboolean gtk_tool_item_get_homogeneous (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:86:NC */ extern void gtk_tool_item_set_expand (GtkToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:88:NC */ extern gboolean gtk_tool_item_get_expand (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:91:NC */ extern void gtk_tool_item_set_tooltip (GtkToolItem *, GtkTooltips *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:96:NC */ extern void gtk_tool_item_set_tooltip_text (GtkToolItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:98:NC */ extern void gtk_tool_item_set_tooltip_markup (GtkToolItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:101:NC */ extern void gtk_tool_item_set_use_drag_window (GtkToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:103:NC */ extern gboolean gtk_tool_item_get_use_drag_window (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:105:NC */ extern void gtk_tool_item_set_visible_horizontal (GtkToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:107:NC */ extern gboolean gtk_tool_item_get_visible_horizontal (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:109:NC */ extern void gtk_tool_item_set_visible_vertical (GtkToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:111:NC */ extern gboolean gtk_tool_item_get_visible_vertical (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:113:NC */ extern gboolean gtk_tool_item_get_is_important (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:114:NC */ extern void gtk_tool_item_set_is_important (GtkToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:117:NC */ extern PangoEllipsizeMode gtk_tool_item_get_ellipsize_mode (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:118:NC */ extern GtkIconSize gtk_tool_item_get_icon_size (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:119:NC */ extern GtkOrientation gtk_tool_item_get_orientation (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:120:NC */ extern GtkToolbarStyle gtk_tool_item_get_toolbar_style (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:121:NC */ extern GtkReliefStyle gtk_tool_item_get_relief_style (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:122:NC */ extern gfloat gtk_tool_item_get_text_alignment (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:123:NC */ extern GtkOrientation gtk_tool_item_get_text_orientation (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:124:NC */ extern GtkSizeGroup *gtk_tool_item_get_text_size_group (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:126:NC */ extern GtkWidget *gtk_tool_item_retrieve_proxy_menu_item (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:127:NC */ extern GtkWidget *gtk_tool_item_get_proxy_menu_item (GtkToolItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:129:NC */ extern void gtk_tool_item_set_proxy_menu_item (GtkToolItem *, const gchar *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:132:NC */ extern void gtk_tool_item_rebuild_menu (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:134:NC */ extern void gtk_tool_item_toolbar_reconfigured (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitem.h:138:NC */ extern gboolean _gtk_tool_item_create_menu_proxy (GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:69:NC */ extern GType gtk_tool_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:70:NC */ extern GtkToolItem *gtk_tool_button_new (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:72:NC */ extern GtkToolItem *gtk_tool_button_new_from_stock (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:74:NC */ extern void gtk_tool_button_set_label (GtkToolButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:76:NC */ extern const gchar *gtk_tool_button_get_label (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:77:NC */ extern void gtk_tool_button_set_use_underline (GtkToolButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:79:NC */ extern gboolean gtk_tool_button_get_use_underline (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:80:NC */ extern void gtk_tool_button_set_stock_id (GtkToolButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:82:NC */ extern const gchar *gtk_tool_button_get_stock_id (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:83:NC */ extern void gtk_tool_button_set_icon_name (GtkToolButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:85:NC */ extern const gchar *gtk_tool_button_get_icon_name (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:86:NC */ extern void gtk_tool_button_set_icon_widget (GtkToolButton *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:88:NC */ extern GtkWidget *gtk_tool_button_get_icon_widget (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:89:NC */ extern void gtk_tool_button_set_label_widget (GtkToolButton *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:91:NC */ extern GtkWidget *gtk_tool_button_get_label_widget (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtktoolbutton.h:95:NC */ extern GtkWidget *_gtk_tool_button_get_button (GtkToolButton *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:66:NC */ extern GType gtk_menu_tool_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:67:NC */ extern GtkToolItem *gtk_menu_tool_button_new (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:69:NC */ extern GtkToolItem *gtk_menu_tool_button_new_from_stock (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:71:NC */ extern void gtk_menu_tool_button_set_menu (GtkMenuToolButton *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:73:NC */ extern GtkWidget *gtk_menu_tool_button_get_menu (GtkMenuToolButton *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:76:NC */ extern void gtk_menu_tool_button_set_arrow_tooltip (GtkMenuToolButton *, GtkTooltips *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:82:NC */ extern void gtk_menu_tool_button_set_arrow_tooltip_text (GtkMenuToolButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmenutoolbutton.h:84:NC */ extern void gtk_menu_tool_button_set_arrow_tooltip_markup (GtkMenuToolButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:99:NC */ extern GType gtk_message_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:101:NC */ extern GtkWidget *gtk_message_dialog_new (GtkWindow *, GtkDialogFlags, GtkMessageType, GtkButtonsType, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:108:NC */ extern GtkWidget *gtk_message_dialog_new_with_markup (GtkWindow *, GtkDialogFlags, GtkMessageType, GtkButtonsType, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:115:NC */ extern void gtk_message_dialog_set_image (GtkMessageDialog *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:118:NC */ extern GtkWidget *gtk_message_dialog_get_image (GtkMessageDialog *);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:120:NC */ extern void gtk_message_dialog_set_markup (GtkMessageDialog *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:123:NC */ extern void gtk_message_dialog_format_secondary_text (GtkMessageDialog *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:127:NC */ extern void gtk_message_dialog_format_secondary_markup (GtkMessageDialog *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkmessagedialog.h:131:NC */ extern GtkWidget *gtk_message_dialog_get_message_area (GtkMessageDialog *);
/* /usr/include/gtk-2.0/gtk/gtkmodules.h:36:NC */ extern gchar *_gtk_find_module (const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmodules.h:38:NC */ extern gchar **_gtk_get_module_path (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmodules.h:40:NC */ extern void _gtk_modules_init (gint *, gchar ***, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmodules.h:43:NC */ extern void _gtk_modules_settings_changed (GtkSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:71:NC */ extern GType gtk_mount_operation_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:72:NC */ extern GMountOperation *gtk_mount_operation_new (GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:73:NC */ extern gboolean gtk_mount_operation_is_showing (GtkMountOperation *);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:74:NC */ extern void gtk_mount_operation_set_parent (GtkMountOperation *, GtkWindow *);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:76:NC */ extern GtkWindow *gtk_mount_operation_get_parent (GtkMountOperation *);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:77:NC */ extern void gtk_mount_operation_set_screen (GtkMountOperation *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkmountoperation.h:79:NC */ extern GdkScreen *gtk_mount_operation_get_screen (GtkMountOperation *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:151:NC */ extern GType gtk_notebook_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:152:NC */ extern GtkWidget *gtk_notebook_new (void);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:153:NC */ extern gint gtk_notebook_append_page (GtkNotebook *, GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:156:NC */ extern gint gtk_notebook_append_page_menu (GtkNotebook *, GtkWidget *, GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:160:NC */ extern gint gtk_notebook_prepend_page (GtkNotebook *, GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:163:NC */ extern gint gtk_notebook_prepend_page_menu (GtkNotebook *, GtkWidget *, GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:167:NC */ extern gint gtk_notebook_insert_page (GtkNotebook *, GtkWidget *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:171:NC */ extern gint gtk_notebook_insert_page_menu (GtkNotebook *, GtkWidget *, GtkWidget *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:176:NC */ extern void gtk_notebook_remove_page (GtkNotebook *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:184:NC */ extern void gtk_notebook_set_window_creation_hook (GtkNotebookWindowCreationFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:187:NC */ extern void gtk_notebook_set_group_id (GtkNotebook *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:189:NC */ extern gint gtk_notebook_get_group_id (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:191:NC */ extern void gtk_notebook_set_group (GtkNotebook *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:193:NC */ extern gpointer gtk_notebook_get_group (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:196:NC */ extern void gtk_notebook_set_group_name (GtkNotebook *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:198:NC */ extern const gchar *gtk_notebook_get_group_name (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:205:NC */ extern gint gtk_notebook_get_current_page (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:206:NC */ extern GtkWidget *gtk_notebook_get_nth_page (GtkNotebook *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:208:NC */ extern gint gtk_notebook_get_n_pages (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:209:NC */ extern gint gtk_notebook_page_num (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:211:NC */ extern void gtk_notebook_set_current_page (GtkNotebook *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:213:NC */ extern void gtk_notebook_next_page (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:214:NC */ extern void gtk_notebook_prev_page (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:220:NC */ extern void gtk_notebook_set_show_border (GtkNotebook *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:222:NC */ extern gboolean gtk_notebook_get_show_border (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:223:NC */ extern void gtk_notebook_set_show_tabs (GtkNotebook *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:225:NC */ extern gboolean gtk_notebook_get_show_tabs (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:226:NC */ extern void gtk_notebook_set_tab_pos (GtkNotebook *, GtkPositionType);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:228:NC */ extern GtkPositionType gtk_notebook_get_tab_pos (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:231:NC */ extern void gtk_notebook_set_homogeneous_tabs (GtkNotebook *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:233:NC */ extern void gtk_notebook_set_tab_border (GtkNotebook *, guint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:235:NC */ extern void gtk_notebook_set_tab_hborder (GtkNotebook *, guint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:237:NC */ extern void gtk_notebook_set_tab_vborder (GtkNotebook *, guint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:241:NC */ extern void gtk_notebook_set_scrollable (GtkNotebook *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:243:NC */ extern gboolean gtk_notebook_get_scrollable (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:244:NC */ extern guint16 gtk_notebook_get_tab_hborder (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:245:NC */ extern guint16 gtk_notebook_get_tab_vborder (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:251:NC */ extern void gtk_notebook_popup_enable (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:252:NC */ extern void gtk_notebook_popup_disable (GtkNotebook *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:258:NC */ extern GtkWidget *gtk_notebook_get_tab_label (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:260:NC */ extern void gtk_notebook_set_tab_label (GtkNotebook *, GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:263:NC */ extern void gtk_notebook_set_tab_label_text (GtkNotebook *, GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:266:NC */ extern const gchar *gtk_notebook_get_tab_label_text (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:268:NC */ extern GtkWidget *gtk_notebook_get_menu_label (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:270:NC */ extern void gtk_notebook_set_menu_label (GtkNotebook *, GtkWidget *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:273:NC */ extern void gtk_notebook_set_menu_label_text (GtkNotebook *, GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:276:NC */ extern const gchar *gtk_notebook_get_menu_label_text (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:279:NC */ extern void gtk_notebook_query_tab_label_packing (GtkNotebook *, GtkWidget *, gboolean *, gboolean *, GtkPackType *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:284:NC */ extern void gtk_notebook_set_tab_label_packing (GtkNotebook *, GtkWidget *, gboolean, gboolean, GtkPackType);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:290:NC */ extern void gtk_notebook_reorder_child (GtkNotebook *, GtkWidget *, gint);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:293:NC */ extern gboolean gtk_notebook_get_tab_reorderable (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:295:NC */ extern void gtk_notebook_set_tab_reorderable (GtkNotebook *, GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:298:NC */ extern gboolean gtk_notebook_get_tab_detachable (GtkNotebook *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:300:NC */ extern void gtk_notebook_set_tab_detachable (GtkNotebook *, GtkWidget *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:304:NC */ extern GtkWidget *gtk_notebook_get_action_widget (GtkNotebook *, GtkPackType);
/* /usr/include/gtk-2.0/gtk/gtknotebook.h:306:NC */ extern void gtk_notebook_set_action_widget (GtkNotebook *, GtkWidget *, GtkPackType);
/* /usr/include/gtk-2.0/gtk/gtkoffscreenwindow.h:52:NC */ extern GType gtk_offscreen_window_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkoffscreenwindow.h:54:NC */ extern GtkWidget *gtk_offscreen_window_new (void);
/* /usr/include/gtk-2.0/gtk/gtkoffscreenwindow.h:55:NC */ extern GdkPixmap *gtk_offscreen_window_get_pixmap (GtkOffscreenWindow *);
/* /usr/include/gtk-2.0/gtk/gtkoffscreenwindow.h:56:NC */ extern GdkPixbuf *gtk_offscreen_window_get_pixbuf (GtkOffscreenWindow *);
/* /usr/include/gtk-2.0/gtk/gtkorientable.h:52:NC */ extern GType gtk_orientable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkorientable.h:54:NC */ extern void gtk_orientable_set_orientation (GtkOrientable *, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkorientable.h:56:NC */ extern GtkOrientation gtk_orientable_get_orientation (GtkOrientable *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:47:NC */ extern GType gtk_paper_size_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:49:NC */ extern GtkPaperSize *gtk_paper_size_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:50:NC */ extern GtkPaperSize *gtk_paper_size_new_from_ppd (const gchar *, const gchar *, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:54:NC */ extern GtkPaperSize *gtk_paper_size_new_custom (const gchar *, const gchar *, gdouble, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:59:NC */ extern GtkPaperSize *gtk_paper_size_copy (GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:60:NC */ extern void gtk_paper_size_free (GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:61:NC */ extern gboolean gtk_paper_size_is_equal (GtkPaperSize *, GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:64:NC */ extern GList *gtk_paper_size_get_paper_sizes (gboolean);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:67:NC */ extern const gchar *gtk_paper_size_get_name (GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:68:NC */ extern const gchar *gtk_paper_size_get_display_name (GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:69:NC */ extern const gchar *gtk_paper_size_get_ppd_name (GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:71:NC */ extern gdouble gtk_paper_size_get_width (GtkPaperSize *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:72:NC */ extern gdouble gtk_paper_size_get_height (GtkPaperSize *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:73:NC */ extern gboolean gtk_paper_size_is_custom (GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:76:NC */ extern void gtk_paper_size_set_size (GtkPaperSize *, gdouble, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:81:NC */ extern gdouble gtk_paper_size_get_default_top_margin (GtkPaperSize *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:83:NC */ extern gdouble gtk_paper_size_get_default_bottom_margin (GtkPaperSize *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:85:NC */ extern gdouble gtk_paper_size_get_default_left_margin (GtkPaperSize *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:87:NC */ extern gdouble gtk_paper_size_get_default_right_margin (GtkPaperSize *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:90:NC */ extern const gchar *gtk_paper_size_get_default (void);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:92:NC */ extern GtkPaperSize *gtk_paper_size_new_from_key_file (GKeyFile *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkpapersize.h:95:NC */ extern void gtk_paper_size_to_key_file (GtkPaperSize *, GKeyFile *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:40:NC */ extern GType gtk_page_setup_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:41:NC */ extern GtkPageSetup *gtk_page_setup_new (void);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:42:NC */ extern GtkPageSetup *gtk_page_setup_copy (GtkPageSetup *);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:43:NC */ extern GtkPageOrientation gtk_page_setup_get_orientation (GtkPageSetup *);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:44:NC */ extern void gtk_page_setup_set_orientation (GtkPageSetup *, GtkPageOrientation);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:46:NC */ extern GtkPaperSize *gtk_page_setup_get_paper_size (GtkPageSetup *);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:47:NC */ extern void gtk_page_setup_set_paper_size (GtkPageSetup *, GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:49:NC */ extern gdouble gtk_page_setup_get_top_margin (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:51:NC */ extern void gtk_page_setup_set_top_margin (GtkPageSetup *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:54:NC */ extern gdouble gtk_page_setup_get_bottom_margin (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:56:NC */ extern void gtk_page_setup_set_bottom_margin (GtkPageSetup *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:59:NC */ extern gdouble gtk_page_setup_get_left_margin (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:61:NC */ extern void gtk_page_setup_set_left_margin (GtkPageSetup *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:64:NC */ extern gdouble gtk_page_setup_get_right_margin (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:66:NC */ extern void gtk_page_setup_set_right_margin (GtkPageSetup *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:70:NC */ extern void gtk_page_setup_set_paper_size_and_default_margins (GtkPageSetup *, GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:74:NC */ extern gdouble gtk_page_setup_get_paper_width (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:76:NC */ extern gdouble gtk_page_setup_get_paper_height (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:81:NC */ extern gdouble gtk_page_setup_get_page_width (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:83:NC */ extern gdouble gtk_page_setup_get_page_height (GtkPageSetup *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:87:NC */ extern GtkPageSetup *gtk_page_setup_new_from_file (const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:89:NC */ extern gboolean gtk_page_setup_load_file (GtkPageSetup *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:92:NC */ extern gboolean gtk_page_setup_to_file (GtkPageSetup *, const char *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:95:NC */ extern GtkPageSetup *gtk_page_setup_new_from_key_file (GKeyFile *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:98:NC */ extern gboolean gtk_page_setup_load_key_file (GtkPageSetup *, GKeyFile *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkpagesetup.h:102:NC */ extern void gtk_page_setup_to_key_file (GtkPageSetup *, GKeyFile *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtksocket.h:87:NC */ extern GType gtk_socket_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtksocket.h:88:NC */ extern GtkWidget *gtk_socket_new (void);
/* /usr/include/gtk-2.0/gtk/gtksocket.h:90:NC */ extern void gtk_socket_add_id (GtkSocket *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtksocket.h:92:NC */ extern GdkNativeWindow gtk_socket_get_id (GtkSocket *);
/* /usr/include/gtk-2.0/gtk/gtksocket.h:93:NC */ extern GdkWindow *gtk_socket_get_plug_window (GtkSocket *);
/* /usr/include/gtk-2.0/gtk/gtksocket.h:96:NC */ extern void gtk_socket_steal (GtkSocket *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:78:NC */ extern GType gtk_plug_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:81:NC */ extern void gtk_plug_construct (GtkPlug *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:83:NC */ extern GtkWidget *gtk_plug_new (GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:86:NC */ extern void gtk_plug_construct_for_display (GtkPlug *, GdkDisplay *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:89:NC */ extern GtkWidget *gtk_plug_new_for_display (GdkDisplay *, GdkNativeWindow);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:92:NC */ extern GdkNativeWindow gtk_plug_get_id (GtkPlug *);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:94:NC */ extern gboolean gtk_plug_get_embedded (GtkPlug *);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:96:NC */ extern GdkWindow *gtk_plug_get_socket_window (GtkPlug *);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:98:NC */ extern void _gtk_plug_add_to_socket (GtkPlug *, GtkSocket *);
/* /usr/include/gtk-2.0/gtk/gtkplug.h:100:NC */ extern void _gtk_plug_remove_from_socket (GtkPlug *, GtkSocket *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:41:NC */ extern GType gtk_print_context_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:45:NC */ extern cairo_t *gtk_print_context_get_cairo_context (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:47:NC */ extern GtkPageSetup *gtk_print_context_get_page_setup (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:48:NC */ extern gdouble gtk_print_context_get_width (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:49:NC */ extern gdouble gtk_print_context_get_height (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:50:NC */ extern gdouble gtk_print_context_get_dpi_x (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:51:NC */ extern gdouble gtk_print_context_get_dpi_y (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:52:NC */ extern gboolean gtk_print_context_get_hard_margins (GtkPrintContext *, gdouble *, gdouble *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:59:NC */ extern PangoFontMap *gtk_print_context_get_pango_fontmap (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:60:NC */ extern PangoContext *gtk_print_context_create_pango_context (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:61:NC */ extern PangoLayout *gtk_print_context_create_pango_layout (GtkPrintContext *);
/* /usr/include/gtk-2.0/gtk/gtkprintcontext.h:64:NC */ extern void gtk_print_context_set_cairo_context (GtkPrintContext *, cairo_t *, double, double);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:49:NC */ extern GType gtk_print_settings_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:50:NC */ extern GtkPrintSettings *gtk_print_settings_new (void);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:52:NC */ extern GtkPrintSettings *gtk_print_settings_copy (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:54:NC */ extern GtkPrintSettings *gtk_print_settings_new_from_file (const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:56:NC */ extern gboolean gtk_print_settings_load_file (GtkPrintSettings *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:59:NC */ extern gboolean gtk_print_settings_to_file (GtkPrintSettings *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:62:NC */ extern GtkPrintSettings *gtk_print_settings_new_from_key_file (GKeyFile *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:65:NC */ extern gboolean gtk_print_settings_load_key_file (GtkPrintSettings *, GKeyFile *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:69:NC */ extern void gtk_print_settings_to_key_file (GtkPrintSettings *, GKeyFile *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:72:NC */ extern gboolean gtk_print_settings_has_key (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:74:NC */ extern const gchar *gtk_print_settings_get (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:76:NC */ extern void gtk_print_settings_set (GtkPrintSettings *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:79:NC */ extern void gtk_print_settings_unset (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:81:NC */ extern void gtk_print_settings_foreach (GtkPrintSettings *, GtkPrintSettingsFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:84:NC */ extern gboolean gtk_print_settings_get_bool (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:86:NC */ extern void gtk_print_settings_set_bool (GtkPrintSettings *, const gchar *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:89:NC */ extern gdouble gtk_print_settings_get_double (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:91:NC */ extern gdouble gtk_print_settings_get_double_with_default (GtkPrintSettings *, const gchar *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:94:NC */ extern void gtk_print_settings_set_double (GtkPrintSettings *, const gchar *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:97:NC */ extern gdouble gtk_print_settings_get_length (GtkPrintSettings *, const gchar *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:100:NC */ extern void gtk_print_settings_set_length (GtkPrintSettings *, const gchar *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:104:NC */ extern gint gtk_print_settings_get_int (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:106:NC */ extern gint gtk_print_settings_get_int_with_default (GtkPrintSettings *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:109:NC */ extern void gtk_print_settings_set_int (GtkPrintSettings *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:148:NC */ extern const gchar *gtk_print_settings_get_printer (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:149:NC */ extern void gtk_print_settings_set_printer (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:151:NC */ extern GtkPageOrientation gtk_print_settings_get_orientation (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:152:NC */ extern void gtk_print_settings_set_orientation (GtkPrintSettings *, GtkPageOrientation);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:154:NC */ extern GtkPaperSize *gtk_print_settings_get_paper_size (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:155:NC */ extern void gtk_print_settings_set_paper_size (GtkPrintSettings *, GtkPaperSize *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:157:NC */ extern gdouble gtk_print_settings_get_paper_width (GtkPrintSettings *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:159:NC */ extern void gtk_print_settings_set_paper_width (GtkPrintSettings *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:162:NC */ extern gdouble gtk_print_settings_get_paper_height (GtkPrintSettings *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:164:NC */ extern void gtk_print_settings_set_paper_height (GtkPrintSettings *, gdouble, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:167:NC */ extern gboolean gtk_print_settings_get_use_color (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:168:NC */ extern void gtk_print_settings_set_use_color (GtkPrintSettings *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:170:NC */ extern gboolean gtk_print_settings_get_collate (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:171:NC */ extern void gtk_print_settings_set_collate (GtkPrintSettings *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:173:NC */ extern gboolean gtk_print_settings_get_reverse (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:174:NC */ extern void gtk_print_settings_set_reverse (GtkPrintSettings *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:176:NC */ extern GtkPrintDuplex gtk_print_settings_get_duplex (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:177:NC */ extern void gtk_print_settings_set_duplex (GtkPrintSettings *, GtkPrintDuplex);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:179:NC */ extern GtkPrintQuality gtk_print_settings_get_quality (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:180:NC */ extern void gtk_print_settings_set_quality (GtkPrintSettings *, GtkPrintQuality);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:182:NC */ extern gint gtk_print_settings_get_n_copies (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:183:NC */ extern void gtk_print_settings_set_n_copies (GtkPrintSettings *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:185:NC */ extern gint gtk_print_settings_get_number_up (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:186:NC */ extern void gtk_print_settings_set_number_up (GtkPrintSettings *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:188:NC */ extern GtkNumberUpLayout gtk_print_settings_get_number_up_layout (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:189:NC */ extern void gtk_print_settings_set_number_up_layout (GtkPrintSettings *, GtkNumberUpLayout);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:191:NC */ extern gint gtk_print_settings_get_resolution (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:192:NC */ extern void gtk_print_settings_set_resolution (GtkPrintSettings *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:194:NC */ extern gint gtk_print_settings_get_resolution_x (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:195:NC */ extern gint gtk_print_settings_get_resolution_y (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:196:NC */ extern void gtk_print_settings_set_resolution_xy (GtkPrintSettings *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:199:NC */ extern gdouble gtk_print_settings_get_printer_lpi (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:200:NC */ extern void gtk_print_settings_set_printer_lpi (GtkPrintSettings *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:202:NC */ extern gdouble gtk_print_settings_get_scale (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:203:NC */ extern void gtk_print_settings_set_scale (GtkPrintSettings *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:205:NC */ extern GtkPrintPages gtk_print_settings_get_print_pages (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:206:NC */ extern void gtk_print_settings_set_print_pages (GtkPrintSettings *, GtkPrintPages);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:208:NC */ extern GtkPageRange *gtk_print_settings_get_page_ranges (GtkPrintSettings *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:210:NC */ extern void gtk_print_settings_set_page_ranges (GtkPrintSettings *, GtkPageRange *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:213:NC */ extern GtkPageSet gtk_print_settings_get_page_set (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:214:NC */ extern void gtk_print_settings_set_page_set (GtkPrintSettings *, GtkPageSet);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:216:NC */ extern const gchar *gtk_print_settings_get_default_source (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:217:NC */ extern void gtk_print_settings_set_default_source (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:219:NC */ extern const gchar *gtk_print_settings_get_media_type (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:220:NC */ extern void gtk_print_settings_set_media_type (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:222:NC */ extern const gchar *gtk_print_settings_get_dither (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:223:NC */ extern void gtk_print_settings_set_dither (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:225:NC */ extern const gchar *gtk_print_settings_get_finishings (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:226:NC */ extern void gtk_print_settings_set_finishings (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:228:NC */ extern const gchar *gtk_print_settings_get_output_bin (GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintsettings.h:229:NC */ extern void gtk_print_settings_set_output_bin (GtkPrintSettings *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperationpreview.h:70:NC */ extern GType gtk_print_operation_preview_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkprintoperationpreview.h:72:NC */ extern void gtk_print_operation_preview_render_page (GtkPrintOperationPreview *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintoperationpreview.h:74:NC */ extern void gtk_print_operation_preview_end_preview (GtkPrintOperationPreview *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperationpreview.h:75:NC */ extern gboolean gtk_print_operation_preview_is_selected (GtkPrintOperationPreview *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:139:NC */ extern GQuark gtk_print_error_quark (void);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:141:NC */ extern GType gtk_print_operation_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:142:NC */ extern GtkPrintOperation *gtk_print_operation_new (void);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:143:NC */ extern void gtk_print_operation_set_default_page_setup (GtkPrintOperation *, GtkPageSetup *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:145:NC */ extern GtkPageSetup *gtk_print_operation_get_default_page_setup (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:146:NC */ extern void gtk_print_operation_set_print_settings (GtkPrintOperation *, GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:148:NC */ extern GtkPrintSettings *gtk_print_operation_get_print_settings (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:149:NC */ extern void gtk_print_operation_set_job_name (GtkPrintOperation *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:151:NC */ extern void gtk_print_operation_set_n_pages (GtkPrintOperation *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:153:NC */ extern void gtk_print_operation_set_current_page (GtkPrintOperation *, gint);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:155:NC */ extern void gtk_print_operation_set_use_full_page (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:157:NC */ extern void gtk_print_operation_set_unit (GtkPrintOperation *, GtkUnit);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:159:NC */ extern void gtk_print_operation_set_export_filename (GtkPrintOperation *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:161:NC */ extern void gtk_print_operation_set_track_print_status (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:163:NC */ extern void gtk_print_operation_set_show_progress (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:165:NC */ extern void gtk_print_operation_set_allow_async (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:167:NC */ extern void gtk_print_operation_set_custom_tab_label (GtkPrintOperation *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:169:NC */ extern GtkPrintOperationResult gtk_print_operation_run (GtkPrintOperation *, GtkPrintOperationAction, GtkWindow *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:173:NC */ extern void gtk_print_operation_get_error (GtkPrintOperation *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:175:NC */ extern GtkPrintStatus gtk_print_operation_get_status (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:176:NC */ extern const gchar *gtk_print_operation_get_status_string (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:177:NC */ extern gboolean gtk_print_operation_is_finished (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:178:NC */ extern void gtk_print_operation_cancel (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:179:NC */ extern void gtk_print_operation_draw_page_finish (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:180:NC */ extern void gtk_print_operation_set_defer_drawing (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:181:NC */ extern void gtk_print_operation_set_support_selection (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:183:NC */ extern gboolean gtk_print_operation_get_support_selection (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:184:NC */ extern void gtk_print_operation_set_has_selection (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:186:NC */ extern gboolean gtk_print_operation_get_has_selection (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:187:NC */ extern void gtk_print_operation_set_embed_page_setup (GtkPrintOperation *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:189:NC */ extern gboolean gtk_print_operation_get_embed_page_setup (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:190:NC */ extern gint gtk_print_operation_get_n_pages_to_print (GtkPrintOperation *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:192:NC */ extern GtkPageSetup *gtk_print_run_page_setup_dialog (GtkWindow *, GtkPageSetup *, GtkPrintSettings *);
/* /usr/include/gtk-2.0/gtk/gtkprintoperation.h:199:NC */ extern void gtk_print_run_page_setup_dialog_async (GtkWindow *, GtkPageSetup *, GtkPrintSettings *, GtkPageSetupDoneFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:88:NC */ extern GType gtk_progress_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:89:NC */ extern void gtk_progress_set_show_text (GtkProgress *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:91:NC */ extern void gtk_progress_set_text_alignment (GtkProgress *, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:94:NC */ extern void gtk_progress_set_format_string (GtkProgress *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:96:NC */ extern void gtk_progress_set_adjustment (GtkProgress *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:98:NC */ extern void gtk_progress_configure (GtkProgress *, gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:102:NC */ extern void gtk_progress_set_percentage (GtkProgress *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:104:NC */ extern void gtk_progress_set_value (GtkProgress *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:106:NC */ extern gdouble gtk_progress_get_value (GtkProgress *);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:107:NC */ extern void gtk_progress_set_activity_mode (GtkProgress *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:109:NC */ extern gchar *gtk_progress_get_current_text (GtkProgress *);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:110:NC */ extern gchar *gtk_progress_get_text_from_value (GtkProgress *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:112:NC */ extern gdouble gtk_progress_get_current_percentage (GtkProgress *);
/* /usr/include/gtk-2.0/gtk/gtkprogress.h:113:NC */ extern gdouble gtk_progress_get_percentage_from_value (GtkProgress *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:98:NC */ extern GType gtk_progress_bar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:99:NC */ extern GtkWidget *gtk_progress_bar_new (void);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:128:NC */ extern void gtk_progress_bar_pulse (GtkProgressBar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:129:NC */ extern void gtk_progress_bar_set_text (GtkProgressBar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:131:NC */ extern void gtk_progress_bar_set_fraction (GtkProgressBar *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:134:NC */ extern void gtk_progress_bar_set_pulse_step (GtkProgressBar *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:136:NC */ extern void gtk_progress_bar_set_orientation (GtkProgressBar *, GtkProgressBarOrientation);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:139:NC */ extern const gchar *gtk_progress_bar_get_text (GtkProgressBar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:140:NC */ extern gdouble gtk_progress_bar_get_fraction (GtkProgressBar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:141:NC */ extern gdouble gtk_progress_bar_get_pulse_step (GtkProgressBar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:143:NC */ extern GtkProgressBarOrientation gtk_progress_bar_get_orientation (GtkProgressBar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:144:NC */ extern void gtk_progress_bar_set_ellipsize (GtkProgressBar *, PangoEllipsizeMode);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:146:NC */ extern PangoEllipsizeMode gtk_progress_bar_get_ellipsize (GtkProgressBar *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:152:NC */ extern GtkWidget *gtk_progress_bar_new_with_adjustment (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:153:NC */ extern void gtk_progress_bar_set_bar_style (GtkProgressBar *, GtkProgressBarStyle);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:155:NC */ extern void gtk_progress_bar_set_discrete_blocks (GtkProgressBar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:161:NC */ extern void gtk_progress_bar_set_activity_step (GtkProgressBar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:163:NC */ extern void gtk_progress_bar_set_activity_blocks (GtkProgressBar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkprogressbar.h:165:NC */ extern void gtk_progress_bar_update (GtkProgressBar *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:75:NC */ extern GType gtk_toggle_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:76:NC */ extern GtkToggleAction *gtk_toggle_action_new (const gchar *, const gchar *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:80:NC */ extern void gtk_toggle_action_toggled (GtkToggleAction *);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:81:NC */ extern void gtk_toggle_action_set_active (GtkToggleAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:83:NC */ extern gboolean gtk_toggle_action_get_active (GtkToggleAction *);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:84:NC */ extern void gtk_toggle_action_set_draw_as_radio (GtkToggleAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoggleaction.h:86:NC */ extern gboolean gtk_toggle_action_get_draw_as_radio (GtkToggleAction *);
/* /usr/include/gtk-2.0/gtk/gtkradioaction.h:75:NC */ extern GType gtk_radio_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkradioaction.h:76:NC */ extern GtkRadioAction *gtk_radio_action_new (const gchar *, const gchar *, const gchar *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtkradioaction.h:81:NC */ extern GSList *gtk_radio_action_get_group (GtkRadioAction *);
/* /usr/include/gtk-2.0/gtk/gtkradioaction.h:82:NC */ extern void gtk_radio_action_set_group (GtkRadioAction *, GSList *);
/* /usr/include/gtk-2.0/gtk/gtkradioaction.h:84:NC */ extern gint gtk_radio_action_get_current_value (GtkRadioAction *);
/* /usr/include/gtk-2.0/gtk/gtkradioaction.h:85:NC */ extern void gtk_radio_action_set_current_value (GtkRadioAction *, gint);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:72:NC */ extern GType gtk_radio_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:74:NC */ extern GtkWidget *gtk_radio_button_new (GSList *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:75:NC */ extern GtkWidget *gtk_radio_button_new_from_widget (GtkRadioButton *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:76:NC */ extern GtkWidget *gtk_radio_button_new_with_label (GSList *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:78:NC */ extern GtkWidget *gtk_radio_button_new_with_label_from_widget (GtkRadioButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:80:NC */ extern GtkWidget *gtk_radio_button_new_with_mnemonic (GSList *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:82:NC */ extern GtkWidget *gtk_radio_button_new_with_mnemonic_from_widget (GtkRadioButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:84:NC */ extern GSList *gtk_radio_button_get_group (GtkRadioButton *);
/* /usr/include/gtk-2.0/gtk/gtkradiobutton.h:85:NC */ extern void gtk_radio_button_set_group (GtkRadioButton *, GSList *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:72:NC */ extern GType gtk_radio_menu_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:74:NC */ extern GtkWidget *gtk_radio_menu_item_new (GSList *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:75:NC */ extern GtkWidget *gtk_radio_menu_item_new_with_label (GSList *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:77:NC */ extern GtkWidget *gtk_radio_menu_item_new_with_mnemonic (GSList *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:79:NC */ extern GtkWidget *gtk_radio_menu_item_new_from_widget (GtkRadioMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:80:NC */ extern GtkWidget *gtk_radio_menu_item_new_with_mnemonic_from_widget (GtkRadioMenuItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:82:NC */ extern GtkWidget *gtk_radio_menu_item_new_with_label_from_widget (GtkRadioMenuItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:84:NC */ extern GSList *gtk_radio_menu_item_get_group (GtkRadioMenuItem *);
/* /usr/include/gtk-2.0/gtk/gtkradiomenuitem.h:85:NC */ extern void gtk_radio_menu_item_set_group (GtkRadioMenuItem *, GSList *);
/* /usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h:67:NC */ extern GType gtk_toggle_tool_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h:68:NC */ extern GtkToolItem *gtk_toggle_tool_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h:69:NC */ extern GtkToolItem *gtk_toggle_tool_button_new_from_stock (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h:71:NC */ extern void gtk_toggle_tool_button_set_active (GtkToggleToolButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoggletoolbutton.h:73:NC */ extern gboolean gtk_toggle_tool_button_get_active (GtkToggleToolButton *);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:60:NC */ extern GType gtk_radio_tool_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:62:NC */ extern GtkToolItem *gtk_radio_tool_button_new (GSList *);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:63:NC */ extern GtkToolItem *gtk_radio_tool_button_new_from_stock (GSList *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:65:NC */ extern GtkToolItem *gtk_radio_tool_button_new_from_widget (GtkRadioToolButton *);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:66:NC */ extern GtkToolItem *gtk_radio_tool_button_new_with_stock_from_widget (GtkRadioToolButton *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:68:NC */ extern GSList *gtk_radio_tool_button_get_group (GtkRadioToolButton *);
/* /usr/include/gtk-2.0/gtk/gtkradiotoolbutton.h:69:NC */ extern void gtk_radio_tool_button_set_group (GtkRadioToolButton *, GSList *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:135:NC */ extern GQuark gtk_recent_manager_error_quark (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:138:NC */ extern GType gtk_recent_manager_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:140:NC */ extern GtkRecentManager *gtk_recent_manager_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:141:NC */ extern GtkRecentManager *gtk_recent_manager_get_default (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:144:NC */ extern GtkRecentManager *gtk_recent_manager_get_for_screen (GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:145:NC */ extern void gtk_recent_manager_set_screen (GtkRecentManager *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:149:NC */ extern gboolean gtk_recent_manager_add_item (GtkRecentManager *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:151:NC */ extern gboolean gtk_recent_manager_add_full (GtkRecentManager *, const gchar *, const GtkRecentData *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:154:NC */ extern gboolean gtk_recent_manager_remove_item (GtkRecentManager *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:157:NC */ extern GtkRecentInfo *gtk_recent_manager_lookup_item (GtkRecentManager *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:160:NC */ extern gboolean gtk_recent_manager_has_item (GtkRecentManager *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:162:NC */ extern gboolean gtk_recent_manager_move_item (GtkRecentManager *, const gchar *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:166:NC */ extern void gtk_recent_manager_set_limit (GtkRecentManager *, gint);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:168:NC */ extern gint gtk_recent_manager_get_limit (GtkRecentManager *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:169:NC */ extern GList *gtk_recent_manager_get_items (GtkRecentManager *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:170:NC */ extern gint gtk_recent_manager_purge_items (GtkRecentManager *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:174:NC */ extern GType gtk_recent_info_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:176:NC */ extern GtkRecentInfo *gtk_recent_info_ref (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:177:NC */ extern void gtk_recent_info_unref (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:179:NC */ extern const gchar *gtk_recent_info_get_uri (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:180:NC */ extern const gchar *gtk_recent_info_get_display_name (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:181:NC */ extern const gchar *gtk_recent_info_get_description (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:182:NC */ extern const gchar *gtk_recent_info_get_mime_type (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:183:NC */ extern time_t gtk_recent_info_get_added (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:184:NC */ extern time_t gtk_recent_info_get_modified (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:185:NC */ extern time_t gtk_recent_info_get_visited (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:186:NC */ extern gboolean gtk_recent_info_get_private_hint (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:187:NC */ extern gboolean gtk_recent_info_get_application_info (GtkRecentInfo *, const gchar *, const gchar **, guint *, time_t *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:192:NC */ extern gchar **gtk_recent_info_get_applications (GtkRecentInfo *, gsize *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:194:NC */ extern gchar *gtk_recent_info_last_application (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:195:NC */ extern gboolean gtk_recent_info_has_application (GtkRecentInfo *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:197:NC */ extern gchar **gtk_recent_info_get_groups (GtkRecentInfo *, gsize *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:199:NC */ extern gboolean gtk_recent_info_has_group (GtkRecentInfo *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:201:NC */ extern GdkPixbuf *gtk_recent_info_get_icon (GtkRecentInfo *, gint);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:203:NC */ extern gchar *gtk_recent_info_get_short_name (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:204:NC */ extern gchar *gtk_recent_info_get_uri_display (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:205:NC */ extern gint gtk_recent_info_get_age (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:206:NC */ extern gboolean gtk_recent_info_is_local (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:207:NC */ extern gboolean gtk_recent_info_exists (GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:208:NC */ extern gboolean gtk_recent_info_match (GtkRecentInfo *, GtkRecentInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentmanager.h:212:NC */ extern void _gtk_recent_manager_sync (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentaction.h:58:NC */ extern GType gtk_recent_action_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentaction.h:59:NC */ extern GtkAction *gtk_recent_action_new (const gchar *, const gchar *, const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentaction.h:63:NC */ extern GtkAction *gtk_recent_action_new_for_manager (const gchar *, const gchar *, const gchar *, const gchar *, GtkRecentManager *);
/* /usr/include/gtk-2.0/gtk/gtkrecentaction.h:68:NC */ extern gboolean gtk_recent_action_get_show_numbers (GtkRecentAction *);
/* /usr/include/gtk-2.0/gtk/gtkrecentaction.h:69:NC */ extern void gtk_recent_action_set_show_numbers (GtkRecentAction *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:64:NC */ extern GType gtk_recent_filter_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:66:NC */ extern GtkRecentFilter *gtk_recent_filter_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:67:NC */ extern void gtk_recent_filter_set_name (GtkRecentFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:69:NC */ extern const gchar *gtk_recent_filter_get_name (GtkRecentFilter *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:71:NC */ extern void gtk_recent_filter_add_mime_type (GtkRecentFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:73:NC */ extern void gtk_recent_filter_add_pattern (GtkRecentFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:75:NC */ extern void gtk_recent_filter_add_pixbuf_formats (GtkRecentFilter *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:76:NC */ extern void gtk_recent_filter_add_application (GtkRecentFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:78:NC */ extern void gtk_recent_filter_add_group (GtkRecentFilter *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:80:NC */ extern void gtk_recent_filter_add_age (GtkRecentFilter *, gint);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:82:NC */ extern void gtk_recent_filter_add_custom (GtkRecentFilter *, GtkRecentFilterFlags, GtkRecentFilterFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:88:NC */ extern GtkRecentFilterFlags gtk_recent_filter_get_needed (GtkRecentFilter *);
/* /usr/include/gtk-2.0/gtk/gtkrecentfilter.h:89:NC */ extern gboolean gtk_recent_filter_filter (GtkRecentFilter *, const GtkRecentFilterInfo *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:78:NC */ extern GQuark gtk_recent_chooser_error_quark (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:118:NC */ extern GType gtk_recent_chooser_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:123:NC */ extern void gtk_recent_chooser_set_show_private (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:125:NC */ extern gboolean gtk_recent_chooser_get_show_private (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:126:NC */ extern void gtk_recent_chooser_set_show_not_found (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:128:NC */ extern gboolean gtk_recent_chooser_get_show_not_found (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:129:NC */ extern void gtk_recent_chooser_set_select_multiple (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:131:NC */ extern gboolean gtk_recent_chooser_get_select_multiple (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:132:NC */ extern void gtk_recent_chooser_set_limit (GtkRecentChooser *, gint);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:134:NC */ extern gint gtk_recent_chooser_get_limit (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:135:NC */ extern void gtk_recent_chooser_set_local_only (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:137:NC */ extern gboolean gtk_recent_chooser_get_local_only (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:138:NC */ extern void gtk_recent_chooser_set_show_tips (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:140:NC */ extern gboolean gtk_recent_chooser_get_show_tips (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:142:NC */ extern void gtk_recent_chooser_set_show_numbers (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:144:NC */ extern gboolean gtk_recent_chooser_get_show_numbers (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:146:NC */ extern void gtk_recent_chooser_set_show_icons (GtkRecentChooser *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:148:NC */ extern gboolean gtk_recent_chooser_get_show_icons (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:149:NC */ extern void gtk_recent_chooser_set_sort_type (GtkRecentChooser *, GtkRecentSortType);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:151:NC */ extern GtkRecentSortType gtk_recent_chooser_get_sort_type (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:152:NC */ extern void gtk_recent_chooser_set_sort_func (GtkRecentChooser *, GtkRecentSortFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:160:NC */ extern gboolean gtk_recent_chooser_set_current_uri (GtkRecentChooser *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:163:NC */ extern gchar *gtk_recent_chooser_get_current_uri (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:164:NC */ extern GtkRecentInfo *gtk_recent_chooser_get_current_item (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:165:NC */ extern gboolean gtk_recent_chooser_select_uri (GtkRecentChooser *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:168:NC */ extern void gtk_recent_chooser_unselect_uri (GtkRecentChooser *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:170:NC */ extern void gtk_recent_chooser_select_all (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:171:NC */ extern void gtk_recent_chooser_unselect_all (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:172:NC */ extern GList *gtk_recent_chooser_get_items (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:173:NC */ extern gchar **gtk_recent_chooser_get_uris (GtkRecentChooser *, gsize *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:179:NC */ extern void gtk_recent_chooser_add_filter (GtkRecentChooser *, GtkRecentFilter *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:181:NC */ extern void gtk_recent_chooser_remove_filter (GtkRecentChooser *, GtkRecentFilter *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:183:NC */ extern GSList *gtk_recent_chooser_list_filters (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:184:NC */ extern void gtk_recent_chooser_set_filter (GtkRecentChooser *, GtkRecentFilter *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooser.h:186:NC */ extern GtkRecentFilter *gtk_recent_chooser_get_filter (GtkRecentChooser *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooserdialog.h:60:NC */ extern GType gtk_recent_chooser_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooserdialog.h:62:NC */ extern GtkWidget *gtk_recent_chooser_dialog_new (const gchar *, GtkWindow *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooserdialog.h:66:NC */ extern GtkWidget *gtk_recent_chooser_dialog_new_for_manager (const gchar *, GtkWindow *, GtkRecentManager *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h:63:NC */ extern GType gtk_recent_chooser_menu_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h:65:NC */ extern GtkWidget *gtk_recent_chooser_menu_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h:66:NC */ extern GtkWidget *gtk_recent_chooser_menu_new_for_manager (GtkRecentManager *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h:68:NC */ extern gboolean gtk_recent_chooser_menu_get_show_numbers (GtkRecentChooserMenu *);
/* /usr/include/gtk-2.0/gtk/gtkrecentchoosermenu.h:69:NC */ extern void gtk_recent_chooser_menu_set_show_numbers (GtkRecentChooserMenu *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooserwidget.h:58:NC */ extern GType gtk_recent_chooser_widget_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooserwidget.h:59:NC */ extern GtkWidget *gtk_recent_chooser_widget_new (void);
/* /usr/include/gtk-2.0/gtk/gtkrecentchooserwidget.h:60:NC */ extern GtkWidget *gtk_recent_chooser_widget_new_for_manager (GtkRecentManager *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:84:NC */ extern GType gtk_scale_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:85:NC */ extern GtkWidget *gtk_scale_button_new (GtkIconSize, gdouble, gdouble, gdouble, const gchar **);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:90:NC */ extern void gtk_scale_button_set_icons (GtkScaleButton *, const gchar **);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:92:NC */ extern gdouble gtk_scale_button_get_value (GtkScaleButton *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:93:NC */ extern void gtk_scale_button_set_value (GtkScaleButton *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:95:NC */ extern GtkAdjustment *gtk_scale_button_get_adjustment (GtkScaleButton *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:96:NC */ extern void gtk_scale_button_set_adjustment (GtkScaleButton *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:98:NC */ extern GtkWidget *gtk_scale_button_get_plus_button (GtkScaleButton *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:99:NC */ extern GtkWidget *gtk_scale_button_get_minus_button (GtkScaleButton *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:100:NC */ extern GtkWidget *gtk_scale_button_get_popup (GtkScaleButton *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:104:NC */ extern GtkOrientation gtk_scale_button_get_orientation (GtkScaleButton *);
/* /usr/include/gtk-2.0/gtk/gtkscalebutton.h:105:NC */ extern void gtk_scale_button_set_orientation (GtkScaleButton *, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtkvscrollbar.h:69:NC */ extern GType gtk_vscrollbar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvscrollbar.h:70:NC */ extern GtkWidget *gtk_vscrollbar_new (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:74:NC */ extern GType gtk_viewport_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:75:NC */ extern GtkWidget *gtk_viewport_new (GtkAdjustment *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:77:NC */ extern GtkAdjustment *gtk_viewport_get_hadjustment (GtkViewport *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:78:NC */ extern GtkAdjustment *gtk_viewport_get_vadjustment (GtkViewport *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:79:NC */ extern void gtk_viewport_set_hadjustment (GtkViewport *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:81:NC */ extern void gtk_viewport_set_vadjustment (GtkViewport *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:83:NC */ extern void gtk_viewport_set_shadow_type (GtkViewport *, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:85:NC */ extern GtkShadowType gtk_viewport_get_shadow_type (GtkViewport *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:86:NC */ extern GdkWindow *gtk_viewport_get_bin_window (GtkViewport *);
/* /usr/include/gtk-2.0/gtk/gtkviewport.h:87:NC */ extern GdkWindow *gtk_viewport_get_view_window (GtkViewport *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:102:NC */ extern GType gtk_scrolled_window_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:103:NC */ extern GtkWidget *gtk_scrolled_window_new (GtkAdjustment *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:105:NC */ extern void gtk_scrolled_window_set_hadjustment (GtkScrolledWindow *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:107:NC */ extern void gtk_scrolled_window_set_vadjustment (GtkScrolledWindow *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:109:NC */ extern GtkAdjustment *gtk_scrolled_window_get_hadjustment (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:110:NC */ extern GtkAdjustment *gtk_scrolled_window_get_vadjustment (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:111:NC */ extern GtkWidget *gtk_scrolled_window_get_hscrollbar (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:112:NC */ extern GtkWidget *gtk_scrolled_window_get_vscrollbar (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:113:NC */ extern void gtk_scrolled_window_set_policy (GtkScrolledWindow *, GtkPolicyType, GtkPolicyType);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:116:NC */ extern void gtk_scrolled_window_get_policy (GtkScrolledWindow *, GtkPolicyType *, GtkPolicyType *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:119:NC */ extern void gtk_scrolled_window_set_placement (GtkScrolledWindow *, GtkCornerType);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:121:NC */ extern void gtk_scrolled_window_unset_placement (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:123:NC */ extern GtkCornerType gtk_scrolled_window_get_placement (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:124:NC */ extern void gtk_scrolled_window_set_shadow_type (GtkScrolledWindow *, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:126:NC */ extern GtkShadowType gtk_scrolled_window_get_shadow_type (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:127:NC */ extern void gtk_scrolled_window_add_with_viewport (GtkScrolledWindow *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkscrolledwindow.h:130:NC */ extern gint _gtk_scrolled_window_get_scrollbar_spacing (GtkScrolledWindow *);
/* /usr/include/gtk-2.0/gtk/gtkseparatormenuitem.h:62:NC */ extern GType gtk_separator_menu_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkseparatormenuitem.h:63:NC */ extern GtkWidget *gtk_separator_menu_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtkseparatortoolitem.h:63:NC */ extern GType gtk_separator_tool_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkseparatortoolitem.h:64:NC */ extern GtkToolItem *gtk_separator_tool_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtkseparatortoolitem.h:66:NC */ extern gboolean gtk_separator_tool_item_get_draw (GtkSeparatorToolItem *);
/* /usr/include/gtk-2.0/gtk/gtkseparatortoolitem.h:67:NC */ extern void gtk_separator_tool_item_set_draw (GtkSeparatorToolItem *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkshow.h:32:NC */ extern gboolean gtk_show_uri (GdkScreen *, const gchar *, guint32, GError **);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:123:NC */ extern GType gtk_spin_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:125:NC */ extern void gtk_spin_button_configure (GtkSpinButton *, GtkAdjustment *, gdouble, guint);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:130:NC */ extern GtkWidget *gtk_spin_button_new (GtkAdjustment *, gdouble, guint);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:134:NC */ extern GtkWidget *gtk_spin_button_new_with_range (gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:138:NC */ extern void gtk_spin_button_set_adjustment (GtkSpinButton *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:141:NC */ extern GtkAdjustment *gtk_spin_button_get_adjustment (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:143:NC */ extern void gtk_spin_button_set_digits (GtkSpinButton *, guint);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:145:NC */ extern guint gtk_spin_button_get_digits (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:147:NC */ extern void gtk_spin_button_set_increments (GtkSpinButton *, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:150:NC */ extern void gtk_spin_button_get_increments (GtkSpinButton *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:154:NC */ extern void gtk_spin_button_set_range (GtkSpinButton *, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:157:NC */ extern void gtk_spin_button_get_range (GtkSpinButton *, gdouble *, gdouble *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:161:NC */ extern gdouble gtk_spin_button_get_value (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:163:NC */ extern gint gtk_spin_button_get_value_as_int (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:165:NC */ extern void gtk_spin_button_set_value (GtkSpinButton *, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:168:NC */ extern void gtk_spin_button_set_update_policy (GtkSpinButton *, GtkSpinButtonUpdatePolicy);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:170:NC */ extern GtkSpinButtonUpdatePolicy gtk_spin_button_get_update_policy (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:172:NC */ extern void gtk_spin_button_set_numeric (GtkSpinButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:174:NC */ extern gboolean gtk_spin_button_get_numeric (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:176:NC */ extern void gtk_spin_button_spin (GtkSpinButton *, GtkSpinType, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:180:NC */ extern void gtk_spin_button_set_wrap (GtkSpinButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:182:NC */ extern gboolean gtk_spin_button_get_wrap (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:184:NC */ extern void gtk_spin_button_set_snap_to_ticks (GtkSpinButton *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:186:NC */ extern gboolean gtk_spin_button_get_snap_to_ticks (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinbutton.h:187:NC */ extern void gtk_spin_button_update (GtkSpinButton *);
/* /usr/include/gtk-2.0/gtk/gtkspinner.h:58:NC */ extern GType gtk_spinner_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkspinner.h:59:NC */ extern GtkWidget *gtk_spinner_new (void);
/* /usr/include/gtk-2.0/gtk/gtkspinner.h:60:NC */ extern void gtk_spinner_start (GtkSpinner *);
/* /usr/include/gtk-2.0/gtk/gtkspinner.h:61:NC */ extern void gtk_spinner_stop (GtkSpinner *);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:89:NC */ extern GType gtk_statusbar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:90:NC */ extern GtkWidget *gtk_statusbar_new (void);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:94:NC */ extern guint gtk_statusbar_get_context_id (GtkStatusbar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:97:NC */ extern guint gtk_statusbar_push (GtkStatusbar *, guint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:100:NC */ extern void gtk_statusbar_pop (GtkStatusbar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:102:NC */ extern void gtk_statusbar_remove (GtkStatusbar *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:105:NC */ extern void gtk_statusbar_remove_all (GtkStatusbar *, guint);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:109:NC */ extern void gtk_statusbar_set_has_resize_grip (GtkStatusbar *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:111:NC */ extern gboolean gtk_statusbar_get_has_resize_grip (GtkStatusbar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusbar.h:113:NC */ extern GtkWidget *gtk_statusbar_get_message_area (GtkStatusbar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:80:NC */ extern GType gtk_status_icon_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:82:NC */ extern GtkStatusIcon *gtk_status_icon_new (void);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:83:NC */ extern GtkStatusIcon *gtk_status_icon_new_from_pixbuf (GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:84:NC */ extern GtkStatusIcon *gtk_status_icon_new_from_file (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:85:NC */ extern GtkStatusIcon *gtk_status_icon_new_from_stock (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:86:NC */ extern GtkStatusIcon *gtk_status_icon_new_from_icon_name (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:87:NC */ extern GtkStatusIcon *gtk_status_icon_new_from_gicon (GIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:89:NC */ extern void gtk_status_icon_set_from_pixbuf (GtkStatusIcon *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:91:NC */ extern void gtk_status_icon_set_from_file (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:93:NC */ extern void gtk_status_icon_set_from_stock (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:95:NC */ extern void gtk_status_icon_set_from_icon_name (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:97:NC */ extern void gtk_status_icon_set_from_gicon (GtkStatusIcon *, GIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:100:NC */ extern GtkImageType gtk_status_icon_get_storage_type (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:102:NC */ extern GdkPixbuf *gtk_status_icon_get_pixbuf (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:103:NC */ extern const gchar *gtk_status_icon_get_stock (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:104:NC */ extern const gchar *gtk_status_icon_get_icon_name (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:105:NC */ extern GIcon *gtk_status_icon_get_gicon (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:107:NC */ extern gint gtk_status_icon_get_size (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:109:NC */ extern void gtk_status_icon_set_screen (GtkStatusIcon *, GdkScreen *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:111:NC */ extern GdkScreen *gtk_status_icon_get_screen (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:114:NC */ extern void gtk_status_icon_set_tooltip (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:117:NC */ extern void gtk_status_icon_set_has_tooltip (GtkStatusIcon *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:119:NC */ extern void gtk_status_icon_set_tooltip_text (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:121:NC */ extern void gtk_status_icon_set_tooltip_markup (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:123:NC */ extern void gtk_status_icon_set_title (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:125:NC */ extern const gchar *gtk_status_icon_get_title (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:126:NC */ extern void gtk_status_icon_set_name (GtkStatusIcon *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:128:NC */ extern void gtk_status_icon_set_visible (GtkStatusIcon *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:130:NC */ extern gboolean gtk_status_icon_get_visible (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:133:NC */ extern void gtk_status_icon_set_blinking (GtkStatusIcon *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:135:NC */ extern gboolean gtk_status_icon_get_blinking (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:138:NC */ extern gboolean gtk_status_icon_is_embedded (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:140:NC */ extern void gtk_status_icon_position_menu (GtkMenu *, gint *, gint *, gboolean *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:145:NC */ extern gboolean gtk_status_icon_get_geometry (GtkStatusIcon *, GdkScreen **, GdkRectangle *, GtkOrientation *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:149:NC */ extern gboolean gtk_status_icon_get_has_tooltip (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:150:NC */ extern gchar *gtk_status_icon_get_tooltip_text (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:151:NC */ extern gchar *gtk_status_icon_get_tooltip_markup (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstatusicon.h:153:NC */ extern guint32 gtk_status_icon_get_x11_window_id (GtkStatusIcon *);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:51:NC */ extern void gtk_stock_add (const GtkStockItem *, guint);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:53:NC */ extern void gtk_stock_add_static (const GtkStockItem *, guint);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:55:NC */ extern gboolean gtk_stock_lookup (const gchar *, GtkStockItem *);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:61:NC */ extern GSList *gtk_stock_list_ids (void);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:63:NC */ extern GtkStockItem *gtk_stock_item_copy (const GtkStockItem *);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:64:NC */ extern void gtk_stock_item_free (GtkStockItem *);
/* /usr/include/gtk-2.0/gtk/gtkstock.h:66:NC */ extern void gtk_stock_set_translate_func (const gchar *, GtkTranslateFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktable.h:102:NC */ extern GType gtk_table_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktable.h:103:NC */ extern GtkWidget *gtk_table_new (guint, guint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktable.h:106:NC */ extern void gtk_table_resize (GtkTable *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:109:NC */ extern void gtk_table_attach (GtkTable *, GtkWidget *, guint, guint, guint, guint, GtkAttachOptions, GtkAttachOptions, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:119:NC */ extern void gtk_table_attach_defaults (GtkTable *, GtkWidget *, guint, guint, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:125:NC */ extern void gtk_table_set_row_spacing (GtkTable *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:128:NC */ extern guint gtk_table_get_row_spacing (GtkTable *, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:130:NC */ extern void gtk_table_set_col_spacing (GtkTable *, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:133:NC */ extern guint gtk_table_get_col_spacing (GtkTable *, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:135:NC */ extern void gtk_table_set_row_spacings (GtkTable *, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:137:NC */ extern guint gtk_table_get_default_row_spacing (GtkTable *);
/* /usr/include/gtk-2.0/gtk/gtktable.h:138:NC */ extern void gtk_table_set_col_spacings (GtkTable *, guint);
/* /usr/include/gtk-2.0/gtk/gtktable.h:140:NC */ extern guint gtk_table_get_default_col_spacing (GtkTable *);
/* /usr/include/gtk-2.0/gtk/gtktable.h:141:NC */ extern void gtk_table_set_homogeneous (GtkTable *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktable.h:143:NC */ extern gboolean gtk_table_get_homogeneous (GtkTable *);
/* /usr/include/gtk-2.0/gtk/gtktable.h:144:NC */ extern void gtk_table_get_size (GtkTable *, guint *, guint *);
/* /usr/include/gtk-2.0/gtk/gtktearoffmenuitem.h:70:NC */ extern GType gtk_tearoff_menu_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktearoffmenuitem.h:71:NC */ extern GtkWidget *gtk_tearoff_menu_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:75:NC */ extern GType gtk_text_tag_table_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:77:NC */ extern GtkTextTagTable *gtk_text_tag_table_new (void);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:78:NC */ extern void gtk_text_tag_table_add (GtkTextTagTable *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:80:NC */ extern void gtk_text_tag_table_remove (GtkTextTagTable *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:82:NC */ extern GtkTextTag *gtk_text_tag_table_lookup (GtkTextTagTable *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:84:NC */ extern void gtk_text_tag_table_foreach (GtkTextTagTable *, GtkTextTagTableForeach, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:87:NC */ extern gint gtk_text_tag_table_get_size (GtkTextTagTable *);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:93:NC */ extern void _gtk_text_tag_table_add_buffer (GtkTextTagTable *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktexttagtable.h:95:NC */ extern void _gtk_text_tag_table_remove_buffer (GtkTextTagTable *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:89:NC */ extern GType gtk_text_mark_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:91:NC */ extern void gtk_text_mark_set_visible (GtkTextMark *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:93:NC */ extern gboolean gtk_text_mark_get_visible (GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:95:NC */ extern GtkTextMark *gtk_text_mark_new (const gchar *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:97:NC */ extern const gchar *gtk_text_mark_get_name (GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:98:NC */ extern gboolean gtk_text_mark_get_deleted (GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:99:NC */ extern GtkTextBuffer *gtk_text_mark_get_buffer (GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextmark.h:100:NC */ extern gboolean gtk_text_mark_get_left_gravity (GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:157:NC */ extern GType gtk_text_buffer_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:162:NC */ extern GtkTextBuffer *gtk_text_buffer_new (GtkTextTagTable *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:163:NC */ extern gint gtk_text_buffer_get_line_count (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:164:NC */ extern gint gtk_text_buffer_get_char_count (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:167:NC */ extern GtkTextTagTable *gtk_text_buffer_get_tag_table (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:170:NC */ extern void gtk_text_buffer_set_text (GtkTextBuffer *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:175:NC */ extern void gtk_text_buffer_insert (GtkTextBuffer *, GtkTextIter *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:179:NC */ extern void gtk_text_buffer_insert_at_cursor (GtkTextBuffer *, const gchar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:183:NC */ extern gboolean gtk_text_buffer_insert_interactive (GtkTextBuffer *, GtkTextIter *, const gchar *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:188:NC */ extern gboolean gtk_text_buffer_insert_interactive_at_cursor (GtkTextBuffer *, const gchar *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:193:NC */ extern void gtk_text_buffer_insert_range (GtkTextBuffer *, GtkTextIter *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:197:NC */ extern gboolean gtk_text_buffer_insert_range_interactive (GtkTextBuffer *, GtkTextIter *, const GtkTextIter *, const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:203:NC */ extern void gtk_text_buffer_insert_with_tags (GtkTextBuffer *, GtkTextIter *, const gchar *, gint, GtkTextTag *, ...);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:210:NC */ extern void gtk_text_buffer_insert_with_tags_by_name (GtkTextBuffer *, GtkTextIter *, const gchar *, gint, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:218:NC */ extern void gtk_text_buffer_delete (GtkTextBuffer *, GtkTextIter *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:221:NC */ extern gboolean gtk_text_buffer_delete_interactive (GtkTextBuffer *, GtkTextIter *, GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:225:NC */ extern gboolean gtk_text_buffer_backspace (GtkTextBuffer *, GtkTextIter *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:231:NC */ extern gchar *gtk_text_buffer_get_text (GtkTextBuffer *, const GtkTextIter *, const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:236:NC */ extern gchar *gtk_text_buffer_get_slice (GtkTextBuffer *, const GtkTextIter *, const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:242:NC */ extern void gtk_text_buffer_insert_pixbuf (GtkTextBuffer *, GtkTextIter *, GdkPixbuf *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:247:NC */ extern void gtk_text_buffer_insert_child_anchor (GtkTextBuffer *, GtkTextIter *, GtkTextChildAnchor *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:252:NC */ extern GtkTextChildAnchor *gtk_text_buffer_create_child_anchor (GtkTextBuffer *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:256:NC */ extern void gtk_text_buffer_add_mark (GtkTextBuffer *, GtkTextMark *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:259:NC */ extern GtkTextMark *gtk_text_buffer_create_mark (GtkTextBuffer *, const gchar *, const GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:263:NC */ extern void gtk_text_buffer_move_mark (GtkTextBuffer *, GtkTextMark *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:266:NC */ extern void gtk_text_buffer_delete_mark (GtkTextBuffer *, GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:268:NC */ extern GtkTextMark *gtk_text_buffer_get_mark (GtkTextBuffer *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:271:NC */ extern void gtk_text_buffer_move_mark_by_name (GtkTextBuffer *, const gchar *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:274:NC */ extern void gtk_text_buffer_delete_mark_by_name (GtkTextBuffer *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:277:NC */ extern GtkTextMark *gtk_text_buffer_get_insert (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:278:NC */ extern GtkTextMark *gtk_text_buffer_get_selection_bound (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:281:NC */ extern void gtk_text_buffer_place_cursor (GtkTextBuffer *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:283:NC */ extern void gtk_text_buffer_select_range (GtkTextBuffer *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:290:NC */ extern void gtk_text_buffer_apply_tag (GtkTextBuffer *, GtkTextTag *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:294:NC */ extern void gtk_text_buffer_remove_tag (GtkTextBuffer *, GtkTextTag *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:298:NC */ extern void gtk_text_buffer_apply_tag_by_name (GtkTextBuffer *, const gchar *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:302:NC */ extern void gtk_text_buffer_remove_tag_by_name (GtkTextBuffer *, const gchar *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:306:NC */ extern void gtk_text_buffer_remove_all_tags (GtkTextBuffer *, const GtkTextIter *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:314:NC */ extern GtkTextTag *gtk_text_buffer_create_tag (GtkTextBuffer *, const gchar *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:322:NC */ extern void gtk_text_buffer_get_iter_at_line_offset (GtkTextBuffer *, GtkTextIter *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:326:NC */ extern void gtk_text_buffer_get_iter_at_line_index (GtkTextBuffer *, GtkTextIter *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:330:NC */ extern void gtk_text_buffer_get_iter_at_offset (GtkTextBuffer *, GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:333:NC */ extern void gtk_text_buffer_get_iter_at_line (GtkTextBuffer *, GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:336:NC */ extern void gtk_text_buffer_get_start_iter (GtkTextBuffer *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:338:NC */ extern void gtk_text_buffer_get_end_iter (GtkTextBuffer *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:340:NC */ extern void gtk_text_buffer_get_bounds (GtkTextBuffer *, GtkTextIter *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:343:NC */ extern void gtk_text_buffer_get_iter_at_mark (GtkTextBuffer *, GtkTextIter *, GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:347:NC */ extern void gtk_text_buffer_get_iter_at_child_anchor (GtkTextBuffer *, GtkTextIter *, GtkTextChildAnchor *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:360:NC */ extern gboolean gtk_text_buffer_get_modified (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:361:NC */ extern void gtk_text_buffer_set_modified (GtkTextBuffer *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:364:NC */ extern gboolean gtk_text_buffer_get_has_selection (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:366:NC */ extern void gtk_text_buffer_add_selection_clipboard (GtkTextBuffer *, GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:368:NC */ extern void gtk_text_buffer_remove_selection_clipboard (GtkTextBuffer *, GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:371:NC */ extern void gtk_text_buffer_cut_clipboard (GtkTextBuffer *, GtkClipboard *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:374:NC */ extern void gtk_text_buffer_copy_clipboard (GtkTextBuffer *, GtkClipboard *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:376:NC */ extern void gtk_text_buffer_paste_clipboard (GtkTextBuffer *, GtkClipboard *, GtkTextIter *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:381:NC */ extern gboolean gtk_text_buffer_get_selection_bounds (GtkTextBuffer *, GtkTextIter *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:384:NC */ extern gboolean gtk_text_buffer_delete_selection (GtkTextBuffer *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:389:NC */ extern void gtk_text_buffer_begin_user_action (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:390:NC */ extern void gtk_text_buffer_end_user_action (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:392:NC */ extern GtkTargetList *gtk_text_buffer_get_copy_target_list (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:393:NC */ extern GtkTargetList *gtk_text_buffer_get_paste_target_list (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:396:NC */ extern void _gtk_text_buffer_spew (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:398:NC */ extern GtkTextBTree *_gtk_text_buffer_get_btree (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:400:NC */ extern const PangoLogAttr *_gtk_text_buffer_get_line_log_attrs (GtkTextBuffer *, const GtkTextIter *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextbuffer.h:404:NC */ extern void _gtk_text_buffer_notify_will_remove_tag (GtkTextBuffer *, GtkTextTag *);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:48:NC */ extern GdkAtom gtk_text_buffer_register_serialize_format (GtkTextBuffer *, const gchar *, GtkTextBufferSerializeFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:53:NC */ extern GdkAtom gtk_text_buffer_register_serialize_tagset (GtkTextBuffer *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:56:NC */ extern GdkAtom gtk_text_buffer_register_deserialize_format (GtkTextBuffer *, const gchar *, GtkTextBufferDeserializeFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:61:NC */ extern GdkAtom gtk_text_buffer_register_deserialize_tagset (GtkTextBuffer *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:64:NC */ extern void gtk_text_buffer_unregister_serialize_format (GtkTextBuffer *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:66:NC */ extern void gtk_text_buffer_unregister_deserialize_format (GtkTextBuffer *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:69:NC */ extern void gtk_text_buffer_deserialize_set_can_create_tags (GtkTextBuffer *, GdkAtom, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:72:NC */ extern gboolean gtk_text_buffer_deserialize_get_can_create_tags (GtkTextBuffer *, GdkAtom);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:75:NC */ extern GdkAtom *gtk_text_buffer_get_serialize_formats (GtkTextBuffer *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:77:NC */ extern GdkAtom *gtk_text_buffer_get_deserialize_formats (GtkTextBuffer *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:80:NC */ extern guint8 *gtk_text_buffer_serialize (GtkTextBuffer *, GtkTextBuffer *, GdkAtom, const GtkTextIter *, const GtkTextIter *, gsize *);
/* /usr/include/gtk-2.0/gtk/gtktextbufferrichtext.h:86:NC */ extern gboolean gtk_text_buffer_deserialize (GtkTextBuffer *, GtkTextBuffer *, GdkAtom, GtkTextIter *, const guint8 *, gsize, GError **);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:217:NC */ extern GType gtk_text_view_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:218:NC */ extern GtkWidget *gtk_text_view_new (void);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:219:NC */ extern GtkWidget *gtk_text_view_new_with_buffer (GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:220:NC */ extern void gtk_text_view_set_buffer (GtkTextView *, GtkTextBuffer *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:222:NC */ extern GtkTextBuffer *gtk_text_view_get_buffer (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:223:NC */ extern gboolean gtk_text_view_scroll_to_iter (GtkTextView *, GtkTextIter *, gdouble, gboolean, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:229:NC */ extern void gtk_text_view_scroll_to_mark (GtkTextView *, GtkTextMark *, gdouble, gboolean, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:235:NC */ extern void gtk_text_view_scroll_mark_onscreen (GtkTextView *, GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:237:NC */ extern gboolean gtk_text_view_move_mark_onscreen (GtkTextView *, GtkTextMark *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:239:NC */ extern gboolean gtk_text_view_place_cursor_onscreen (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:241:NC */ extern void gtk_text_view_get_visible_rect (GtkTextView *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:243:NC */ extern void gtk_text_view_set_cursor_visible (GtkTextView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:245:NC */ extern gboolean gtk_text_view_get_cursor_visible (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:247:NC */ extern void gtk_text_view_get_iter_location (GtkTextView *, const GtkTextIter *, GdkRectangle *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:250:NC */ extern void gtk_text_view_get_iter_at_location (GtkTextView *, GtkTextIter *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:254:NC */ extern void gtk_text_view_get_iter_at_position (GtkTextView *, GtkTextIter *, gint *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:259:NC */ extern void gtk_text_view_get_line_yrange (GtkTextView *, const GtkTextIter *, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:264:NC */ extern void gtk_text_view_get_line_at_y (GtkTextView *, GtkTextIter *, gint, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:269:NC */ extern void gtk_text_view_buffer_to_window_coords (GtkTextView *, GtkTextWindowType, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:275:NC */ extern void gtk_text_view_window_to_buffer_coords (GtkTextView *, GtkTextWindowType, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:282:NC */ extern GtkAdjustment *gtk_text_view_get_hadjustment (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:283:NC */ extern GtkAdjustment *gtk_text_view_get_vadjustment (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:285:NC */ extern GdkWindow *gtk_text_view_get_window (GtkTextView *, GtkTextWindowType);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:287:NC */ extern GtkTextWindowType gtk_text_view_get_window_type (GtkTextView *, GdkWindow *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:290:NC */ extern void gtk_text_view_set_border_window_size (GtkTextView *, GtkTextWindowType, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:293:NC */ extern gint gtk_text_view_get_border_window_size (GtkTextView *, GtkTextWindowType);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:296:NC */ extern gboolean gtk_text_view_forward_display_line (GtkTextView *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:298:NC */ extern gboolean gtk_text_view_backward_display_line (GtkTextView *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:300:NC */ extern gboolean gtk_text_view_forward_display_line_end (GtkTextView *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:302:NC */ extern gboolean gtk_text_view_backward_display_line_start (GtkTextView *, GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:304:NC */ extern gboolean gtk_text_view_starts_display_line (GtkTextView *, const GtkTextIter *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:306:NC */ extern gboolean gtk_text_view_move_visually (GtkTextView *, GtkTextIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:310:NC */ extern gboolean gtk_text_view_im_context_filter_keypress (GtkTextView *, GdkEventKey *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:312:NC */ extern void gtk_text_view_reset_im_context (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:315:NC */ extern void gtk_text_view_add_child_at_anchor (GtkTextView *, GtkWidget *, GtkTextChildAnchor *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:319:NC */ extern void gtk_text_view_add_child_in_window (GtkTextView *, GtkWidget *, GtkTextWindowType, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:326:NC */ extern void gtk_text_view_move_child (GtkTextView *, GtkWidget *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:334:NC */ extern void gtk_text_view_set_wrap_mode (GtkTextView *, GtkWrapMode);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:336:NC */ extern GtkWrapMode gtk_text_view_get_wrap_mode (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:337:NC */ extern void gtk_text_view_set_editable (GtkTextView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:339:NC */ extern gboolean gtk_text_view_get_editable (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:340:NC */ extern void gtk_text_view_set_overwrite (GtkTextView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:342:NC */ extern gboolean gtk_text_view_get_overwrite (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:343:NC */ extern void gtk_text_view_set_accepts_tab (GtkTextView *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:345:NC */ extern gboolean gtk_text_view_get_accepts_tab (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:346:NC */ extern void gtk_text_view_set_pixels_above_lines (GtkTextView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:348:NC */ extern gint gtk_text_view_get_pixels_above_lines (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:349:NC */ extern void gtk_text_view_set_pixels_below_lines (GtkTextView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:351:NC */ extern gint gtk_text_view_get_pixels_below_lines (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:352:NC */ extern void gtk_text_view_set_pixels_inside_wrap (GtkTextView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:354:NC */ extern gint gtk_text_view_get_pixels_inside_wrap (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:355:NC */ extern void gtk_text_view_set_justification (GtkTextView *, GtkJustification);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:357:NC */ extern GtkJustification gtk_text_view_get_justification (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:358:NC */ extern void gtk_text_view_set_left_margin (GtkTextView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:360:NC */ extern gint gtk_text_view_get_left_margin (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:361:NC */ extern void gtk_text_view_set_right_margin (GtkTextView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:363:NC */ extern gint gtk_text_view_get_right_margin (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:364:NC */ extern void gtk_text_view_set_indent (GtkTextView *, gint);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:366:NC */ extern gint gtk_text_view_get_indent (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:367:NC */ extern void gtk_text_view_set_tabs (GtkTextView *, PangoTabArray *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:369:NC */ extern PangoTabArray *gtk_text_view_get_tabs (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtktextview.h:372:NC */ extern GtkTextAttributes *gtk_text_view_get_default_attributes (GtkTextView *);
/* /usr/include/gtk-2.0/gtk/gtkpixmap.h:65:NC */ extern GType gtk_pixmap_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkpixmap.h:66:NC */ extern GtkWidget *gtk_pixmap_new (GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkpixmap.h:68:NC */ extern void gtk_pixmap_set (GtkPixmap *, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkpixmap.h:71:NC */ extern void gtk_pixmap_get (GtkPixmap *, GdkPixmap **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkpixmap.h:75:NC */ extern void gtk_pixmap_set_build_insensitive (GtkPixmap *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:141:NC */ extern GType gtk_toolbar_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:142:NC */ extern GtkWidget *gtk_toolbar_new (void);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:144:NC */ extern void gtk_toolbar_insert (GtkToolbar *, GtkToolItem *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:148:NC */ extern gint gtk_toolbar_get_item_index (GtkToolbar *, GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:150:NC */ extern gint gtk_toolbar_get_n_items (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:151:NC */ extern GtkToolItem *gtk_toolbar_get_nth_item (GtkToolbar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:154:NC */ extern gboolean gtk_toolbar_get_show_arrow (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:155:NC */ extern void gtk_toolbar_set_show_arrow (GtkToolbar *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:158:NC */ extern GtkToolbarStyle gtk_toolbar_get_style (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:159:NC */ extern void gtk_toolbar_set_style (GtkToolbar *, GtkToolbarStyle);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:161:NC */ extern void gtk_toolbar_unset_style (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:163:NC */ extern GtkIconSize gtk_toolbar_get_icon_size (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:164:NC */ extern void gtk_toolbar_set_icon_size (GtkToolbar *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:166:NC */ extern void gtk_toolbar_unset_icon_size (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:168:NC */ extern GtkReliefStyle gtk_toolbar_get_relief_style (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:169:NC */ extern gint gtk_toolbar_get_drop_index (GtkToolbar *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:172:NC */ extern void gtk_toolbar_set_drop_highlight_item (GtkToolbar *, GtkToolItem *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:178:NC */ extern gchar *_gtk_toolbar_elide_underscores (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:179:NC */ extern void _gtk_toolbar_paint_space_line (GtkWidget *, GtkToolbar *, const GdkRectangle *, const GtkAllocation *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:183:NC */ extern gint _gtk_toolbar_get_default_space_size (void);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:189:NC */ extern GtkOrientation gtk_toolbar_get_orientation (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:190:NC */ extern void gtk_toolbar_set_orientation (GtkToolbar *, GtkOrientation);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:192:NC */ extern gboolean gtk_toolbar_get_tooltips (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:193:NC */ extern void gtk_toolbar_set_tooltips (GtkToolbar *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:197:NC */ extern GtkWidget *gtk_toolbar_append_item (GtkToolbar *, const char *, const char *, const char *, GtkWidget *, GCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:204:NC */ extern GtkWidget *gtk_toolbar_prepend_item (GtkToolbar *, const char *, const char *, const char *, GtkWidget *, GCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:211:NC */ extern GtkWidget *gtk_toolbar_insert_item (GtkToolbar *, const char *, const char *, const char *, GtkWidget *, GCallback, gpointer, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:221:NC */ extern GtkWidget *gtk_toolbar_insert_stock (GtkToolbar *, const gchar *, const char *, const char *, GCallback, gpointer, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:230:NC */ extern void gtk_toolbar_append_space (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:231:NC */ extern void gtk_toolbar_prepend_space (GtkToolbar *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:232:NC */ extern void gtk_toolbar_insert_space (GtkToolbar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:234:NC */ extern void gtk_toolbar_remove_space (GtkToolbar *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:237:NC */ extern GtkWidget *gtk_toolbar_append_element (GtkToolbar *, GtkToolbarChildType, GtkWidget *, const char *, const char *, const char *, GtkWidget *, GCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:247:NC */ extern GtkWidget *gtk_toolbar_prepend_element (GtkToolbar *, GtkToolbarChildType, GtkWidget *, const char *, const char *, const char *, GtkWidget *, GCallback, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:257:NC */ extern GtkWidget *gtk_toolbar_insert_element (GtkToolbar *, GtkToolbarChildType, GtkWidget *, const char *, const char *, const char *, GtkWidget *, GCallback, gpointer, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:269:NC */ extern void gtk_toolbar_append_widget (GtkToolbar *, GtkWidget *, const char *, const char *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:273:NC */ extern void gtk_toolbar_prepend_widget (GtkToolbar *, GtkWidget *, const char *, const char *);
/* /usr/include/gtk-2.0/gtk/gtktoolbar.h:277:NC */ extern void gtk_toolbar_insert_widget (GtkToolbar *, GtkWidget *, const char *, const char *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:61:NC */ extern GType gtk_tool_item_group_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:62:NC */ extern GtkWidget *gtk_tool_item_group_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:64:NC */ extern void gtk_tool_item_group_set_label (GtkToolItemGroup *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:66:NC */ extern void gtk_tool_item_group_set_label_widget (GtkToolItemGroup *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:68:NC */ extern void gtk_tool_item_group_set_collapsed (GtkToolItemGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:70:NC */ extern void gtk_tool_item_group_set_ellipsize (GtkToolItemGroup *, PangoEllipsizeMode);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:72:NC */ extern void gtk_tool_item_group_set_header_relief (GtkToolItemGroup *, GtkReliefStyle);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:75:NC */ extern const gchar *gtk_tool_item_group_get_label (GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:76:NC */ extern GtkWidget *gtk_tool_item_group_get_label_widget (GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:77:NC */ extern gboolean gtk_tool_item_group_get_collapsed (GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:78:NC */ extern PangoEllipsizeMode gtk_tool_item_group_get_ellipsize (GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:79:NC */ extern GtkReliefStyle gtk_tool_item_group_get_header_relief (GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:81:NC */ extern void gtk_tool_item_group_insert (GtkToolItemGroup *, GtkToolItem *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:84:NC */ extern void gtk_tool_item_group_set_item_position (GtkToolItemGroup *, GtkToolItem *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:87:NC */ extern gint gtk_tool_item_group_get_item_position (GtkToolItemGroup *, GtkToolItem *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:90:NC */ extern guint gtk_tool_item_group_get_n_items (GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:91:NC */ extern GtkToolItem *gtk_tool_item_group_get_nth_item (GtkToolItemGroup *, guint);
/* /usr/include/gtk-2.0/gtk/gtktoolitemgroup.h:93:NC */ extern GtkToolItem *gtk_tool_item_group_get_drop_item (GtkToolItemGroup *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:88:NC */ extern GType gtk_tool_palette_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:89:NC */ extern GtkWidget *gtk_tool_palette_new (void);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:91:NC */ extern void gtk_tool_palette_set_group_position (GtkToolPalette *, GtkToolItemGroup *, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:94:NC */ extern void gtk_tool_palette_set_exclusive (GtkToolPalette *, GtkToolItemGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:97:NC */ extern void gtk_tool_palette_set_expand (GtkToolPalette *, GtkToolItemGroup *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:101:NC */ extern gint gtk_tool_palette_get_group_position (GtkToolPalette *, GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:103:NC */ extern gboolean gtk_tool_palette_get_exclusive (GtkToolPalette *, GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:105:NC */ extern gboolean gtk_tool_palette_get_expand (GtkToolPalette *, GtkToolItemGroup *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:108:NC */ extern void gtk_tool_palette_set_icon_size (GtkToolPalette *, GtkIconSize);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:110:NC */ extern void gtk_tool_palette_unset_icon_size (GtkToolPalette *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:111:NC */ extern void gtk_tool_palette_set_style (GtkToolPalette *, GtkToolbarStyle);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:113:NC */ extern void gtk_tool_palette_unset_style (GtkToolPalette *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:115:NC */ extern GtkIconSize gtk_tool_palette_get_icon_size (GtkToolPalette *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:116:NC */ extern GtkToolbarStyle gtk_tool_palette_get_style (GtkToolPalette *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:118:NC */ extern GtkToolItem *gtk_tool_palette_get_drop_item (GtkToolPalette *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:121:NC */ extern GtkToolItemGroup *gtk_tool_palette_get_drop_group (GtkToolPalette *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:124:NC */ extern GtkWidget *gtk_tool_palette_get_drag_item (GtkToolPalette *, const GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:127:NC */ extern void gtk_tool_palette_set_drag_source (GtkToolPalette *, GtkToolPaletteDragTargets);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:129:NC */ extern void gtk_tool_palette_add_drag_dest (GtkToolPalette *, GtkWidget *, GtkDestDefaults, GtkToolPaletteDragTargets, GdkDragAction);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:135:NC */ extern GtkAdjustment *gtk_tool_palette_get_hadjustment (GtkToolPalette *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:136:NC */ extern GtkAdjustment *gtk_tool_palette_get_vadjustment (GtkToolPalette *);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:138:NC */ extern const GtkTargetEntry *gtk_tool_palette_get_drag_target_item (void);
/* /usr/include/gtk-2.0/gtk/gtktoolpalette.h:139:NC */ extern const GtkTargetEntry *gtk_tool_palette_get_drag_target_group (void);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:77:NC */ extern GType gtk_tool_shell_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:79:NC */ extern GtkIconSize gtk_tool_shell_get_icon_size (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:80:NC */ extern GtkOrientation gtk_tool_shell_get_orientation (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:81:NC */ extern GtkToolbarStyle gtk_tool_shell_get_style (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:82:NC */ extern GtkReliefStyle gtk_tool_shell_get_relief_style (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:83:NC */ extern void gtk_tool_shell_rebuild_menu (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:84:NC */ extern GtkOrientation gtk_tool_shell_get_text_orientation (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:85:NC */ extern gfloat gtk_tool_shell_get_text_alignment (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:86:NC */ extern PangoEllipsizeMode gtk_tool_shell_get_ellipsize_mode (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktoolshell.h:87:NC */ extern GtkSizeGroup *gtk_tool_shell_get_text_size_group (GtkToolShell *);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:31:NC */ extern void gtk_test_init (int *, char ***, ...);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:34:NC */ extern void gtk_test_register_all_types (void);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:35:NC */ extern const GType *gtk_test_list_all_types (guint *);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:36:NC */ extern GtkWidget *gtk_test_find_widget (GtkWidget *, const gchar *, GType);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:39:NC */ extern GtkWidget *gtk_test_create_widget (GType, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:42:NC */ extern GtkWidget *gtk_test_create_simple_window (const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:44:NC */ extern GtkWidget *gtk_test_display_button_window (const gchar *, const gchar *, ...);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:47:NC */ extern void gtk_test_slider_set_perc (GtkWidget *, double);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:49:NC */ extern double gtk_test_slider_get_value (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:50:NC */ extern gboolean gtk_test_spin_button_click (GtkSpinButton *, guint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:53:NC */ extern gboolean gtk_test_widget_click (GtkWidget *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:56:NC */ extern gboolean gtk_test_widget_send_key (GtkWidget *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:60:NC */ extern void gtk_test_text_set (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:62:NC */ extern gchar *gtk_test_text_get (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:65:NC */ extern GtkWidget *gtk_test_find_sibling (GtkWidget *, GType);
/* /usr/include/gtk-2.0/gtk/gtktestutils.h:67:NC */ extern GtkWidget *gtk_test_find_label (GtkWidget *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:57:NC */ extern GType gtk_tree_drag_source_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:60:NC */ extern gboolean gtk_tree_drag_source_row_draggable (GtkTreeDragSource *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:64:NC */ extern gboolean gtk_tree_drag_source_drag_data_delete (GtkTreeDragSource *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:70:NC */ extern gboolean gtk_tree_drag_source_drag_data_get (GtkTreeDragSource *, GtkTreePath *, GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:97:NC */ extern GType gtk_tree_drag_dest_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:102:NC */ extern gboolean gtk_tree_drag_dest_drag_data_received (GtkTreeDragDest *, GtkTreePath *, GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:108:NC */ extern gboolean gtk_tree_drag_dest_row_drop_possible (GtkTreeDragDest *, GtkTreePath *, GtkSelectionData *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:116:NC */ extern gboolean gtk_tree_set_row_drag_data (GtkSelectionData *, GtkTreeModel *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreednd.h:119:NC */ extern gboolean gtk_tree_get_row_drag_data (GtkSelectionData *, GtkTreeModel **, GtkTreePath **);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:84:NC */ extern GType gtk_tree_model_sort_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:85:NC */ extern GtkTreeModel *gtk_tree_model_sort_new_with_model (GtkTreeModel *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:87:NC */ extern GtkTreeModel *gtk_tree_model_sort_get_model (GtkTreeModelSort *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:88:NC */ extern GtkTreePath *gtk_tree_model_sort_convert_child_path_to_path (GtkTreeModelSort *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:90:NC */ extern gboolean gtk_tree_model_sort_convert_child_iter_to_iter (GtkTreeModelSort *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:93:NC */ extern GtkTreePath *gtk_tree_model_sort_convert_path_to_child_path (GtkTreeModelSort *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:95:NC */ extern void gtk_tree_model_sort_convert_iter_to_child_iter (GtkTreeModelSort *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:98:NC */ extern void gtk_tree_model_sort_reset_default_sort_func (GtkTreeModelSort *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:99:NC */ extern void gtk_tree_model_sort_clear_cache (GtkTreeModelSort *);
/* /usr/include/gtk-2.0/gtk/gtktreemodelsort.h:100:NC */ extern gboolean gtk_tree_model_sort_iter_is_valid (GtkTreeModelSort *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:76:NC */ extern GType gtk_tree_selection_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:78:NC */ extern void gtk_tree_selection_set_mode (GtkTreeSelection *, GtkSelectionMode);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:80:NC */ extern GtkSelectionMode gtk_tree_selection_get_mode (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:81:NC */ extern void gtk_tree_selection_set_select_function (GtkTreeSelection *, GtkTreeSelectionFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:85:NC */ extern gpointer gtk_tree_selection_get_user_data (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:86:NC */ extern GtkTreeView *gtk_tree_selection_get_tree_view (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:88:NC */ extern GtkTreeSelectionFunc gtk_tree_selection_get_select_function (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:92:NC */ extern gboolean gtk_tree_selection_get_selected (GtkTreeSelection *, GtkTreeModel **, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:95:NC */ extern GList *gtk_tree_selection_get_selected_rows (GtkTreeSelection *, GtkTreeModel **);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:97:NC */ extern gint gtk_tree_selection_count_selected_rows (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:98:NC */ extern void gtk_tree_selection_selected_foreach (GtkTreeSelection *, GtkTreeSelectionForeachFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:101:NC */ extern void gtk_tree_selection_select_path (GtkTreeSelection *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:103:NC */ extern void gtk_tree_selection_unselect_path (GtkTreeSelection *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:105:NC */ extern void gtk_tree_selection_select_iter (GtkTreeSelection *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:107:NC */ extern void gtk_tree_selection_unselect_iter (GtkTreeSelection *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:109:NC */ extern gboolean gtk_tree_selection_path_is_selected (GtkTreeSelection *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:111:NC */ extern gboolean gtk_tree_selection_iter_is_selected (GtkTreeSelection *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:113:NC */ extern void gtk_tree_selection_select_all (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:114:NC */ extern void gtk_tree_selection_unselect_all (GtkTreeSelection *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:115:NC */ extern void gtk_tree_selection_select_range (GtkTreeSelection *, GtkTreePath *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreeselection.h:118:NC */ extern void gtk_tree_selection_unselect_range (GtkTreeSelection *, GtkTreePath *, GtkTreePath *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:76:NC */ extern GType gtk_tree_store_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:77:NC */ extern GtkTreeStore *gtk_tree_store_new (gint, ...);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:79:NC */ extern GtkTreeStore *gtk_tree_store_newv (gint, GType *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:81:NC */ extern void gtk_tree_store_set_column_types (GtkTreeStore *, gint, GType *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:87:NC */ extern void gtk_tree_store_set_value (GtkTreeStore *, GtkTreeIter *, gint, GValue *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:91:NC */ extern void gtk_tree_store_set (GtkTreeStore *, GtkTreeIter *, ...);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:94:NC */ extern void gtk_tree_store_set_valuesv (GtkTreeStore *, GtkTreeIter *, gint *, GValue *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:99:NC */ extern void gtk_tree_store_set_valist (GtkTreeStore *, GtkTreeIter *, __va_list_tag *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:102:NC */ extern gboolean gtk_tree_store_remove (GtkTreeStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:104:NC */ extern void gtk_tree_store_insert (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:108:NC */ extern void gtk_tree_store_insert_before (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:112:NC */ extern void gtk_tree_store_insert_after (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:116:NC */ extern void gtk_tree_store_insert_with_values (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *, gint, ...);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:121:NC */ extern void gtk_tree_store_insert_with_valuesv (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *, gint, gint *, GValue *, gint);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:128:NC */ extern void gtk_tree_store_prepend (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:131:NC */ extern void gtk_tree_store_append (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:134:NC */ extern gboolean gtk_tree_store_is_ancestor (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:137:NC */ extern gint gtk_tree_store_iter_depth (GtkTreeStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:139:NC */ extern void gtk_tree_store_clear (GtkTreeStore *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:140:NC */ extern gboolean gtk_tree_store_iter_is_valid (GtkTreeStore *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:142:NC */ extern void gtk_tree_store_reorder (GtkTreeStore *, GtkTreeIter *, gint *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:145:NC */ extern void gtk_tree_store_swap (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:148:NC */ extern void gtk_tree_store_move_before (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtktreestore.h:151:NC */ extern void gtk_tree_store_move_after (GtkTreeStore *, GtkTreeIter *, GtkTreeIter *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:113:NC */ extern GType gtk_ui_manager_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:114:NC */ extern GtkUIManager *gtk_ui_manager_new (void);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:115:NC */ extern void gtk_ui_manager_set_add_tearoffs (GtkUIManager *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:117:NC */ extern gboolean gtk_ui_manager_get_add_tearoffs (GtkUIManager *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:118:NC */ extern void gtk_ui_manager_insert_action_group (GtkUIManager *, GtkActionGroup *, gint);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:121:NC */ extern void gtk_ui_manager_remove_action_group (GtkUIManager *, GtkActionGroup *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:123:NC */ extern GList *gtk_ui_manager_get_action_groups (GtkUIManager *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:124:NC */ extern GtkAccelGroup *gtk_ui_manager_get_accel_group (GtkUIManager *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:125:NC */ extern GtkWidget *gtk_ui_manager_get_widget (GtkUIManager *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:127:NC */ extern GSList *gtk_ui_manager_get_toplevels (GtkUIManager *, GtkUIManagerItemType);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:129:NC */ extern GtkAction *gtk_ui_manager_get_action (GtkUIManager *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:131:NC */ extern guint gtk_ui_manager_add_ui_from_string (GtkUIManager *, const gchar *, gssize, GError **);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:135:NC */ extern guint gtk_ui_manager_add_ui_from_file (GtkUIManager *, const gchar *, GError **);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:138:NC */ extern void gtk_ui_manager_add_ui (GtkUIManager *, guint, const gchar *, const gchar *, const gchar *, GtkUIManagerItemType, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:145:NC */ extern void gtk_ui_manager_remove_ui (GtkUIManager *, guint);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:147:NC */ extern gchar *gtk_ui_manager_get_ui (GtkUIManager *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:148:NC */ extern void gtk_ui_manager_ensure_update (GtkUIManager *);
/* /usr/include/gtk-2.0/gtk/gtkuimanager.h:149:NC */ extern guint gtk_ui_manager_new_merge_id (GtkUIManager *);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:63:NC */ extern GType gtk_vbutton_box_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:64:NC */ extern GtkWidget *gtk_vbutton_box_new (void);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:69:NC */ extern gint gtk_vbutton_box_get_spacing_default (void);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:70:NC */ extern void gtk_vbutton_box_set_spacing_default (gint);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:72:NC */ extern GtkButtonBoxStyle gtk_vbutton_box_get_layout_default (void);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:73:NC */ extern void gtk_vbutton_box_set_layout_default (GtkButtonBoxStyle);
/* /usr/include/gtk-2.0/gtk/gtkvbbox.h:77:NC */ extern GtkButtonBoxStyle _gtk_vbutton_box_get_layout_default (void);
/* /usr/include/gtk-2.0/gtk/gtkvolumebutton.h:67:NC */ extern GType gtk_volume_button_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvolumebutton.h:68:NC */ extern GtkWidget *gtk_volume_button_new (void);
/* /usr/include/gtk-2.0/gtk/gtkvpaned.h:60:NC */ extern GType gtk_vpaned_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvpaned.h:61:NC */ extern GtkWidget *gtk_vpaned_new (void);
/* /usr/include/gtk-2.0/gtk/gtkvruler.h:75:NC */ extern GType gtk_vruler_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvruler.h:76:NC */ extern GtkWidget *gtk_vruler_new (void);
/* /usr/include/gtk-2.0/gtk/gtkvscale.h:69:NC */ extern GType gtk_vscale_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvscale.h:70:NC */ extern GtkWidget *gtk_vscale_new (GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkvscale.h:71:NC */ extern GtkWidget *gtk_vscale_new_with_range (gdouble, gdouble, gdouble);
/* /usr/include/gtk-2.0/gtk/gtkvseparator.h:69:NC */ extern GType gtk_vseparator_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkvseparator.h:70:NC */ extern GtkWidget *gtk_vseparator_new (void);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:443:NC */ extern GType gtk_clist_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:446:NC */ extern GtkWidget *gtk_clist_new (gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:447:NC */ extern GtkWidget *gtk_clist_new_with_titles (gint, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:451:NC */ extern void gtk_clist_set_hadjustment (GtkCList *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:453:NC */ extern void gtk_clist_set_vadjustment (GtkCList *, GtkAdjustment *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:457:NC */ extern GtkAdjustment *gtk_clist_get_hadjustment (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:458:NC */ extern GtkAdjustment *gtk_clist_get_vadjustment (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:461:NC */ extern void gtk_clist_set_shadow_type (GtkCList *, GtkShadowType);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:465:NC */ extern void gtk_clist_set_selection_mode (GtkCList *, GtkSelectionMode);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:469:NC */ extern void gtk_clist_set_reorderable (GtkCList *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:471:NC */ extern void gtk_clist_set_use_drag_icons (GtkCList *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:473:NC */ extern void gtk_clist_set_button_actions (GtkCList *, guint, guint8);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:481:NC */ extern void gtk_clist_freeze (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:482:NC */ extern void gtk_clist_thaw (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:485:NC */ extern void gtk_clist_column_titles_show (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:486:NC */ extern void gtk_clist_column_titles_hide (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:492:NC */ extern void gtk_clist_column_title_active (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:494:NC */ extern void gtk_clist_column_title_passive (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:496:NC */ extern void gtk_clist_column_titles_active (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:497:NC */ extern void gtk_clist_column_titles_passive (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:500:NC */ extern void gtk_clist_set_column_title (GtkCList *, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:505:NC */ extern gchar *gtk_clist_get_column_title (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:509:NC */ extern void gtk_clist_set_column_widget (GtkCList *, gint, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:514:NC */ extern GtkWidget *gtk_clist_get_column_widget (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:518:NC */ extern void gtk_clist_set_column_justification (GtkCList *, gint, GtkJustification);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:523:NC */ extern void gtk_clist_set_column_visibility (GtkCList *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:528:NC */ extern void gtk_clist_set_column_resizeable (GtkCList *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:533:NC */ extern void gtk_clist_set_column_auto_resize (GtkCList *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:537:NC */ extern gint gtk_clist_columns_autosize (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:540:NC */ extern gint gtk_clist_optimal_column_width (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:547:NC */ extern void gtk_clist_set_column_width (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:552:NC */ extern void gtk_clist_set_column_min_width (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:555:NC */ extern void gtk_clist_set_column_max_width (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:562:NC */ extern void gtk_clist_set_row_height (GtkCList *, guint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:570:NC */ extern void gtk_clist_moveto (GtkCList *, gint, gint, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:577:NC */ extern GtkVisibility gtk_clist_row_is_visible (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:581:NC */ extern GtkCellType gtk_clist_get_cell_type (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:586:NC */ extern void gtk_clist_set_text (GtkCList *, gint, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:594:NC */ extern gint gtk_clist_get_text (GtkCList *, gint, gint, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:600:NC */ extern void gtk_clist_set_pixmap (GtkCList *, gint, gint, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:606:NC */ extern gint gtk_clist_get_pixmap (GtkCList *, gint, gint, GdkPixmap **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:613:NC */ extern void gtk_clist_set_pixtext (GtkCList *, gint, gint, const gchar *, guint8, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:621:NC */ extern gint gtk_clist_get_pixtext (GtkCList *, gint, gint, gchar **, guint8 *, GdkPixmap **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:632:NC */ extern void gtk_clist_set_foreground (GtkCList *, gint, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:639:NC */ extern void gtk_clist_set_background (GtkCList *, gint, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:644:NC */ extern void gtk_clist_set_cell_style (GtkCList *, gint, gint, GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:649:NC */ extern GtkStyle *gtk_clist_get_cell_style (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:653:NC */ extern void gtk_clist_set_row_style (GtkCList *, gint, GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:657:NC */ extern GtkStyle *gtk_clist_get_row_style (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:664:NC */ extern void gtk_clist_set_shift (GtkCList *, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:671:NC */ extern void gtk_clist_set_selectable (GtkCList *, gint, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:674:NC */ extern gboolean gtk_clist_get_selectable (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:680:NC */ extern gint gtk_clist_prepend (GtkCList *, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:682:NC */ extern gint gtk_clist_append (GtkCList *, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:688:NC */ extern gint gtk_clist_insert (GtkCList *, gint, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:693:NC */ extern void gtk_clist_remove (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:697:NC */ extern void gtk_clist_set_row_data (GtkCList *, gint, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:702:NC */ extern void gtk_clist_set_row_data_full (GtkCList *, gint, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:708:NC */ extern gpointer gtk_clist_get_row_data (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:714:NC */ extern gint gtk_clist_find_row_from_data (GtkCList *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:718:NC */ extern void gtk_clist_select_row (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:723:NC */ extern void gtk_clist_unselect_row (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:728:NC */ extern void gtk_clist_undo_selection (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:733:NC */ extern void gtk_clist_clear (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:739:NC */ extern gint gtk_clist_get_selection_info (GtkCList *, gint, gint, gint *, gint *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:746:NC */ extern void gtk_clist_select_all (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:749:NC */ extern void gtk_clist_unselect_all (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:752:NC */ extern void gtk_clist_swap_rows (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:757:NC */ extern void gtk_clist_row_move (GtkCList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:762:NC */ extern void gtk_clist_set_compare_func (GtkCList *, GtkCListCompareFunc);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:766:NC */ extern void gtk_clist_set_sort_column (GtkCList *, gint);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:770:NC */ extern void gtk_clist_set_sort_type (GtkCList *, GtkSortType);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:774:NC */ extern void gtk_clist_sort (GtkCList *);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:777:NC */ extern void gtk_clist_set_auto_sort (GtkCList *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkclist.h:782:NC */ extern PangoLayout *_gtk_clist_create_cell_layout (GtkCList *, GtkCListRow *, gint);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:87:NC */ extern GType gtk_combo_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:89:NC */ extern GtkWidget *gtk_combo_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:91:NC */ extern void gtk_combo_set_value_in_list (GtkCombo *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:95:NC */ extern void gtk_combo_set_use_arrows (GtkCombo *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:98:NC */ extern void gtk_combo_set_use_arrows_always (GtkCombo *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:101:NC */ extern void gtk_combo_set_case_sensitive (GtkCombo *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:105:NC */ extern void gtk_combo_set_item_string (GtkCombo *, GtkItem *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:109:NC */ extern void gtk_combo_set_popdown_strings (GtkCombo *, GList *);
/* /usr/include/gtk-2.0/gtk/gtkcombo.h:112:NC */ extern void gtk_combo_disable_activate (GtkCombo *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:175:NC */ extern GType gtk_ctree_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:176:NC */ extern GtkWidget *gtk_ctree_new_with_titles (gint, gint, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:179:NC */ extern GtkWidget *gtk_ctree_new (gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:181:NC */ extern GtkCTreeNode *gtk_ctree_insert_node (GtkCTree *, GtkCTreeNode *, GtkCTreeNode *, gchar **, guint8, GdkPixmap *, GdkBitmap *, GdkPixmap *, GdkBitmap *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:192:NC */ extern void gtk_ctree_remove_node (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:194:NC */ extern GtkCTreeNode *gtk_ctree_insert_gnode (GtkCTree *, GtkCTreeNode *, GtkCTreeNode *, GNode *, GtkCTreeGNodeFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:200:NC */ extern GNode *gtk_ctree_export_to_gnode (GtkCTree *, GNode *, GNode *, GtkCTreeNode *, GtkCTreeGNodeFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:212:NC */ extern void gtk_ctree_post_recursive (GtkCTree *, GtkCTreeNode *, GtkCTreeFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:216:NC */ extern void gtk_ctree_post_recursive_to_depth (GtkCTree *, GtkCTreeNode *, gint, GtkCTreeFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:221:NC */ extern void gtk_ctree_pre_recursive (GtkCTree *, GtkCTreeNode *, GtkCTreeFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:225:NC */ extern void gtk_ctree_pre_recursive_to_depth (GtkCTree *, GtkCTreeNode *, gint, GtkCTreeFunc, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:230:NC */ extern gboolean gtk_ctree_is_viewable (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:232:NC */ extern GtkCTreeNode *gtk_ctree_last (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:234:NC */ extern GtkCTreeNode *gtk_ctree_find_node_ptr (GtkCTree *, GtkCTreeRow *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:236:NC */ extern GtkCTreeNode *gtk_ctree_node_nth (GtkCTree *, guint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:238:NC */ extern gboolean gtk_ctree_find (GtkCTree *, GtkCTreeNode *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:241:NC */ extern gboolean gtk_ctree_is_ancestor (GtkCTree *, GtkCTreeNode *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:244:NC */ extern GtkCTreeNode *gtk_ctree_find_by_row_data (GtkCTree *, GtkCTreeNode *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:248:NC */ extern GList *gtk_ctree_find_all_by_row_data (GtkCTree *, GtkCTreeNode *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:251:NC */ extern GtkCTreeNode *gtk_ctree_find_by_row_data_custom (GtkCTree *, GtkCTreeNode *, gpointer, GCompareFunc);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:256:NC */ extern GList *gtk_ctree_find_all_by_row_data_custom (GtkCTree *, GtkCTreeNode *, gpointer, GCompareFunc);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:260:NC */ extern gboolean gtk_ctree_is_hot_spot (GtkCTree *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:268:NC */ extern void gtk_ctree_move (GtkCTree *, GtkCTreeNode *, GtkCTreeNode *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:272:NC */ extern void gtk_ctree_expand (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:274:NC */ extern void gtk_ctree_expand_recursive (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:276:NC */ extern void gtk_ctree_expand_to_depth (GtkCTree *, GtkCTreeNode *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:279:NC */ extern void gtk_ctree_collapse (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:281:NC */ extern void gtk_ctree_collapse_recursive (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:283:NC */ extern void gtk_ctree_collapse_to_depth (GtkCTree *, GtkCTreeNode *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:286:NC */ extern void gtk_ctree_toggle_expansion (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:288:NC */ extern void gtk_ctree_toggle_expansion_recursive (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:290:NC */ extern void gtk_ctree_select (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:292:NC */ extern void gtk_ctree_select_recursive (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:294:NC */ extern void gtk_ctree_unselect (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:296:NC */ extern void gtk_ctree_unselect_recursive (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:298:NC */ extern void gtk_ctree_real_select_recursive (GtkCTree *, GtkCTreeNode *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:306:NC */ extern void gtk_ctree_node_set_text (GtkCTree *, GtkCTreeNode *, gint, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:310:NC */ extern void gtk_ctree_node_set_pixmap (GtkCTree *, GtkCTreeNode *, gint, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:315:NC */ extern void gtk_ctree_node_set_pixtext (GtkCTree *, GtkCTreeNode *, gint, const gchar *, guint8, GdkPixmap *, GdkBitmap *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:322:NC */ extern void gtk_ctree_set_node_info (GtkCTree *, GtkCTreeNode *, const gchar *, guint8, GdkPixmap *, GdkBitmap *, GdkPixmap *, GdkBitmap *, gboolean, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:332:NC */ extern void gtk_ctree_node_set_shift (GtkCTree *, GtkCTreeNode *, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:337:NC */ extern void gtk_ctree_node_set_selectable (GtkCTree *, GtkCTreeNode *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:340:NC */ extern gboolean gtk_ctree_node_get_selectable (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:342:NC */ extern GtkCellType gtk_ctree_node_get_cell_type (GtkCTree *, GtkCTreeNode *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:345:NC */ extern gboolean gtk_ctree_node_get_text (GtkCTree *, GtkCTreeNode *, gint, gchar **);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:349:NC */ extern gboolean gtk_ctree_node_get_pixmap (GtkCTree *, GtkCTreeNode *, gint, GdkPixmap **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:354:NC */ extern gboolean gtk_ctree_node_get_pixtext (GtkCTree *, GtkCTreeNode *, gint, gchar **, guint8 *, GdkPixmap **, GdkBitmap **);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:361:NC */ extern gboolean gtk_ctree_get_node_info (GtkCTree *, GtkCTreeNode *, gchar **, guint8 *, GdkPixmap **, GdkBitmap **, GdkPixmap **, GdkBitmap **, gboolean *, gboolean *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:371:NC */ extern void gtk_ctree_node_set_row_style (GtkCTree *, GtkCTreeNode *, GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:374:NC */ extern GtkStyle *gtk_ctree_node_get_row_style (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:376:NC */ extern void gtk_ctree_node_set_cell_style (GtkCTree *, GtkCTreeNode *, gint, GtkStyle *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:380:NC */ extern GtkStyle *gtk_ctree_node_get_cell_style (GtkCTree *, GtkCTreeNode *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:383:NC */ extern void gtk_ctree_node_set_foreground (GtkCTree *, GtkCTreeNode *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:386:NC */ extern void gtk_ctree_node_set_background (GtkCTree *, GtkCTreeNode *, const GdkColor *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:389:NC */ extern void gtk_ctree_node_set_row_data (GtkCTree *, GtkCTreeNode *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:392:NC */ extern void gtk_ctree_node_set_row_data_full (GtkCTree *, GtkCTreeNode *, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:396:NC */ extern gpointer gtk_ctree_node_get_row_data (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:398:NC */ extern void gtk_ctree_node_moveto (GtkCTree *, GtkCTreeNode *, gint, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:403:NC */ extern GtkVisibility gtk_ctree_node_is_visible (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:410:NC */ extern void gtk_ctree_set_indent (GtkCTree *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:412:NC */ extern void gtk_ctree_set_spacing (GtkCTree *, gint);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:414:NC */ extern void gtk_ctree_set_show_stub (GtkCTree *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:416:NC */ extern void gtk_ctree_set_line_style (GtkCTree *, GtkCTreeLineStyle);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:418:NC */ extern void gtk_ctree_set_expander_style (GtkCTree *, GtkCTreeExpanderStyle);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:420:NC */ extern void gtk_ctree_set_drag_compare_func (GtkCTree *, GtkCTreeCompareDragFunc);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:427:NC */ extern void gtk_ctree_sort_node (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:429:NC */ extern void gtk_ctree_sort_recursive (GtkCTree *, GtkCTreeNode *);
/* /usr/include/gtk-2.0/gtk/gtkctree.h:439:NC */ extern GType gtk_ctree_node_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:88:NC */ extern GType gtk_curve_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:89:NC */ extern GtkWidget *gtk_curve_new (void);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:90:NC */ extern void gtk_curve_reset (GtkCurve *);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:91:NC */ extern void gtk_curve_set_gamma (GtkCurve *, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:92:NC */ extern void gtk_curve_set_range (GtkCurve *, gfloat, gfloat, gfloat, gfloat);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:95:NC */ extern void gtk_curve_get_vector (GtkCurve *, int, gfloat *);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:97:NC */ extern void gtk_curve_set_vector (GtkCurve *, int, gfloat *);
/* /usr/include/gtk-2.0/gtk/gtkcurve.h:99:NC */ extern void gtk_curve_set_curve_type (GtkCurve *, GtkCurveType);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:102:NC */ extern GType gtk_file_selection_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:103:NC */ extern GtkWidget *gtk_file_selection_new (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:104:NC */ extern void gtk_file_selection_set_filename (GtkFileSelection *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:106:NC */ extern const gchar *gtk_file_selection_get_filename (GtkFileSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:108:NC */ extern void gtk_file_selection_complete (GtkFileSelection *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:110:NC */ extern void gtk_file_selection_show_fileop_buttons (GtkFileSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:111:NC */ extern void gtk_file_selection_hide_fileop_buttons (GtkFileSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:113:NC */ extern gchar **gtk_file_selection_get_selections (GtkFileSelection *);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:115:NC */ extern void gtk_file_selection_set_select_multiple (GtkFileSelection *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkfilesel.h:117:NC */ extern gboolean gtk_file_selection_get_select_multiple (GtkFileSelection *);
/* /usr/include/gtk-2.0/gtk/gtkgamma.h:74:NC */ extern GType gtk_gamma_curve_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkgamma.h:75:NC */ extern GtkWidget *gtk_gamma_curve_new (void);
/* /usr/include/gtk-2.0/gtk/gtkinputdialog.h:93:NC */ extern GType gtk_input_dialog_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkinputdialog.h:94:NC */ extern GtkWidget *gtk_input_dialog_new (void);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:132:NC */ extern GType gtk_item_factory_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:137:NC */ extern GtkItemFactory *gtk_item_factory_new (GType, const gchar *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:140:NC */ extern void gtk_item_factory_construct (GtkItemFactory *, GType, const gchar *, GtkAccelGroup *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:147:NC */ extern void gtk_item_factory_add_foreign (GtkWidget *, const gchar *, GtkAccelGroup *, guint, GdkModifierType);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:153:NC */ extern GtkItemFactory *gtk_item_factory_from_widget (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:154:NC */ extern const gchar *gtk_item_factory_path_from_widget (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:156:NC */ extern GtkWidget *gtk_item_factory_get_item (GtkItemFactory *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:158:NC */ extern GtkWidget *gtk_item_factory_get_widget (GtkItemFactory *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:160:NC */ extern GtkWidget *gtk_item_factory_get_widget_by_action (GtkItemFactory *, guint);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:162:NC */ extern GtkWidget *gtk_item_factory_get_item_by_action (GtkItemFactory *, guint);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:165:NC */ extern void gtk_item_factory_create_item (GtkItemFactory *, GtkItemFactoryEntry *, gpointer, guint);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:169:NC */ extern void gtk_item_factory_create_items (GtkItemFactory *, guint, GtkItemFactoryEntry *, gpointer);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:173:NC */ extern void gtk_item_factory_delete_item (GtkItemFactory *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:175:NC */ extern void gtk_item_factory_delete_entry (GtkItemFactory *, GtkItemFactoryEntry *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:177:NC */ extern void gtk_item_factory_delete_entries (GtkItemFactory *, guint, GtkItemFactoryEntry *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:180:NC */ extern void gtk_item_factory_popup (GtkItemFactory *, guint, guint, guint, guint32);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:185:NC */ extern void gtk_item_factory_popup_with_data (GtkItemFactory *, gpointer, GDestroyNotify, guint, guint, guint, guint32);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:192:NC */ extern gpointer gtk_item_factory_popup_data (GtkItemFactory *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:193:NC */ extern gpointer gtk_item_factory_popup_data_from_widget (GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:194:NC */ extern void gtk_item_factory_set_translate_func (GtkItemFactory *, GtkTranslateFunc, gpointer, GDestroyNotify);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:219:NC */ extern void gtk_item_factory_create_items_ac (GtkItemFactory *, guint, GtkItemFactoryEntry *, gpointer, guint);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:225:NC */ extern GtkItemFactory *gtk_item_factory_from_path (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:226:NC */ extern void gtk_item_factory_create_menu_entries (guint, GtkMenuEntry *);
/* /usr/include/gtk-2.0/gtk/gtkitemfactory.h:228:NC */ extern void gtk_item_factories_path_delete (const gchar *, const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:84:NC */ extern GType gtk_list_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtklist.h:85:NC */ extern GtkWidget *gtk_list_new (void);
/* /usr/include/gtk-2.0/gtk/gtklist.h:86:NC */ extern void gtk_list_insert_items (GtkList *, GList *, gint);
/* /usr/include/gtk-2.0/gtk/gtklist.h:89:NC */ extern void gtk_list_append_items (GtkList *, GList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:91:NC */ extern void gtk_list_prepend_items (GtkList *, GList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:93:NC */ extern void gtk_list_remove_items (GtkList *, GList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:95:NC */ extern void gtk_list_remove_items_no_unref (GtkList *, GList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:97:NC */ extern void gtk_list_clear_items (GtkList *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtklist.h:100:NC */ extern void gtk_list_select_item (GtkList *, gint);
/* /usr/include/gtk-2.0/gtk/gtklist.h:102:NC */ extern void gtk_list_unselect_item (GtkList *, gint);
/* /usr/include/gtk-2.0/gtk/gtklist.h:104:NC */ extern void gtk_list_select_child (GtkList *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:106:NC */ extern void gtk_list_unselect_child (GtkList *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:108:NC */ extern gint gtk_list_child_position (GtkList *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:110:NC */ extern void gtk_list_set_selection_mode (GtkList *, GtkSelectionMode);
/* /usr/include/gtk-2.0/gtk/gtklist.h:113:NC */ extern void gtk_list_extend_selection (GtkList *, GtkScrollType, gfloat, gboolean);
/* /usr/include/gtk-2.0/gtk/gtklist.h:117:NC */ extern void gtk_list_start_selection (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:118:NC */ extern void gtk_list_end_selection (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:119:NC */ extern void gtk_list_select_all (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:120:NC */ extern void gtk_list_unselect_all (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:121:NC */ extern void gtk_list_scroll_horizontal (GtkList *, GtkScrollType, gfloat);
/* /usr/include/gtk-2.0/gtk/gtklist.h:124:NC */ extern void gtk_list_scroll_vertical (GtkList *, GtkScrollType, gfloat);
/* /usr/include/gtk-2.0/gtk/gtklist.h:127:NC */ extern void gtk_list_toggle_add_mode (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:128:NC */ extern void gtk_list_toggle_focus_row (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:129:NC */ extern void gtk_list_toggle_row (GtkList *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:131:NC */ extern void gtk_list_undo_selection (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklist.h:132:NC */ extern void gtk_list_end_drag_selection (GtkList *);
/* /usr/include/gtk-2.0/gtk/gtklistitem.h:78:NC */ extern GType gtk_list_item_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtklistitem.h:79:NC */ extern GtkWidget *gtk_list_item_new (void);
/* /usr/include/gtk-2.0/gtk/gtklistitem.h:80:NC */ extern GtkWidget *gtk_list_item_new_with_label (const gchar *);
/* /usr/include/gtk-2.0/gtk/gtklistitem.h:81:NC */ extern void gtk_list_item_select (GtkListItem *);
/* /usr/include/gtk-2.0/gtk/gtklistitem.h:82:NC */ extern void gtk_list_item_deselect (GtkListItem *);
/* /usr/include/gtk-2.0/gtk/gtkoldeditable.h:116:NC */ extern GType gtk_old_editable_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkoldeditable.h:117:NC */ extern void gtk_old_editable_claim_selection (GtkOldEditable *, gboolean, guint32);
/* /usr/include/gtk-2.0/gtk/gtkoldeditable.h:120:NC */ extern void gtk_old_editable_changed (GtkOldEditable *);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:73:NC */ extern GType gtk_option_menu_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:74:NC */ extern GtkWidget *gtk_option_menu_new (void);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:75:NC */ extern GtkWidget *gtk_option_menu_get_menu (GtkOptionMenu *);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:76:NC */ extern void gtk_option_menu_set_menu (GtkOptionMenu *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:78:NC */ extern void gtk_option_menu_remove_menu (GtkOptionMenu *);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:79:NC */ extern gint gtk_option_menu_get_history (GtkOptionMenu *);
/* /usr/include/gtk-2.0/gtk/gtkoptionmenu.h:80:NC */ extern void gtk_option_menu_set_history (GtkOptionMenu *, guint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:89:NC */ extern GType gtk_preview_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:90:NC */ extern void gtk_preview_uninit (void);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:91:NC */ extern GtkWidget *gtk_preview_new (GtkPreviewType);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:92:NC */ extern void gtk_preview_size (GtkPreview *, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:95:NC */ extern void gtk_preview_put (GtkPreview *, GdkWindow *, GdkGC *, gint, gint, gint, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:104:NC */ extern void gtk_preview_draw_row (GtkPreview *, guchar *, gint, gint, gint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:109:NC */ extern void gtk_preview_set_expand (GtkPreview *, gboolean);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:112:NC */ extern void gtk_preview_set_gamma (double);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:113:NC */ extern void gtk_preview_set_color_cube (guint, guint, guint, guint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:117:NC */ extern void gtk_preview_set_install_cmap (gint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:118:NC */ extern void gtk_preview_set_reserved (gint);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:119:NC */ extern void gtk_preview_set_dither (GtkPreview *, GdkRgbDither);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:121:NC */ extern GdkVisual *gtk_preview_get_visual (void);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:122:NC */ extern GdkColormap *gtk_preview_get_cmap (void);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:123:NC */ extern GtkPreviewInfo *gtk_preview_get_info (void);
/* /usr/include/gtk-2.0/gtk/gtkpreview.h:130:NC */ extern void gtk_preview_reset (void);
/* /usr/include/gtk-2.0/gtk/gtktipsquery.h:96:NC */ extern GType gtk_tips_query_get_type (void);
/* /usr/include/gtk-2.0/gtk/gtktipsquery.h:97:NC */ extern GtkWidget *gtk_tips_query_new (void);
/* /usr/include/gtk-2.0/gtk/gtktipsquery.h:98:NC */ extern void gtk_tips_query_start_query (GtkTipsQuery *);
/* /usr/include/gtk-2.0/gtk/gtktipsquery.h:99:NC */ extern void gtk_tips_query_stop_query (GtkTipsQuery *);
/* /usr/include/gtk-2.0/gtk/gtktipsquery.h:100:NC */ extern void gtk_tips_query_set_caller (GtkTipsQuery *, GtkWidget *);
/* /usr/include/gtk-2.0/gtk/gtktipsquery.h:102:NC */ extern void gtk_tips_query_set_labels (GtkTipsQuery *, const gchar *, const gchar *);
